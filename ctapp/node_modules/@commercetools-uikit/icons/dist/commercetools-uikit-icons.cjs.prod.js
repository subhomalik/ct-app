'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
require('@commercetools-uikit/utils');
var react = require('@emotion/react');
var designSystem = require('@commercetools-uikit/design-system');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

function ownKeys$20(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$20(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$20(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$20(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$20 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$20 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$20[size], "px"),
        height: "".concat(iconSizes$20[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$20.big, "px"),
        height: "".concat(iconSizes$20.big, "px")
      };
  }
};
const getSizeStyle$20 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$20(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$20 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$20 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$20(props.color), ";}&,image{", getSizeStyle$20(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleDown = props => jsxRuntime.jsx("svg", _objectSpread$20(_objectSpread$20({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m20.644 9.311-7.98 8.003a.8.8 0 0 1-.308.201q-.166.06-.356.06t-.356-.06a.8.8 0 0 1-.309-.201L3.332 9.31A1.13 1.13 0 0 1 3 8.48q0-.498.356-.855a1.14 1.14 0 0 1 .831-.356q.476 0 .831.356L12 14.607l6.982-6.982q.332-.333.818-.332.487 0 .844.356.356.355.356.831 0 .475-.356.831"
  })
}));
SvgAngleDown.displayName = 'SvgAngleDown';
const AngleDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleDown, _objectSpread$20(_objectSpread$20({}, props), {}, {
      className: createClass(getIconStyles$20(props))
    }));
  }
});
AngleDownIcon.displayName = 'AngleDownIcon';
var AngleDownIcon$1 = AngleDownIcon;

function ownKeys$1$(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1$(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1$(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1$(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1$ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1$ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1$[size], "px"),
        height: "".concat(iconSizes$1$[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1$.big, "px"),
        height: "".concat(iconSizes$1$.big, "px")
      };
  }
};
const getSizeStyle$1$ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1$(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1$ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1$ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1$(props.color), ";}&,image{", getSizeStyle$1$(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleLeft = props => jsxRuntime.jsx("svg", _objectSpread$1$(_objectSpread$1$({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.264 20.644-8.003-7.98a.8.8 0 0 1-.201-.308Q7 12.19 7 12t.06-.356a.8.8 0 0 1 .201-.309l8.003-8.003Q15.596 3 16.095 3t.855.356.356.831q0 .476-.356.831L9.968 12l6.982 6.982q.333.332.332.818 0 .487-.356.844a1.14 1.14 0 0 1-.831.356q-.476 0-.831-.356"
  })
}));
SvgAngleLeft.displayName = 'SvgAngleLeft';
const AngleLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleLeft, _objectSpread$1$(_objectSpread$1$({}, props), {}, {
      className: createClass(getIconStyles$1$(props))
    }));
  }
});
AngleLeftIcon.displayName = 'AngleLeftIcon';
var AngleLeftIcon$1 = AngleLeftIcon;

function ownKeys$1_(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1_(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1_(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1_(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1_ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1_ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1_[size], "px"),
        height: "".concat(iconSizes$1_[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1_.big, "px"),
        height: "".concat(iconSizes$1_.big, "px")
      };
  }
};
const getSizeStyle$1_ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1_(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1_ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1_ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1_(props.color), ";}&,image{", getSizeStyle$1_(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleRight = props => jsxRuntime.jsx("svg", _objectSpread$1_(_objectSpread$1_({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.356 20.644A1.15 1.15 0 0 1 7 19.802q0-.486.356-.841l6.948-6.95L7.332 5.04A1.13 1.13 0 0 1 7 4.21q0-.499.356-.854Q7.712 3 8.198 3q.485 0 .842.356l7.968 7.992a.84.84 0 0 1 .202.308q.06.166.059.356 0 .19-.059.356a.8.8 0 0 1-.202.308l-7.992 7.992a1.1 1.1 0 0 1-.818.332q-.486 0-.842-.356"
  })
}));
SvgAngleRight.displayName = 'SvgAngleRight';
const AngleRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleRight, _objectSpread$1_(_objectSpread$1_({}, props), {}, {
      className: createClass(getIconStyles$1_(props))
    }));
  }
});
AngleRightIcon.displayName = 'AngleRightIcon';
var AngleRightIcon$1 = AngleRightIcon;

function ownKeys$1Z(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1Z(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Z(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Z(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1Z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Z[size], "px"),
        height: "".concat(iconSizes$1Z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Z.big, "px"),
        height: "".concat(iconSizes$1Z.big, "px")
      };
  }
};
const getSizeStyle$1Z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Z(props.color), ";}&,image{", getSizeStyle$1Z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleThinLeft = props => jsxRuntime.jsx("svg", _objectSpread$1Z(_objectSpread$1Z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M16.336 20.888c-.117 0-.195-.038-.273-.15l-8.634-8.25a.353.353 0 0 1 0-.525l8.634-8.288c.156-.15.39-.15.546 0a.353.353 0 0 1 0 .525L8.25 12.225l8.36 7.988a.353.353 0 0 1 0 .525.34.34 0 0 1-.274.15"
  })
}));
SvgAngleThinLeft.displayName = 'SvgAngleThinLeft';
const AngleThinLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleThinLeft, _objectSpread$1Z(_objectSpread$1Z({}, props), {}, {
      className: createClass(getIconStyles$1Z(props))
    }));
  }
});
AngleThinLeftIcon.displayName = 'AngleThinLeftIcon';
var AngleThinLeftIcon$1 = AngleThinLeftIcon;

function ownKeys$1Y(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1Y(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Y(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Y(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1Y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Y[size], "px"),
        height: "".concat(iconSizes$1Y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Y.big, "px"),
        height: "".concat(iconSizes$1Y.big, "px")
      };
  }
};
const getSizeStyle$1Y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Y(props.color), ";}&,image{", getSizeStyle$1Y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleThinRight = props => jsxRuntime.jsx("svg", _objectSpread$1Y(_objectSpread$1Y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M7.39 3c.118 0 .196.038.274.15l8.633 8.25a.353.353 0 0 1 0 .525l-8.633 8.288a.39.39 0 0 1-.547 0 .353.353 0 0 1 0-.525l8.36-8.025-8.36-7.988a.353.353 0 0 1 0-.525.34.34 0 0 1 .274-.15"
  })
}));
SvgAngleThinRight.displayName = 'SvgAngleThinRight';
const AngleThinRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleThinRight, _objectSpread$1Y(_objectSpread$1Y({}, props), {}, {
      className: createClass(getIconStyles$1Y(props))
    }));
  }
});
AngleThinRightIcon.displayName = 'AngleThinRightIcon';
var AngleThinRightIcon$1 = AngleThinRightIcon;

function ownKeys$1X(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1X(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1X(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1X(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1X = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1X = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1X[size], "px"),
        height: "".concat(iconSizes$1X[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1X.big, "px"),
        height: "".concat(iconSizes$1X.big, "px")
      };
  }
};
const getSizeStyle$1X = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1X(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1X = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1X = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1X(props.color), ";}&,image{", getSizeStyle$1X(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleUpDown = props => jsxRuntime.jsx("svg", _objectSpread$1X(_objectSpread$1X({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.234 7.942A.78.78 0 0 1 8 7.37q0-.338.234-.572l3.564-3.564a.8.8 0 0 1 .26-.182.76.76 0 0 1 .56 0 .76.76 0 0 1 .272.182l3.564 3.564a.78.78 0 0 1 .234.572.78.78 0 0 1-.234.572.78.78 0 0 1-.572.234.78.78 0 0 1-.573-.234l-2.965-2.965-2.965 2.965a.78.78 0 0 1-.573.234.78.78 0 0 1-.572-.234M12.344 21a.754.754 0 0 1-.546-.234l-3.564-3.564A.78.78 0 0 1 8 16.63q0-.338.234-.572a.78.78 0 0 1 .572-.234q.339 0 .573.234l2.965 2.965 2.965-2.965a.78.78 0 0 1 .573-.234q.338 0 .572.234a.78.78 0 0 1 .234.572.78.78 0 0 1-.234.572l-3.564 3.564a.8.8 0 0 1-.26.182.8.8 0 0 1-.286.052"
  })
}));
SvgAngleUpDown.displayName = 'SvgAngleUpDown';
const AngleUpDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleUpDown, _objectSpread$1X(_objectSpread$1X({}, props), {}, {
      className: createClass(getIconStyles$1X(props))
    }));
  }
});
AngleUpDownIcon.displayName = 'AngleUpDownIcon';
var AngleUpDownIcon$1 = AngleUpDownIcon;

function ownKeys$1W(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1W(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1W(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1W(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1W = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1W = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1W[size], "px"),
        height: "".concat(iconSizes$1W[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1W.big, "px"),
        height: "".concat(iconSizes$1W.big, "px")
      };
  }
};
const getSizeStyle$1W = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1W(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1W = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1W = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1W(props.color), ";}&,image{", getSizeStyle$1W(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleUp = props => jsxRuntime.jsx("svg", _objectSpread$1W(_objectSpread$1W({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M20.644 16.87a1.15 1.15 0 0 1-.842.355 1.15 1.15 0 0 1-.841-.356l-6.95-6.948-6.971 6.972a1.13 1.13 0 0 1-.83.332q-.499 0-.854-.356A1.15 1.15 0 0 1 3 16.027q0-.486.356-.841l7.992-7.969a.8.8 0 0 1 .308-.202q.166-.06.356-.059.19 0 .356.06.165.058.308.201l7.992 7.992q.332.333.332.818 0 .486-.356.842"
  })
}));
SvgAngleUp.displayName = 'SvgAngleUp';
const AngleUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleUp, _objectSpread$1W(_objectSpread$1W({}, props), {}, {
      className: createClass(getIconStyles$1W(props))
    }));
  }
});
AngleUpIcon.displayName = 'AngleUpIcon';
var AngleUpIcon$1 = AngleUpIcon;

function ownKeys$1V(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1V(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1V(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1V(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1V = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1V = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1V[size], "px"),
        height: "".concat(iconSizes$1V[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1V.big, "px"),
        height: "".concat(iconSizes$1V.big, "px")
      };
  }
};
const getSizeStyle$1V = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1V(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1V = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1V = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1V(props.color), ";}&,image{", getSizeStyle$1V(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowDown = props => jsxRuntime.jsx("svg", _objectSpread$1V(_objectSpread$1V({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.046 21q-.184 0-.345-.058a.8.8 0 0 1-.299-.195l-5.15-5.15A.86.86 0 0 1 6 14.966q0-.378.253-.655a.9.9 0 0 1 .655-.276q.38 0 .655.276l3.563 3.564V3.92q0-.392.265-.656A.9.9 0 0 1 12.046 3q.391 0 .656.264a.9.9 0 0 1 .264.656v13.954l3.586-3.564a.9.9 0 0 1 .631-.264.86.86 0 0 1 .656.264.87.87 0 0 1 .253.644q0 .39-.253.644l-5.15 5.15a.8.8 0 0 1-.298.194 1 1 0 0 1-.345.058"
  })
}));
SvgArrowDown.displayName = 'SvgArrowDown';
const ArrowDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowDown, _objectSpread$1V(_objectSpread$1V({}, props), {}, {
      className: createClass(getIconStyles$1V(props))
    }));
  }
});
ArrowDownIcon.displayName = 'ArrowDownIcon';
var ArrowDownIcon$1 = ArrowDownIcon;

function ownKeys$1U(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1U(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1U(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1U(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1U = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1U = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1U[size], "px"),
        height: "".concat(iconSizes$1U[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1U.big, "px"),
        height: "".concat(iconSizes$1U.big, "px")
      };
  }
};
const getSizeStyle$1U = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1U(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1U = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1U = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1U(props.color), ";}&,image{", getSizeStyle$1U(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowLeft = props => jsxRuntime.jsx("svg", _objectSpread$1U(_objectSpread$1U({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M9.44 18.475v-4.704h10.129c.79 0 1.431-.66 1.431-1.473s-.64-1.474-1.431-1.474H9.439V6L3 12.298z"
  })
}));
SvgArrowLeft.displayName = 'SvgArrowLeft';
const ArrowLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowLeft, _objectSpread$1U(_objectSpread$1U({}, props), {}, {
      className: createClass(getIconStyles$1U(props))
    }));
  }
});
ArrowLeftIcon.displayName = 'ArrowLeftIcon';
var ArrowLeftIcon$1 = ArrowLeftIcon;

function ownKeys$1T(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1T(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1T(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1T(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1T = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1T = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1T[size], "px"),
        height: "".concat(iconSizes$1T[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1T.big, "px"),
        height: "".concat(iconSizes$1T.big, "px")
      };
  }
};
const getSizeStyle$1T = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1T(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1T = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1T = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1T(props.color), ";}&,image{", getSizeStyle$1T(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowLongDown = props => jsxRuntime.jsx("svg", _objectSpread$1T(_objectSpread$1T({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.084 17.7V3.97q0-.412.279-.69a.94.94 0 0 1 .69-.279q.411 0 .69.279a.94.94 0 0 1 .278.69V17.7l1.356-1.356a.86.86 0 0 1 .667-.254.99.99 0 0 1 .69.302.92.92 0 0 1 .266.679q0 .411-.266.678l-3.003 2.979q-.146.145-.315.217a.7.7 0 0 1-.364.049q-.194 0-.363-.06a.86.86 0 0 1-.315-.207l-3.003-3.003a.9.9 0 0 1-.278-.69.95.95 0 0 1 .278-.666.94.94 0 0 1 .691-.29q.399 0 .666.266z"
  })
}));
SvgArrowLongDown.displayName = 'SvgArrowLongDown';
const ArrowLongDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowLongDown, _objectSpread$1T(_objectSpread$1T({}, props), {}, {
      className: createClass(getIconStyles$1T(props))
    }));
  }
});
ArrowLongDownIcon.displayName = 'ArrowLongDownIcon';
var ArrowLongDownIcon$1 = ArrowLongDownIcon;

function ownKeys$1S(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1S(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1S(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1S(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1S = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1S = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1S[size], "px"),
        height: "".concat(iconSizes$1S[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1S.big, "px"),
        height: "".concat(iconSizes$1S.big, "px")
      };
  }
};
const getSizeStyle$1S = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1S(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1S = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1S = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1S(props.color), ";}&,image{", getSizeStyle$1S(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowRight = props => jsxRuntime.jsx("svg", _objectSpread$1S(_objectSpread$1S({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.31 17.84a.87.87 0 0 1-.253-.645q0-.39.253-.643l3.587-3.586H3.92a.89.89 0 0 1-.655-.265.89.89 0 0 1-.265-.655q0-.391.265-.656a.9.9 0 0 1 .655-.264h13.977L14.31 7.54a.87.87 0 0 1-.253-.643q0-.392.253-.644A.87.87 0 0 1 14.954 6q.39 0 .644.253l5.15 5.15a.8.8 0 0 1 .195.298q.057.16.057.345t-.057.345a.8.8 0 0 1-.196.299l-5.15 5.15a.87.87 0 0 1-.643.252.87.87 0 0 1-.644-.253"
  })
}));
SvgArrowRight.displayName = 'SvgArrowRight';
const ArrowRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowRight, _objectSpread$1S(_objectSpread$1S({}, props), {}, {
      className: createClass(getIconStyles$1S(props))
    }));
  }
});
ArrowRightIcon.displayName = 'ArrowRightIcon';
var ArrowRightIcon$1 = ArrowRightIcon;

function ownKeys$1R(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1R(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1R(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1R(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1R = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1R = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1R[size], "px"),
        height: "".concat(iconSizes$1R[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1R.big, "px"),
        height: "".concat(iconSizes$1R.big, "px")
      };
  }
};
const getSizeStyle$1R = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1R(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1R = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1R = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1R(props.color), ";}&,image{", getSizeStyle$1R(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowTriangleDown = props => jsxRuntime.jsx("svg", _objectSpread$1R(_objectSpread$1R({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M12 20 3 5h18"
  })
}));
SvgArrowTriangleDown.displayName = 'SvgArrowTriangleDown';
const ArrowTriangleDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowTriangleDown, _objectSpread$1R(_objectSpread$1R({}, props), {}, {
      className: createClass(getIconStyles$1R(props))
    }));
  }
});
ArrowTriangleDownIcon.displayName = 'ArrowTriangleDownIcon';
var ArrowTriangleDownIcon$1 = ArrowTriangleDownIcon;

function ownKeys$1Q(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1Q(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Q(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Q(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1Q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Q[size], "px"),
        height: "".concat(iconSizes$1Q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Q.big, "px"),
        height: "".concat(iconSizes$1Q.big, "px")
      };
  }
};
const getSizeStyle$1Q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Q(props.color), ";}&,image{", getSizeStyle$1Q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowTriangleUp = props => jsxRuntime.jsx("svg", _objectSpread$1Q(_objectSpread$1Q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m12 4 9 15H3"
  })
}));
SvgArrowTriangleUp.displayName = 'SvgArrowTriangleUp';
const ArrowTriangleUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowTriangleUp, _objectSpread$1Q(_objectSpread$1Q({}, props), {}, {
      className: createClass(getIconStyles$1Q(props))
    }));
  }
});
ArrowTriangleUpIcon.displayName = 'ArrowTriangleUpIcon';
var ArrowTriangleUpIcon$1 = ArrowTriangleUpIcon;

function ownKeys$1P(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1P(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1P(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1P(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1P = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1P = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1P[size], "px"),
        height: "".concat(iconSizes$1P[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1P.big, "px"),
        height: "".concat(iconSizes$1P.big, "px")
      };
  }
};
const getSizeStyle$1P = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1P(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1P = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1P = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1P(props.color), ";}&,image{", getSizeStyle$1P(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowUp = props => jsxRuntime.jsx("svg", _objectSpread$1P(_objectSpread$1P({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.046 21a.89.89 0 0 1-.655-.265.89.89 0 0 1-.265-.654V6.126L7.54 9.69a.9.9 0 0 1-.632.264.86.86 0 0 1-.655-.264A.87.87 0 0 1 6 9.046q0-.39.253-.644l5.15-5.15a.8.8 0 0 1 .298-.195q.16-.057.345-.057t.345.057a.8.8 0 0 1 .299.196l5.15 5.15q.252.252.252.631a.94.94 0 0 1-.253.656.9.9 0 0 1-.656.276.9.9 0 0 1-.654-.276l-3.563-3.564v13.955a.9.9 0 0 1-.264.654.9.9 0 0 1-.656.265"
  })
}));
SvgArrowUp.displayName = 'SvgArrowUp';
const ArrowUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowUp, _objectSpread$1P(_objectSpread$1P({}, props), {}, {
      className: createClass(getIconStyles$1P(props))
    }));
  }
});
ArrowUpIcon.displayName = 'ArrowUpIcon';
var ArrowUpIcon$1 = ArrowUpIcon;

function ownKeys$1O(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1O(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1O(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1O(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1O = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1O = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1O[size], "px"),
        height: "".concat(iconSizes$1O[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1O.big, "px"),
        height: "".concat(iconSizes$1O.big, "px")
      };
  }
};
const getSizeStyle$1O = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1O(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1O = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1O = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1O(props.color), ";}&,image{", getSizeStyle$1O(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowsMinimize = props => jsxRuntime.jsx("svg", _objectSpread$1O(_objectSpread$1O({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#000",
    d: "M10.12 15.196 4.574 20.74a.9.9 0 0 1-.658.259.9.9 0 0 1-.658-.259.9.9 0 0 1-.258-.657q0-.4.258-.658l5.546-5.546H5.42a.9.9 0 0 1-.67-.27.9.9 0 0 1-.27-.67q0-.4.27-.67a.9.9 0 0 1 .67-.27h5.64q.4 0 .67.27t.27.67v5.64a.9.9 0 0 1-.27.67.9.9 0 0 1-.67.27.9.9 0 0 1-.67-.27.9.9 0 0 1-.27-.67zm5.076-5.076h3.384q.4 0 .67.27t.27.67a.9.9 0 0 1-.27.67.9.9 0 0 1-.67.27h-5.64a.9.9 0 0 1-.67-.27.9.9 0 0 1-.27-.67V5.42q0-.4.27-.67a.9.9 0 0 1 .67-.27q.4 0 .67.27t.27.67v3.384l5.546-5.546A.9.9 0 0 1 20.084 3q.399 0 .657.258a.9.9 0 0 1 .259.658.9.9 0 0 1-.259.658z"
  })
}));
SvgArrowsMinimize.displayName = 'SvgArrowsMinimize';
const ArrowsMinimizeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowsMinimize, _objectSpread$1O(_objectSpread$1O({}, props), {}, {
      className: createClass(getIconStyles$1O(props))
    }));
  }
});
ArrowsMinimizeIcon.displayName = 'ArrowsMinimizeIcon';
var ArrowsMinimizeIcon$1 = ArrowsMinimizeIcon;

function ownKeys$1N(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1N(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1N(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1N(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1N = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1N = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1N[size], "px"),
        height: "".concat(iconSizes$1N[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1N.big, "px"),
        height: "".concat(iconSizes$1N.big, "px")
      };
  }
};
const getSizeStyle$1N = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1N(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1N = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1N = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1N(props.color), ";}&,image{", getSizeStyle$1N(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrows = props => jsxRuntime.jsx("svg", _objectSpread$1N(_objectSpread$1N({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 10.12a.9.9 0 0 1-.67-.27.9.9 0 0 1-.27-.67V6.22l-1.034 1.033a.91.91 0 0 1-.67.282.92.92 0 0 1-.67-.282.92.92 0 0 1-.281-.67q0-.387.282-.67l2.655-2.655a.8.8 0 0 1 .306-.2Q11.813 3 12 3q.188 0 .352.058a.8.8 0 0 1 .306.2l2.679 2.68a.88.88 0 0 1 .27.669.96.96 0 0 1-.294.67.93.93 0 0 1-.681.282.93.93 0 0 1-.682-.282l-1.01-1.058V9.18q0 .4-.27.67a.9.9 0 0 1-.67.27M12 21q-.188 0-.352-.06a.8.8 0 0 1-.306-.199l-2.679-2.678a.87.87 0 0 1-.27-.67.96.96 0 0 1 .294-.67.99.99 0 0 1 .693-.294.8.8 0 0 1 .67.294l1.01 1.058V14.82q0-.4.27-.67t.67-.27q.4 0 .67.27t.27.67v2.96l1.034-1.057a.85.85 0 0 1 .658-.282q.399 0 .681.282a.93.93 0 0 1 .282.682.93.93 0 0 1-.282.681l-2.655 2.656a.8.8 0 0 1-.306.199Q12.188 21 12 21m4.723-5.687a.99.99 0 0 1-.294-.693.8.8 0 0 1 .294-.67l1.058-1.01H14.82a.9.9 0 0 1-.67-.27.9.9 0 0 1-.27-.67q0-.4.27-.67t.67-.27h2.96l-1.057-1.034a.85.85 0 0 1-.282-.658q0-.399.282-.681a.93.93 0 0 1 .682-.282q.399 0 .681.282l2.656 2.655a.8.8 0 0 1 .2.306Q21 11.813 21 12q0 .188-.058.352a.8.8 0 0 1-.2.306l-2.68 2.679a.87.87 0 0 1-.669.27.96.96 0 0 1-.67-.294m-10.81 0-2.655-2.655a.8.8 0 0 1-.199-.306Q3 12.188 3 12q0-.188.06-.352a.8.8 0 0 1 .198-.306l2.68-2.679a.88.88 0 0 1 .646-.258q.387 0 .67.282a.9.9 0 0 1 .27.681.97.97 0 0 1-.294.682l-1.01 1.01h2.96q.4 0 .67.27t.27.67-.27.67a.9.9 0 0 1-.67.27H6.22l1.057 1.034a.85.85 0 0 1 .282.658.93.93 0 0 1-.282.681.93.93 0 0 1-.682.282.93.93 0 0 1-.681-.282"
  })
}));
SvgArrows.displayName = 'SvgArrows';
const ArrowsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrows, _objectSpread$1N(_objectSpread$1N({}, props), {}, {
      className: createClass(getIconStyles$1N(props))
    }));
  }
});
ArrowsIcon.displayName = 'ArrowsIcon';
var ArrowsIcon$1 = ArrowsIcon;

function ownKeys$1M(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1M(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1M(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1M(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1M = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1M = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1M[size], "px"),
        height: "".concat(iconSizes$1M[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1M.big, "px"),
        height: "".concat(iconSizes$1M.big, "px")
      };
  }
};
const getSizeStyle$1M = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1M(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1M = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1M = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1M(props.color), ";}&,image{", getSizeStyle$1M(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBack = props => jsxRuntime.jsx("svg", _objectSpread$1M(_objectSpread$1M({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m8.402 17.84-5.15-5.15a.8.8 0 0 1-.194-.3A1 1 0 0 1 3 12.047q0-.184.058-.345a.8.8 0 0 1 .195-.299l5.15-5.15A.86.86 0 0 1 9.034 6q.379 0 .655.253a.9.9 0 0 1 .276.655.9.9 0 0 1-.276.655l-3.564 3.563h13.955a.9.9 0 0 1 .654.264.9.9 0 0 1 .265.656q0 .39-.265.655a.89.89 0 0 1-.654.264H6.126l3.564 3.587a.9.9 0 0 1 .264.631.86.86 0 0 1-.264.656.87.87 0 0 1-.644.253.87.87 0 0 1-.644-.253"
  })
}));
SvgBack.displayName = 'SvgBack';
const BackIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBack, _objectSpread$1M(_objectSpread$1M({}, props), {}, {
      className: createClass(getIconStyles$1M(props))
    }));
  }
});
BackIcon.displayName = 'BackIcon';
var BackIcon$1 = BackIcon;

function ownKeys$1L(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1L(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1L(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1L(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1L = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1L = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1L[size], "px"),
        height: "".concat(iconSizes$1L[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1L.big, "px"),
        height: "".concat(iconSizes$1L.big, "px")
      };
  }
};
const getSizeStyle$1L = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1L(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1L = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1L = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1L(props.color), ";}&,image{", getSizeStyle$1L(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBidirectionalArrow = props => jsxRuntime.jsx("svg", _objectSpread$1L(_objectSpread$1L({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m14.97 13.01-3.24-3.24a.8.8 0 0 1-.19-.293 1 1 0 0 1-.057-.337q0-.18.056-.338a.8.8 0 0 1 .191-.292l3.24-3.24q.27-.27.63-.27t.63.27.27.64q0 .373-.27.643L14.543 8.24H20.1a.87.87 0 0 1 .64.258q.26.26.26.642a.87.87 0 0 1-.26.64.87.87 0 0 1-.64.26h-5.558l1.688 1.688q.27.27.27.63t-.27.63a.94.94 0 0 1-.618.292q-.35.023-.642-.27m-7.2 5.377q.27.27.63.281t.63-.258l3.24-3.24a.8.8 0 0 0 .192-.293q.056-.156.056-.337-.001-.18-.056-.337a.8.8 0 0 0-.192-.293l-3.24-3.24a.86.86 0 0 0-.63-.27q-.36 0-.63.27a.88.88 0 0 0-.27.64q0 .373.27.643l1.688 1.687H3.9a.87.87 0 0 0-.64.258.87.87 0 0 0-.26.642q0 .383.26.64.257.26.64.26h5.557L7.77 17.128q-.27.27-.27.63t.27.63"
  })
}));
SvgBidirectionalArrow.displayName = 'SvgBidirectionalArrow';
const BidirectionalArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBidirectionalArrow, _objectSpread$1L(_objectSpread$1L({}, props), {}, {
      className: createClass(getIconStyles$1L(props))
    }));
  }
});
BidirectionalArrowIcon.displayName = 'BidirectionalArrowIcon';
var BidirectionalArrowIcon$1 = BidirectionalArrowIcon;

function ownKeys$1K(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1K(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1K(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1K(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1K = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1K = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1K[size], "px"),
        height: "".concat(iconSizes$1K[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1K.big, "px"),
        height: "".concat(iconSizes$1K.big, "px")
      };
  }
};
const getSizeStyle$1K = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1K(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1K = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1K = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1K(props.color), ";}&,image{", getSizeStyle$1K(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBinFilled = props => jsxRuntime.jsx("svg", _objectSpread$1K(_objectSpread$1K({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7 21q-.824 0-1.412-.587A1.93 1.93 0 0 1 5 19V6a.97.97 0 0 1-.713-.287A.97.97 0 0 1 4 5a.97.97 0 0 1 .287-.713A.97.97 0 0 1 5 4h4q0-.425.288-.713A.97.97 0 0 1 10 3h4a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 4h4q.424 0 .712.287Q20 4.575 20 5a.97.97 0 0 1-.288.713A.97.97 0 0 1 19 6v13q0 .825-.587 1.413A1.93 1.93 0 0 1 17 21zm2-5q0 .424.288.712A.97.97 0 0 0 10 17a.97.97 0 0 0 .713-.288A.97.97 0 0 0 11 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 10 8a.97.97 0 0 0-.712.287A.97.97 0 0 0 9 9zm4 0q0 .424.288.712A.97.97 0 0 0 14 17a.97.97 0 0 0 .713-.288A.97.97 0 0 0 15 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 14 8a.97.97 0 0 0-.712.287A.97.97 0 0 0 13 9z"
  })
}));
SvgBinFilled.displayName = 'SvgBinFilled';
const BinFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBinFilled, _objectSpread$1K(_objectSpread$1K({}, props), {}, {
      className: createClass(getIconStyles$1K(props))
    }));
  }
});
BinFilledIcon.displayName = 'BinFilledIcon';
var BinFilledIcon$1 = BinFilledIcon;

function ownKeys$1J(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1J(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1J(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1J(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1J = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1J = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1J[size], "px"),
        height: "".concat(iconSizes$1J[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1J.big, "px"),
        height: "".concat(iconSizes$1J.big, "px")
      };
  }
};
const getSizeStyle$1J = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1J(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1J = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1J = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1J(props.color), ";}&,image{", getSizeStyle$1J(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBinLinear = props => jsxRuntime.jsx("svg", _objectSpread$1J(_objectSpread$1J({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7 21q-.824 0-1.412-.587A1.93 1.93 0 0 1 5 19V6a.97.97 0 0 1-.713-.287A.97.97 0 0 1 4 5a.97.97 0 0 1 .287-.713A.97.97 0 0 1 5 4h4q0-.425.288-.713A.97.97 0 0 1 10 3h4a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 4h4q.424 0 .712.287Q20 4.575 20 5a.97.97 0 0 1-.288.713A.97.97 0 0 1 19 6v13q0 .825-.587 1.413A1.93 1.93 0 0 1 17 21zM7 6v13h10V6zm2 10q0 .424.288.712A.97.97 0 0 0 10 17a.97.97 0 0 0 .713-.288A.97.97 0 0 0 11 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 10 8a.97.97 0 0 0-.712.287A.97.97 0 0 0 9 9zm4 0q0 .424.288.712A.97.97 0 0 0 14 17a.97.97 0 0 0 .713-.288A.97.97 0 0 0 15 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 14 8a.97.97 0 0 0-.712.287A.97.97 0 0 0 13 9zM7 6v13z"
  })
}));
SvgBinLinear.displayName = 'SvgBinLinear';
const BinLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBinLinear, _objectSpread$1J(_objectSpread$1J({}, props), {}, {
      className: createClass(getIconStyles$1J(props))
    }));
  }
});
BinLinearIcon.displayName = 'BinLinearIcon';
var BinLinearIcon$1 = BinLinearIcon;

function ownKeys$1I(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1I(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1I(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1I(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1I = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1I = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1I[size], "px"),
        height: "".concat(iconSizes$1I[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1I.big, "px"),
        height: "".concat(iconSizes$1I.big, "px")
      };
  }
};
const getSizeStyle$1I = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1I(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1I = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1I = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1I(props.color), ";}&,image{", getSizeStyle$1I(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBox = props => jsxRuntime.jsx("svg", _objectSpread$1I(_objectSpread$1I({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.037 20.774 4.82 17.129a1.54 1.54 0 0 1-.608-.622A1.77 1.77 0 0 1 4 15.66V8.397q0-.452.212-.848t.608-.621l6.245-3.702q.396-.225.876-.226.48 0 .876.226l6.246 3.702q.396.226.607.621.212.396.212.848v7.262q0 .452-.226.848t-.621.622l-6.302 3.645q-.396.226-.848.226t-.848-.226m.056-1.95v-6.33l-5.37-3.08v6.189zm1.696 0 5.398-3.221V9.414l-5.398 3.08zm-.848-7.855 5.37-3.109-5.37-3.08-5.37 3.08z"
  })
}));
SvgBox.displayName = 'SvgBox';
const BoxIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBox, _objectSpread$1I(_objectSpread$1I({}, props), {}, {
      className: createClass(getIconStyles$1I(props))
    }));
  }
});
BoxIcon.displayName = 'BoxIcon';
var BoxIcon$1 = BoxIcon;

function ownKeys$1H(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1H(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1H(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1H(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1H = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1H = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1H[size], "px"),
        height: "".concat(iconSizes$1H[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1H.big, "px"),
        height: "".concat(iconSizes$1H.big, "px")
      };
  }
};
const getSizeStyle$1H = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1H(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1H = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1H = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1H(props.color), ";}&,image{", getSizeStyle$1H(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBrain = props => jsxRuntime.jsx("svg", _objectSpread$1H(_objectSpread$1H({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M14.298 3 12.15 4.074 10.003 3 5.1 5.675v2.322L3 9.332v5.786L5.1 16.263v2.099l4.904 2.675 2.147-1.075 2.148 1.075 4.904-2.675v-2.323l2.099-1.335V8.918l-2.1-1.144v-2.1zm-1.202 15.823V5.213l1.172-.586L17.76 6.53V8.63l2.099 1.145v4.137l-2.099 1.336v2.257l-3.492 1.905zM9.315 8.013l-.546.545v7.274l.3.3c.12-.088.26-.151.422-.151a.721.721 0 1 1 0 1.442c-.333 0-.6-.23-.684-.534l-.759-.759v-3.394H6.495a.71.71 0 0 1-.61.36.72.72 0 1 1 0-1.442.71.71 0 0 1 .61.36h1.553V8.26l.757-.756c-.015-.058-.036-.114-.036-.176a.72.72 0 1 1 .722.721c-.063 0-.119-.02-.176-.035M6.54 17.505v-2.098l-2.1-1.145v-4.138l2.1-1.335V6.531l3.491-1.904 1.174.587v13.61l-1.174.586zm10.993-6.212a.71.71 0 0 1 .61-.36.721.721 0 1 1 0 1.442.71.71 0 0 1-.61-.36H15.98v3.754l-.757.757c.015.058.036.114.036.176a.721.721 0 1 1-.721-.721c.062 0 .117.02.175.035l.546-.545V8.197l-.3-.3a.7.7 0 0 1-.421.151.72.72 0 1 1 0-1.442c.331 0 .599.228.683.533l.759.76v3.394z"
  })
}));
SvgBrain.displayName = 'SvgBrain';
const BrainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBrain, _objectSpread$1H(_objectSpread$1H({}, props), {}, {
      className: createClass(getIconStyles$1H(props))
    }));
  }
});
BrainIcon.displayName = 'BrainIcon';
var BrainIcon$1 = BrainIcon;

function ownKeys$1G(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1G(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1G(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1G(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1G = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1G = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1G[size], "px"),
        height: "".concat(iconSizes$1G[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1G.big, "px"),
        height: "".concat(iconSizes$1G.big, "px")
      };
  }
};
const getSizeStyle$1G = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1G(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1G = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1G = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1G(props.color), ";}&,image{", getSizeStyle$1G(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCalendar = props => jsxRuntime.jsx("svg", _objectSpread$1G(_objectSpread$1G({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.1 13.8a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.382.26-.642A.87.87 0 0 1 12.1 12q.382 0 .642.258A.87.87 0 0 1 13 12.9a.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26m-3.6 0a.87.87 0 0 1-.642-.26.87.87 0 0 1-.258-.64q0-.382.258-.642A.87.87 0 0 1 8.5 12q.383 0 .642.258a.87.87 0 0 1 .258.642.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26m7.2 0a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.382.26-.642A.87.87 0 0 1 15.7 12a.87.87 0 0 1 .64.258q.26.26.26.642a.87.87 0 0 1-.26.64.87.87 0 0 1-.64.26m-3.6 3.6a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.64a.87.87 0 0 1 .64-.26q.382 0 .642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26m-3.6 0a.87.87 0 0 1-.642-.26.87.87 0 0 1-.258-.64.87.87 0 0 1 .258-.64.87.87 0 0 1 .642-.26q.383 0 .642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26m7.2 0a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.64a.87.87 0 0 1 .64-.26q.383 0 .64.26.26.257.26.64a.87.87 0 0 1-.26.64.87.87 0 0 1-.64.26M5.8 21q-.742 0-1.272-.528A1.74 1.74 0 0 1 4 19.2V6.6q0-.743.528-1.27.53-.53 1.272-.53h.9v-.9q0-.382.258-.642A.87.87 0 0 1 7.6 3q.382 0 .642.258A.87.87 0 0 1 8.5 3.9v.9h7.2v-.9q0-.382.26-.642A.87.87 0 0 1 16.6 3a.87.87 0 0 1 .64.258q.26.26.26.642v.9h.9q.742 0 1.272.53.528.527.528 1.27v12.6q0 .743-.528 1.272A1.74 1.74 0 0 1 18.4 21zm0-1.8h12.6v-9H5.8zm0-10.8h12.6V6.6H5.8zm0 0V6.6z"
  })
}));
SvgCalendar.displayName = 'SvgCalendar';
const CalendarIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCalendar, _objectSpread$1G(_objectSpread$1G({}, props), {}, {
      className: createClass(getIconStyles$1G(props))
    }));
  }
});
CalendarIcon.displayName = 'CalendarIcon';
var CalendarIcon$1 = CalendarIcon;

function ownKeys$1F(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1F(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1F(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1F(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1F = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1F = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1F[size], "px"),
        height: "".concat(iconSizes$1F[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1F.big, "px"),
        height: "".concat(iconSizes$1F.big, "px")
      };
  }
};
const getSizeStyle$1F = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1F(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1F = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1F = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1F(props.color), ";}&,image{", getSizeStyle$1F(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCamera = props => jsxRuntime.jsx("svg", _objectSpread$1F(_objectSpread$1F({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.915q1.62 0 2.723-1.102t1.102-2.745q0-1.62-1.102-2.712Q13.62 9.266 12 9.265q-1.642 0-2.734 1.091-1.09 1.092-1.091 2.712 0 1.643 1.091 2.745 1.092 1.102 2.734 1.102M4.35 20.2q-.54 0-.945-.405A1.3 1.3 0 0 1 3 18.85V7.308q0-.518.405-.934t.945-.417h3.308l1.237-1.484q.18-.248.45-.36Q9.615 4 9.93 4h4.14q.315 0 .585.112.27.113.45.36l1.238 1.485h3.307q.517 0 .934.417.416.416.416.934V18.85q0 .54-.416.945-.417.405-.934.405zm15.3-1.35V7.308H4.35V18.85z"
  })
}));
SvgCamera.displayName = 'SvgCamera';
const CameraIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCamera, _objectSpread$1F(_objectSpread$1F({}, props), {}, {
      className: createClass(getIconStyles$1F(props))
    }));
  }
});
CameraIcon.displayName = 'CameraIcon';
var CameraIcon$1 = CameraIcon;

function ownKeys$1E(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1E(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1E(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1E(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1E = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1E = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1E[size], "px"),
        height: "".concat(iconSizes$1E[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1E.big, "px"),
        height: "".concat(iconSizes$1E.big, "px")
      };
  }
};
const getSizeStyle$1E = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1E(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1E = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1E = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1E(props.color), ";}&,image{", getSizeStyle$1E(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCaretDown = props => jsxRuntime.jsx("svg", _objectSpread$1E(_objectSpread$1E({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M20.666 7.405a1.05 1.05 0 0 0-.791-.353H4.125q-.457 0-.791.353A1.18 1.18 0 0 0 3 8.243q0 .484.334.838l7.875 8.34q.334.354.791.354t.791-.354l7.875-8.34A1.18 1.18 0 0 0 21 8.243q0-.483-.334-.838"
  })
}));
SvgCaretDown.displayName = 'SvgCaretDown';
const CaretDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCaretDown, _objectSpread$1E(_objectSpread$1E({}, props), {}, {
      className: createClass(getIconStyles$1E(props))
    }));
  }
});
CaretDownIcon.displayName = 'CaretDownIcon';
var CaretDownIcon$1 = CaretDownIcon;

function ownKeys$1D(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1D(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1D(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1D(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1D = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1D = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1D[size], "px"),
        height: "".concat(iconSizes$1D[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1D.big, "px"),
        height: "".concat(iconSizes$1D.big, "px")
      };
  }
};
const getSizeStyle$1D = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1D(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1D = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1D = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1D(props.color), ";}&,image{", getSizeStyle$1D(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCaretUp = props => jsxRuntime.jsx("svg", _objectSpread$1D(_objectSpread$1D({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M3.334 17.37q.334.353.791.353h15.75q.457 0 .791-.354a1.18 1.18 0 0 0 .334-.838 1.18 1.18 0 0 0-.334-.837l-7.875-8.34A1.05 1.05 0 0 0 12 7q-.457 0-.791.354l-7.875 8.34A1.18 1.18 0 0 0 3 16.53q0 .484.334.838"
  })
}));
SvgCaretUp.displayName = 'SvgCaretUp';
const CaretUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCaretUp, _objectSpread$1D(_objectSpread$1D({}, props), {}, {
      className: createClass(getIconStyles$1D(props))
    }));
  }
});
CaretUpIcon.displayName = 'CaretUpIcon';
var CaretUpIcon$1 = CaretUpIcon;

function ownKeys$1C(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1C(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1C(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1C(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1C = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1C = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1C[size], "px"),
        height: "".concat(iconSizes$1C[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1C.big, "px"),
        height: "".concat(iconSizes$1C.big, "px")
      };
  }
};
const getSizeStyle$1C = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1C(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1C = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1C = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1C(props.color), ";}&,image{", getSizeStyle$1C(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCart = props => jsxRuntime.jsx("svg", _objectSpread$1C(_objectSpread$1C({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.436 21q-.735 0-1.259-.523a1.72 1.72 0 0 1-.524-1.26q0-.735.524-1.257.525-.524 1.259-.524.736 0 1.258.524.524.523.524 1.258t-.524 1.259A1.72 1.72 0 0 1 8.436 21m8.91 0q-.735 0-1.258-.523a1.72 1.72 0 0 1-.524-1.26q0-.735.524-1.257.523-.524 1.258-.524t1.26.524.523 1.258-.523 1.259q-.525.523-1.26.523M7.812 6.743l2.005 4.21h6.238l2.294-4.21zm.624 9.802q-1.07 0-1.604-.925-.535-.924-.023-1.838l1.181-2.138L4.827 4.96h-.87a.92.92 0 0 1-.678-.279.95.95 0 0 1-.279-.7A.95.95 0 0 1 3.98 3h1.426q.267 0 .524.156.255.156.39.445l.556 1.181H19.82q.758 0 1.003.513.244.511-.045 1.113l-3.052 5.503a1.8 1.8 0 0 1-.668.723 1.8 1.8 0 0 1-.958.257H9.505l-.936 1.693h9.69q.402 0 .68.28a.95.95 0 0 1 .279.7.95.95 0 0 1-.278.703.95.95 0 0 1-.702.278zm1.38-5.592h6.239z"
  })
}));
SvgCart.displayName = 'SvgCart';
const CartIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCart, _objectSpread$1C(_objectSpread$1C({}, props), {}, {
      className: createClass(getIconStyles$1C(props))
    }));
  }
});
CartIcon.displayName = 'CartIcon';
var CartIcon$1 = CartIcon;

function ownKeys$1B(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1B(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1B(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1B(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1B = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1B = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1B[size], "px"),
        height: "".concat(iconSizes$1B[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1B.big, "px"),
        height: "".concat(iconSizes$1B.big, "px")
      };
  }
};
const getSizeStyle$1B = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1B(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1B = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1B = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1B(props.color), ";}&,image{", getSizeStyle$1B(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgChainBroken = props => jsxRuntime.jsx("svg", _objectSpread$1B(_objectSpread$1B({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.49 11.721-1.784-1.784h1.785q.379 0 .636.256.255.256.256.636a.86.86 0 0 1-.256.635.86.86 0 0 1-.636.257m3.057 3.078-1.339-1.383q.87-.245 1.44-.948a2.53 2.53 0 0 0 .568-1.639q0-1.115-.781-1.896a2.58 2.58 0 0 0-1.896-.78h-2.677a.86.86 0 0 1-.635-.258.86.86 0 0 1-.257-.635q0-.38.257-.636a.86.86 0 0 1 .636-.256h2.676q1.85 0 3.157 1.283Q21 8.933 21 10.829q0 1.272-.67 2.353a4.2 4.2 0 0 1-1.783 1.617m-.134 4.863L3.245 4.494A.85.85 0 0 1 3 3.87q0-.38.245-.625A.85.85 0 0 1 3.87 3q.379 0 .624.245l15.168 15.168a.85.85 0 0 1 .245.624q0 .38-.245.625a.85.85 0 0 1-.625.245.85.85 0 0 1-.624-.245m-8.12-4.372H7.618q-1.851 0-3.156-1.305t-1.305-3.156q0-1.561.948-2.755a4.42 4.42 0 0 1 2.398-1.572l1.65 1.65h-.535q-1.115 0-1.896.781-.78.78-.78 1.896 0 1.114.78 1.896.78.78 1.896.78h2.677q.378 0 .636.257.255.256.256.636a.86.86 0 0 1-.256.635.86.86 0 0 1-.636.257m1.428-3.569H8.665a.86.86 0 0 1-.635-.257.86.86 0 0 1-.257-.635q0-.38.257-.636a.86.86 0 0 1 .635-.256H9.96z"
  })
}));
SvgChainBroken.displayName = 'SvgChainBroken';
const ChainBrokenIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgChainBroken, _objectSpread$1B(_objectSpread$1B({}, props), {}, {
      className: createClass(getIconStyles$1B(props))
    }));
  }
});
ChainBrokenIcon.displayName = 'ChainBrokenIcon';
var ChainBrokenIcon$1 = ChainBrokenIcon;

function ownKeys$1A(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1A(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1A(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1A(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1A = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1A = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1A[size], "px"),
        height: "".concat(iconSizes$1A[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1A.big, "px"),
        height: "".concat(iconSizes$1A.big, "px")
      };
  }
};
const getSizeStyle$1A = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1A(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1A = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1A = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1A(props.color), ";}&,image{", getSizeStyle$1A(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgChain = props => jsxRuntime.jsx("svg", _objectSpread$1A(_objectSpread$1A({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.5 17q-1.867 0-3.183-1.317Q3 14.367 3 12.5t1.317-3.184Q5.632 8 7.5 8h2.7q.383 0 .642.258a.87.87 0 0 1 .258.642.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26H7.5q-1.126 0-1.912.787A2.6 2.6 0 0 0 4.8 12.5q0 1.125.788 1.912A2.6 2.6 0 0 0 7.5 15.2h2.7q.383 0 .642.258a.87.87 0 0 1 .258.642.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26zm1.8-3.6a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.642a.87.87 0 0 1 .64-.258h5.4q.383 0 .642.258a.87.87 0 0 1 .258.642.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26zm4.5 3.6a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.642a.87.87 0 0 1 .64-.258h2.7q1.125 0 1.913-.787A2.6 2.6 0 0 0 19.2 12.5q0-1.125-.787-1.912A2.6 2.6 0 0 0 16.5 9.8h-2.7a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.642A.87.87 0 0 1 13.8 8h2.7q1.867 0 3.184 1.316Q21 10.633 21 12.5t-1.316 3.183Q18.367 17 16.5 17z"
  })
}));
SvgChain.displayName = 'SvgChain';
const ChainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgChain, _objectSpread$1A(_objectSpread$1A({}, props), {}, {
      className: createClass(getIconStyles$1A(props))
    }));
  }
});
ChainIcon.displayName = 'ChainIcon';
var ChainIcon$1 = ChainIcon;

function ownKeys$1z(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1z(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1z(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1z(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1z[size], "px"),
        height: "".concat(iconSizes$1z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1z.big, "px"),
        height: "".concat(iconSizes$1z.big, "px")
      };
  }
};
const getSizeStyle$1z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1z(props.color), ";}&,image{", getSizeStyle$1z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckActive = props => jsxRuntime.jsx("svg", _objectSpread$1z(_objectSpread$1z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m10.74 13.62-1.957-1.957a.83.83 0 0 0-.608-.248q-.36 0-.63.27a.85.85 0 0 0-.247.63q0 .383.247.63l2.565 2.565a.85.85 0 0 0 .63.248.85.85 0 0 0 .63-.248l5.108-5.107a.83.83 0 0 0 .247-.608q0-.36-.27-.63a.85.85 0 0 0-.63-.247.85.85 0 0 0-.63.247zM12 21a8.8 8.8 0 0 1-3.51-.71 9.1 9.1 0 0 1-2.857-1.922 9.1 9.1 0 0 1-1.924-2.858A8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9.1 9.1 0 0 1 1.923-2.857A9.1 9.1 0 0 1 8.49 3.708 8.8 8.8 0 0 1 12 3q1.867 0 3.51.708a9.1 9.1 0 0 1 2.858 1.925A9.1 9.1 0 0 1 20.29 8.49 8.8 8.8 0 0 1 21 12a8.8 8.8 0 0 1-.71 3.51 9.1 9.1 0 0 1-1.922 2.858 9.1 9.1 0 0 1-2.858 1.923A8.8 8.8 0 0 1 12 21"
  })
}));
SvgCheckActive.displayName = 'SvgCheckActive';
const CheckActiveIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckActive, _objectSpread$1z(_objectSpread$1z({}, props), {}, {
      className: createClass(getIconStyles$1z(props))
    }));
  }
});
CheckActiveIcon.displayName = 'CheckActiveIcon';
var CheckActiveIcon$1 = CheckActiveIcon;

function ownKeys$1y(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1y(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1y(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1y(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1y[size], "px"),
        height: "".concat(iconSizes$1y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1y.big, "px"),
        height: "".concat(iconSizes$1y.big, "px")
      };
  }
};
const getSizeStyle$1y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1y(props.color), ";}&,image{", getSizeStyle$1y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckBold = props => jsxRuntime.jsx("svg", _objectSpread$1y(_objectSpread$1y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.167 18.155q-.223 0-.418-.084a1.2 1.2 0 0 1-.363-.251l-5.051-5.051a1.1 1.1 0 0 1-.335-.81q0-.474.335-.809.334-.335.795-.335.46 0 .796.335l4.241 4.242 9.935-9.907a1 1 0 0 1 .768-.335q.46 0 .795.335t.335.81q0 .473-.335.78L9.95 17.82a1.2 1.2 0 0 1-.363.251q-.195.084-.419.084"
  })
}));
SvgCheckBold.displayName = 'SvgCheckBold';
const CheckBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckBold, _objectSpread$1y(_objectSpread$1y({}, props), {}, {
      className: createClass(getIconStyles$1y(props))
    }));
  }
});
CheckBoldIcon.displayName = 'CheckBoldIcon';
var CheckBoldIcon$1 = CheckBoldIcon;

function ownKeys$1x(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1x(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1x(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1x(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1x = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1x = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1x[size], "px"),
        height: "".concat(iconSizes$1x[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1x.big, "px"),
        height: "".concat(iconSizes$1x.big, "px")
      };
  }
};
const getSizeStyle$1x = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1x(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1x = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1x = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1x(props.color), ";}&,image{", getSizeStyle$1x(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckInactive = props => jsxRuntime.jsx("svg", _objectSpread$1x(_objectSpread$1x({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.4 12.9h7.223a.83.83 0 0 0 .63-.26.9.9 0 0 0 .247-.64.87.87 0 0 0-.26-.642.87.87 0 0 0-.64-.258H8.378a.84.84 0 0 0-.63.258A.9.9 0 0 0 7.5 12a.87.87 0 0 0 .258.64q.26.26.642.26M12 21a8.8 8.8 0 0 1-3.51-.71 9.1 9.1 0 0 1-2.857-1.922 9.1 9.1 0 0 1-1.924-2.858A8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9.1 9.1 0 0 1 1.923-2.857A9.1 9.1 0 0 1 8.49 3.708 8.8 8.8 0 0 1 12 3q1.867 0 3.51.708a9.1 9.1 0 0 1 2.858 1.925A9.1 9.1 0 0 1 20.29 8.49 8.8 8.8 0 0 1 21 12a8.8 8.8 0 0 1-.71 3.51 9.1 9.1 0 0 1-1.922 2.858 9.1 9.1 0 0 1-2.858 1.923A8.8 8.8 0 0 1 12 21"
  })
}));
SvgCheckInactive.displayName = 'SvgCheckInactive';
const CheckInactiveIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckInactive, _objectSpread$1x(_objectSpread$1x({}, props), {}, {
      className: createClass(getIconStyles$1x(props))
    }));
  }
});
CheckInactiveIcon.displayName = 'CheckInactiveIcon';
var CheckInactiveIcon$1 = CheckInactiveIcon;

function ownKeys$1w(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1w(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1w(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1w(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1w = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1w = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1w[size], "px"),
        height: "".concat(iconSizes$1w[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1w.big, "px"),
        height: "".concat(iconSizes$1w.big, "px")
      };
  }
};
const getSizeStyle$1w = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1w(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1w = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1w = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1w(props.color), ";}&,image{", getSizeStyle$1w(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckThin = props => jsxRuntime.jsx("svg", _objectSpread$1w(_objectSpread$1w({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.167 18.155q-.223 0-.418-.084a1.2 1.2 0 0 1-.363-.251l-5.051-5.051a1.1 1.1 0 0 1-.335-.81q0-.474.335-.809.334-.335.795-.335.46 0 .796.335l4.241 4.242 9.935-9.907a1 1 0 0 1 .768-.335q.46 0 .795.335t.335.81q0 .473-.335.78L9.95 17.82a1.2 1.2 0 0 1-.363.251q-.195.084-.419.084"
  })
}));
SvgCheckThin.displayName = 'SvgCheckThin';
const CheckThinIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckThin, _objectSpread$1w(_objectSpread$1w({}, props), {}, {
      className: createClass(getIconStyles$1w(props))
    }));
  }
});
CheckThinIcon.displayName = 'CheckThinIcon';
var CheckThinIcon$1 = CheckThinIcon;

function ownKeys$1v(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1v(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1v(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1v(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1v = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1v = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1v[size], "px"),
        height: "".concat(iconSizes$1v[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1v.big, "px"),
        height: "".concat(iconSizes$1v.big, "px")
      };
  }
};
const getSizeStyle$1v = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1v(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1v = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1v = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1v(props.color), ";}&,image{", getSizeStyle$1v(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCircle = props => jsxRuntime.jsx("svg", _objectSpread$1v(_objectSpread$1v({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.8 8.8 0 0 1-3.51-.71 9.1 9.1 0 0 1-2.857-1.922 9.1 9.1 0 0 1-1.924-2.858A8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9.1 9.1 0 0 1 1.923-2.857A9.1 9.1 0 0 1 8.49 3.708 8.8 8.8 0 0 1 12 3q1.867 0 3.51.708a9.1 9.1 0 0 1 2.858 1.925A9.1 9.1 0 0 1 20.29 8.49 8.8 8.8 0 0 1 21 12a8.8 8.8 0 0 1-.71 3.51 9.1 9.1 0 0 1-1.922 2.858 9.1 9.1 0 0 1-2.858 1.923A8.8 8.8 0 0 1 12 21m0-1.8q3.015 0 5.108-2.092T19.2 12t-2.092-5.107Q15.015 4.799 12 4.8q-3.016 0-5.107 2.093Q4.799 8.984 4.8 12t2.093 5.108T12 19.2"
  })
}));
SvgCircle.displayName = 'SvgCircle';
const CircleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCircle, _objectSpread$1v(_objectSpread$1v({}, props), {}, {
      className: createClass(getIconStyles$1v(props))
    }));
  }
});
CircleIcon.displayName = 'CircleIcon';
var CircleIcon$1 = CircleIcon;

function ownKeys$1u(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1u(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1u(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1u(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1u = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1u = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1u[size], "px"),
        height: "".concat(iconSizes$1u[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1u.big, "px"),
        height: "".concat(iconSizes$1u.big, "px")
      };
  }
};
const getSizeStyle$1u = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1u(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1u = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1u = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1u(props.color), ";}&,image{", getSizeStyle$1u(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClipboard = props => jsxRuntime.jsx("svg", _objectSpread$1u(_objectSpread$1u({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.4 17.4q-.743 0-1.27-.528A1.73 1.73 0 0 1 7.6 15.6V4.8q0-.742.53-1.272A1.73 1.73 0 0 1 9.4 3h8.1q.742 0 1.272.528.528.53.528 1.272v10.8q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528zm0-1.8h8.1V4.8H9.4zM5.8 21q-.742 0-1.272-.528A1.74 1.74 0 0 1 4 19.2V7.5q0-.383.26-.642A.87.87 0 0 1 4.9 6.6q.383 0 .642.258A.87.87 0 0 1 5.8 7.5v11.7h9q.383 0 .642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.87.87 0 0 1-.642.26zM9.4 4.8v10.8z"
  })
}));
SvgClipboard.displayName = 'SvgClipboard';
const ClipboardIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClipboard, _objectSpread$1u(_objectSpread$1u({}, props), {}, {
      className: createClass(getIconStyles$1u(props))
    }));
  }
});
ClipboardIcon.displayName = 'ClipboardIcon';
var ClipboardIcon$1 = ClipboardIcon;

function ownKeys$1t(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1t(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1t(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1t(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1t = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1t = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1t[size], "px"),
        height: "".concat(iconSizes$1t[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1t.big, "px"),
        height: "".concat(iconSizes$1t.big, "px")
      };
  }
};
const getSizeStyle$1t = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1t(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1t = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1t = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1t(props.color), ";}&,image{", getSizeStyle$1t(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClockWithArrow = props => jsxRuntime.jsx("svg", _objectSpread$1t(_objectSpread$1t({
  xmlns: "http://www.w3.org/2000/svg",
  width: 33,
  height: 32,
  viewBox: "0 0 33 32",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    d: "m21.198 23.465 1.175 2.403a11.7 11.7 0 0 1-4.209 1.11l-.4.022-.102-2.667a9 9 0 0 0 3.536-.868m-8.517-.398c.907.54 1.9.916 2.952 1.114l.245.043.245.036-.362 2.644q-.318-.042-.635-.102a11.7 11.7 0 0 1-3.446-1.224l-.399-.227zm-3.06-3.04a8.9 8.9 0 0 0 1.552 1.91l.264.235-1.777 2.012a11.6 11.6 0 0 1-2.146-2.444l-.217-.346zm8.45-11.84c4.136.285 7.203 3.824 6.914 7.904s-3.877 7.156-8.014 6.87c-4.136-.284-7.255-3.823-6.966-7.903.018-.247.024-.418.065-.648.01-.058.02-.07.028-.1a.5.5 0 0 1 .034-.09c.014-.028.03-.05.051-.086q.168-.273 1.194-1.56l-.726-.05c1.257-2.743 4.198-4.56 7.42-4.337m-1.077 2.188a.77.77 0 0 0-.763.67l-.007.104v5.857c0 .392.29.716.665.768l.105.007h4.968c.425 0 .77-.347.77-.775a.77.77 0 0 0-.665-.767l-.105-.007h-4.199v-5.083a.77.77 0 0 0-.665-.767zm4.253-2.812-.115-.055.101.049-.227-.105-.247-.105-.251-.099a8.5 8.5 0 0 0-1.492-.423l-.002.005-.019-.004a9.1 9.1 0 0 0-3.22-.028l-.078.015-.354.072c-.37.084-.721.19-1.076.319l-.357.135q-.198.078-.391.162a9 9 0 0 0-2.631 1.847l.016-.017a8.8 8.8 0 0 0-1.301 1.703l-.074.125-.166.303q-.243.465-.429.954l-.117.33 1.862-.001-3.396 5.397-3.303-5.395h2.021a11.3 11.3 0 0 1 1.17-2.889 11.4 11.4 0 0 1 1.777-2.372q.018-.016.035-.034.45-.457.953-.867l.34-.266a12 12 0 0 1 2.603-1.456c.615-.252 1.25-.45 1.914-.591a11.8 11.8 0 0 1 3.633-.219c.357.028.71.08 1.057.146l.019.006.024.003q.995.196 1.94.559a11.5 11.5 0 0 1 3.712 2.24l.292.273q.717.699 1.303 1.503a11.3 11.3 0 0 1 1.846 3.888l.092.385-.009.002a11.5 11.5 0 0 1 .27 2.071l.008.318-.001.317a12 12 0 0 1-.21 1.898q-.096.497-.237.985l-.033.116-.055.178-.065.197a11 11 0 0 1-.18.501q-.366.925-.885 1.776a11.4 11.4 0 0 1-2.893 3.209l-.323.236-1.574-2.171a9 9 0 0 0 1.717-1.581 9 9 0 0 0 1.454-2.488l.063-.17.018-.056.085-.248a8.9 8.9 0 0 0 .411-2.654l-.002-.181v-.061l-.003-.025-.02-.346a8.8 8.8 0 0 0-.516-2.362l-.065-.17-.068-.168c-.042-.109-.075-.215-.124-.32a9 9 0 0 0-.158-.327l-.01.004a8.7 8.7 0 0 0-1.983-2.58l-.278-.238a8.5 8.5 0 0 0-1.413-.958l-.283-.146-.1-.05.05.025-.059-.029z"
  })
}));
SvgClockWithArrow.displayName = 'SvgClockWithArrow';
const ClockWithArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClockWithArrow, _objectSpread$1t(_objectSpread$1t({}, props), {}, {
      className: createClass(getIconStyles$1t(props))
    }));
  }
});
ClockWithArrowIcon.displayName = 'ClockWithArrowIcon';
var ClockWithArrowIcon$1 = ClockWithArrowIcon;

function ownKeys$1s(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1s(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1s(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1s(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1s = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1s = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1s[size], "px"),
        height: "".concat(iconSizes$1s[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1s.big, "px"),
        height: "".concat(iconSizes$1s.big, "px")
      };
  }
};
const getSizeStyle$1s = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1s(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1s = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1s = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1s(props.color), ";}&,image{", getSizeStyle$1s(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClock = props => jsxRuntime.jsx("svg", _objectSpread$1s(_objectSpread$1s({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.363 15.623a.83.83 0 0 0 .607.247q.36 0 .63-.27a.85.85 0 0 0 .248-.63.85.85 0 0 0-.248-.63l-2.7-2.7V8.377a.84.84 0 0 0-.258-.63A.9.9 0 0 0 12 7.5a.87.87 0 0 0-.64.258.87.87 0 0 0-.26.642v3.577a.93.93 0 0 0 .27.653zM12 21a8.8 8.8 0 0 1-3.51-.71 9.1 9.1 0 0 1-2.857-1.922 9.1 9.1 0 0 1-1.924-2.858A8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9.1 9.1 0 0 1 1.923-2.857A9.1 9.1 0 0 1 8.49 3.708 8.8 8.8 0 0 1 12 3q1.867 0 3.51.708a9.1 9.1 0 0 1 2.858 1.925A9.1 9.1 0 0 1 20.29 8.49 8.8 8.8 0 0 1 21 12a8.8 8.8 0 0 1-.71 3.51 9.1 9.1 0 0 1-1.922 2.858 9.1 9.1 0 0 1-2.858 1.923A8.8 8.8 0 0 1 12 21m0-1.8q2.992 0 5.097-2.103Q19.2 14.993 19.2 12q0-2.992-2.103-5.097Q14.993 4.8 12 4.8T6.904 6.903Q4.8 9.008 4.8 12t2.104 5.097Q9.007 19.2 12 19.2"
  })
}));
SvgClock.displayName = 'SvgClock';
const ClockIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClock, _objectSpread$1s(_objectSpread$1s({}, props), {}, {
      className: createClass(getIconStyles$1s(props))
    }));
  }
});
ClockIcon.displayName = 'ClockIcon';
var ClockIcon$1 = ClockIcon;

function ownKeys$1r(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1r(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1r(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1r(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1r = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1r = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1r[size], "px"),
        height: "".concat(iconSizes$1r[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1r.big, "px"),
        height: "".concat(iconSizes$1r.big, "px")
      };
  }
};
const getSizeStyle$1r = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1r(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1r = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1r = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1r(props.color), ";}&,image{", getSizeStyle$1r(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCloseBold = props => jsxRuntime.jsx("svg", _objectSpread$1r(_objectSpread$1r({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m12 13.703-5.962 5.962q-.334.336-.852.335-.516 0-.851-.335T4 18.814q0-.517.335-.852L10.297 12 4.335 6.038Q4 5.704 4 5.186q0-.516.335-.851T5.186 4q.518 0 .852.335L12 10.297l5.962-5.962Q18.296 4 18.814 4q.516 0 .851.335.336.335.335.851 0 .518-.335.852L13.703 12l5.962 5.962q.336.334.335.852 0 .516-.335.851-.335.336-.851.335-.517 0-.852-.335z"
  })
}));
SvgCloseBold.displayName = 'SvgCloseBold';
const CloseBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCloseBold, _objectSpread$1r(_objectSpread$1r({}, props), {}, {
      className: createClass(getIconStyles$1r(props))
    }));
  }
});
CloseBoldIcon.displayName = 'CloseBoldIcon';
var CloseBoldIcon$1 = CloseBoldIcon;

function ownKeys$1q(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1q(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1q(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1q(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1q[size], "px"),
        height: "".concat(iconSizes$1q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1q.big, "px"),
        height: "".concat(iconSizes$1q.big, "px")
      };
  }
};
const getSizeStyle$1q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1q(props.color), ";}&,image{", getSizeStyle$1q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClose = props => jsxRuntime.jsx("svg", _objectSpread$1q(_objectSpread$1q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m12 13.703-5.962 5.962q-.334.336-.852.335-.516 0-.851-.335T4 18.814q0-.517.335-.852L10.297 12 4.335 6.038Q4 5.704 4 5.186q0-.516.335-.851T5.186 4q.518 0 .852.335L12 10.297l5.962-5.962Q18.296 4 18.814 4q.516 0 .851.335.336.335.335.851 0 .518-.335.852L13.703 12l5.962 5.962q.336.334.335.852 0 .516-.335.851-.335.336-.851.335-.517 0-.852-.335z"
  })
}));
SvgClose.displayName = 'SvgClose';
const CloseIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClose, _objectSpread$1q(_objectSpread$1q({}, props), {}, {
      className: createClass(getIconStyles$1q(props))
    }));
  }
});
CloseIcon.displayName = 'CloseIcon';
var CloseIcon$1 = CloseIcon;

function ownKeys$1p(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1p(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1p(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1p(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1p = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1p = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1p[size], "px"),
        height: "".concat(iconSizes$1p[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1p.big, "px"),
        height: "".concat(iconSizes$1p.big, "px")
      };
  }
};
const getSizeStyle$1p = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1p(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1p = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1p = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1p(props.color), ";}&,image{", getSizeStyle$1p(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCodeView = props => jsxRuntime.jsx("svg", _objectSpread$1p(_objectSpread$1p({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.406 17.208a.87.87 0 0 1-.644.258.91.91 0 0 1-.668-.282.91.91 0 0 1-.281-.668q0-.386.28-.667l3.634-3.633-3.657-3.657a.84.84 0 0 1-.246-.644.92.92 0 0 1 .27-.645.9.9 0 0 1 .656-.257.9.9 0 0 1 .656.257l4.313 4.313a.9.9 0 0 1 .281.656.9.9 0 0 1-.281.656zm-8.812 0L3.28 12.895A.9.9 0 0 1 3 12.24a.9.9 0 0 1 .281-.656L7.594 7.27A.93.93 0 0 1 8.25 7a.89.89 0 0 1 .68.27q.28.281.28.668t-.28.668l-3.657 3.657 3.657 3.656a.84.84 0 0 1 .246.644.92.92 0 0 1-.27.645.9.9 0 0 1-.656.258.9.9 0 0 1-.656-.258"
  })
}));
SvgCodeView.displayName = 'SvgCodeView';
const CodeViewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCodeView, _objectSpread$1p(_objectSpread$1p({}, props), {}, {
      className: createClass(getIconStyles$1p(props))
    }));
  }
});
CodeViewIcon.displayName = 'CodeViewIcon';
var CodeViewIcon$1 = CodeViewIcon;

function ownKeys$1o(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1o(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1o(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1o(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1o = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1o = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1o[size], "px"),
        height: "".concat(iconSizes$1o[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1o.big, "px"),
        height: "".concat(iconSizes$1o.big, "px")
      };
  }
};
const getSizeStyle$1o = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1o(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1o = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1o = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1o(props.color), ";}&,image{", getSizeStyle$1o(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCoins = props => jsxRuntime.jsx("svg", _objectSpread$1o(_objectSpread$1o({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.636 12.364q1.023 0 1.739-.716a2.37 2.37 0 0 0 .716-1.739q0-1.023-.716-1.739a2.37 2.37 0 0 0-1.739-.715q-1.022 0-1.738.715a2.37 2.37 0 0 0-.716 1.74q0 1.02.716 1.738a2.37 2.37 0 0 0 1.738.716M7.91 14.818q-.675 0-1.155-.48a1.57 1.57 0 0 1-.481-1.156V6.636q0-.675.48-1.155.481-.48 1.156-.481h11.455q.675 0 1.156.481.48.48.48 1.155v6.546q0 .675-.48 1.155-.481.48-1.156.481zm-3.273 3.273q-.675 0-1.155-.48A1.58 1.58 0 0 1 3 16.454V8.274q0-.348.236-.584a.8.8 0 0 1 .582-.234q.348 0 .584.234a.8.8 0 0 1 .234.584v8.182h13.091a.8.8 0 0 1 .583.235.8.8 0 0 1 .236.583.8.8 0 0 1-.236.582.8.8 0 0 1-.583.236zM7.91 8.273q.675 0 1.155-.481.481-.48.481-1.156H7.91zm11.455 0V6.636h-1.637q0 .675.48 1.156.482.48 1.157.48M7.909 13.182h1.636q0-.675-.48-1.156t-1.156-.48zm9.818 0h1.637v-1.636q-.675 0-1.157.48-.48.48-.48 1.156"
  })
}));
SvgCoins.displayName = 'SvgCoins';
const CoinsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCoins, _objectSpread$1o(_objectSpread$1o({}, props), {}, {
      className: createClass(getIconStyles$1o(props))
    }));
  }
});
CoinsIcon.displayName = 'CoinsIcon';
var CoinsIcon$1 = CoinsIcon;

function ownKeys$1n(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1n(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1n(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1n(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1n = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1n = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1n[size], "px"),
        height: "".concat(iconSizes$1n[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1n.big, "px"),
        height: "".concat(iconSizes$1n.big, "px")
      };
  }
};
const getSizeStyle$1n = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1n(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1n = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1n = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1n(props.color), ";}&,image{", getSizeStyle$1n(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgColumns = props => jsxRuntime.jsx("svg", _objectSpread$1n(_objectSpread$1n({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 17.017V7.003q0-.826.588-1.414A1.93 1.93 0 0 1 5.003 5h13.994q.827 0 1.415.589.588.588.588 1.414v10.014q0 .825-.588 1.415a1.93 1.93 0 0 1-1.415.588H5.003q-.827 0-1.415-.588A1.93 1.93 0 0 1 3 17.017m2.003 0h3.33V7.003h-3.33zm5.332 0h3.33V7.003h-3.33zm5.333 0h3.33V7.003h-3.33z"
  })
}));
SvgColumns.displayName = 'SvgColumns';
const ColumnsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgColumns, _objectSpread$1n(_objectSpread$1n({}, props), {}, {
      className: createClass(getIconStyles$1n(props))
    }));
  }
});
ColumnsIcon.displayName = 'ColumnsIcon';
var ColumnsIcon$1 = ColumnsIcon;

function ownKeys$1m(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1m(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1m(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1m(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1m = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1m = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1m[size], "px"),
        height: "".concat(iconSizes$1m[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1m.big, "px"),
        height: "".concat(iconSizes$1m.big, "px")
      };
  }
};
const getSizeStyle$1m = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1m(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1m = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1m = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1m(props.color), ";}&,image{", getSizeStyle$1m(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgConnectedSquare = props => jsxRuntime.jsx("svg", _objectSpread$1m(_objectSpread$1m({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.8 4.6h6.5c.1 0 .2.2.2.4v1c0 .2-.1.4-.2.4H7.7c-.4.9-1.2 1.5-2.2 1.5C4.1 7.9 3 6.8 3 5.5S4.1 3 5.5 3c1 0 1.9.7 2.3 1.6M4.6 16.3V9.8c0-.1.2-.2.4-.2h1c.2 0 .4.1.4.2v6.5c.9.4 1.4 1.2 1.4 2.2 0 1.4-1.1 2.5-2.5 2.5S3 19.9 3 18.6c0-1.1.7-2 1.6-2.3m11.6 3H9.8c-.1 0-.2-.2-.2-.4v-1c0-.2.1-.4.2-.4h6.5c.4-.9 1.2-1.4 2.2-1.4 1.4 0 2.5 1.1 2.5 2.5S19.9 21 18.5 21c-1 0-1.9-.7-2.3-1.7m3.2-11.5v6.5c0 .1-.2.2-.4.2h-1c-.2 0-.4-.1-.4-.2V7.7c-.9-.4-1.4-1.2-1.4-2.2 0-1.4 1.1-2.5 2.5-2.5S21 4.1 21 5.5c0 1-.7 1.9-1.6 2.3"
  })
}));
SvgConnectedSquare.displayName = 'SvgConnectedSquare';
const ConnectedSquareIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgConnectedSquare, _objectSpread$1m(_objectSpread$1m({}, props), {}, {
      className: createClass(getIconStyles$1m(props))
    }));
  }
});
ConnectedSquareIcon.displayName = 'ConnectedSquareIcon';
var ConnectedSquareIcon$1 = ConnectedSquareIcon;

function ownKeys$1l(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1l(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1l(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1l(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1l = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1l = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1l[size], "px"),
        height: "".concat(iconSizes$1l[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1l.big, "px"),
        height: "".concat(iconSizes$1l.big, "px")
      };
  }
};
const getSizeStyle$1l = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1l(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1l = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1l = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1l(props.color), ";}&,image{", getSizeStyle$1l(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgConnectedTriangle = props => jsxRuntime.jsx("svg", _objectSpread$1l(_objectSpread$1l({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "nonzero",
    d: "M15.023 18.375H8.977A3 3 0 1 1 6.49 15.04l3.511-6.803a3 3 0 1 1 4.053-.051l3.74 6.82Q17.898 15 18 15a3 3 0 1 1-2.977 3.375m.195-1.5a3 3 0 0 1 1.133-1.381l-3.612-6.586a3 3 0 0 1-1.405.018l-3.47 6.723c.403.32.722.742.918 1.226z"
  })
}));
SvgConnectedTriangle.displayName = 'SvgConnectedTriangle';
const ConnectedTriangleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgConnectedTriangle, _objectSpread$1l(_objectSpread$1l({}, props), {}, {
      className: createClass(getIconStyles$1l(props))
    }));
  }
});
ConnectedTriangleIcon.displayName = 'ConnectedTriangleIcon';
var ConnectedTriangleIcon$1 = ConnectedTriangleIcon;

function ownKeys$1k(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1k(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1k(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1k(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1k = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1k = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1k[size], "px"),
        height: "".concat(iconSizes$1k[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1k.big, "px"),
        height: "".concat(iconSizes$1k.big, "px")
      };
  }
};
const getSizeStyle$1k = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1k(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1k = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1k = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1k(props.color), ";}&,image{", getSizeStyle$1k(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCopy = props => jsxRuntime.jsx("svg", _objectSpread$1k(_objectSpread$1k({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M17.91 17.727h-9q-.675 0-1.156-.48a1.58 1.58 0 0 1-.481-1.156V4.636q0-.675.48-1.156Q8.235 3 8.91 3h5.727l4.91 4.91v8.18q0 .675-.48 1.157-.482.48-1.157.48m-4.092-9v-4.09H8.91V16.09h9V8.727zM5.636 21q-.675 0-1.155-.48A1.58 1.58 0 0 1 4 19.364V7.909h1.636v11.455h9V21zM8.91 4.636v4.091zV16.09z"
  })
}));
SvgCopy.displayName = 'SvgCopy';
const CopyIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCopy, _objectSpread$1k(_objectSpread$1k({}, props), {}, {
      className: createClass(getIconStyles$1k(props))
    }));
  }
});
CopyIcon.displayName = 'CopyIcon';
var CopyIcon$1 = CopyIcon;

function ownKeys$1j(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1j(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1j(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1j(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1j = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1j = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1j[size], "px"),
        height: "".concat(iconSizes$1j[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1j.big, "px"),
        height: "".concat(iconSizes$1j.big, "px")
      };
  }
};
const getSizeStyle$1j = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1j(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1j = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1j = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1j(props.color), ";}&,image{", getSizeStyle$1j(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCube = props => jsxRuntime.jsx("svg", _objectSpread$1j(_objectSpread$1j({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m8.174 9.646-.026.016-3.445-2.127L11.998 3l2.937 1.825.031-.02 4.327 2.73-7.295 4.535zm3.599 2.845v8.369L4.5 16.325v-8.37l3.513 2.198zm.45 0 7.273-4.535v8.369l-7.273 4.535z"
  })
}));
SvgCube.displayName = 'SvgCube';
const CubeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCube, _objectSpread$1j(_objectSpread$1j({}, props), {}, {
      className: createClass(getIconStyles$1j(props))
    }));
  }
});
CubeIcon.displayName = 'CubeIcon';
var CubeIcon$1 = CubeIcon;

function ownKeys$1i(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1i(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1i(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1i(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1i = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1i = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1i[size], "px"),
        height: "".concat(iconSizes$1i[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1i.big, "px"),
        height: "".concat(iconSizes$1i.big, "px")
      };
  }
};
const getSizeStyle$1i = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1i(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1i = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1i = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1i(props.color), ";}&,image{", getSizeStyle$1i(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCubes = props => jsxRuntime.jsx("svg", _objectSpread$1i(_objectSpread$1i({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m20.837 12.696-4.265-1.558V6.393a.215.215 0 0 0-.145-.203L12.06 4.594a.22.22 0 0 0-.14 0L7.56 6.146a.2.2 0 0 0-.1.074.22.22 0 0 0-.05.136v4.78l-4.26 1.516a.2.2 0 0 0-.1.074.22.22 0 0 0-.05.137v4.823c0 .09.058.172.144.202l4.362 1.5a.22.22 0 0 0 .141 0l4.344-1.493 4.335 1.493a.22.22 0 0 0 .142 0l4.362-1.502a.214.214 0 0 0 .152-.205V12.9a.21.21 0 0 0-.145-.203m-5.025-1.885-3.352 1.133V8.356l3.352-1.227zM11.99 5.373l3.117 1.162-3.114 1.15-3.29-1.132zm-4.407 8.82-3.29-1.134 3.287-1.18 3.117 1.162zm3.819 3.125L8.05 18.45v-3.588l3.352-1.226zm5.001-3.126-3.29-1.133 3.287-1.18 3.118 1.162zm3.819 3.126L16.87 18.45v-3.588l3.352-1.226z"
  })
}));
SvgCubes.displayName = 'SvgCubes';
const CubesIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCubes, _objectSpread$1i(_objectSpread$1i({}, props), {}, {
      className: createClass(getIconStyles$1i(props))
    }));
  }
});
CubesIcon.displayName = 'CubesIcon';
var CubesIcon$1 = CubesIcon;

function ownKeys$1h(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1h(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1h(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1h(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1h = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1h = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1h[size], "px"),
        height: "".concat(iconSizes$1h[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1h.big, "px"),
        height: "".concat(iconSizes$1h.big, "px")
      };
  }
};
const getSizeStyle$1h = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1h(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1h = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1h = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1h(props.color), ";}&,image{", getSizeStyle$1h(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDomain = props => jsxRuntime.jsx("svg", _objectSpread$1h(_objectSpread$1h({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 20.2q-.743 0-1.27-.528A1.73 1.73 0 0 1 3 18.4V5.8q0-.742.53-1.272A1.73 1.73 0 0 1 4.8 4h5.4q.742 0 1.272.528Q12 5.058 12 5.8v1.8h7.2q.743 0 1.272.528Q21 8.658 21 9.4v9q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528zm0-1.8h1.8v-1.8H4.8zm0-3.6h1.8V13H4.8zm0-3.6h1.8V9.4H4.8zm0-3.6h1.8V5.8H4.8zm3.6 10.8h1.8v-1.8H8.4zm0-3.6h1.8V13H8.4zm0-3.6h1.8V9.4H8.4zm0-3.6h1.8V5.8H8.4zM12 18.4h7.2v-9H12v1.8h1.8V13H12v1.8h1.8v1.8H12zm3.6-5.4v-1.8h1.8V13zm0 3.6v-1.8h1.8v1.8z"
  })
}));
SvgDomain.displayName = 'SvgDomain';
const DomainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDomain, _objectSpread$1h(_objectSpread$1h({}, props), {}, {
      className: createClass(getIconStyles$1h(props))
    }));
  }
});
DomainIcon.displayName = 'DomainIcon';
var DomainIcon$1 = DomainIcon;

function ownKeys$1g(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1g(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1g(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1g(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1g = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1g = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1g[size], "px"),
        height: "".concat(iconSizes$1g[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1g.big, "px"),
        height: "".concat(iconSizes$1g.big, "px")
      };
  }
};
const getSizeStyle$1g = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1g(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1g = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1g = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1g(props.color), ";}&,image{", getSizeStyle$1g(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDot = props => jsxRuntime.jsx("svg", _objectSpread$1g(_objectSpread$1g({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21q-3.76 0-6.38-2.62T3 12t2.62-6.381Q8.24 3 12 3t6.38 2.619Q21 8.239 21 12q0 3.76-2.62 6.38T12 21"
  })
}));
SvgDot.displayName = 'SvgDot';
const DotIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDot, _objectSpread$1g(_objectSpread$1g({}, props), {}, {
      className: createClass(getIconStyles$1g(props))
    }));
  }
});
DotIcon.displayName = 'DotIcon';
var DotIcon$1 = DotIcon;

function ownKeys$1f(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1f(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1f(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1f(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1f = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1f = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1f[size], "px"),
        height: "".concat(iconSizes$1f[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1f.big, "px"),
        height: "".concat(iconSizes$1f.big, "px")
      };
  }
};
const getSizeStyle$1f = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1f(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1f = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1f = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1f(props.color), ";}&,image{", getSizeStyle$1f(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDownload = props => jsxRuntime.jsx("svg", _objectSpread$1f(_objectSpread$1f({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.022q-.224 0-.422-.071a1 1 0 0 1-.365-.239l-4.05-4.05a1.07 1.07 0 0 1-.31-.787q0-.478.31-.787t.8-.324q.493-.014.803.295l2.109 2.11V4.125q0-.478.324-.802Q11.521 3 12 3q.478 0 .802.323.323.324.323.802v8.044l2.11-2.11q.309-.309.802-.295.49.014.8.324.31.309.31.787t-.31.787l-4.05 4.05a1 1 0 0 1-.365.239q-.197.07-.422.07M5.25 21q-.928 0-1.588-.66A2.17 2.17 0 0 1 3 18.75V16.5q0-.478.323-.802.324-.323.802-.323t.802.323q.323.324.323.802v2.25h13.5V16.5q0-.478.324-.802.323-.323.801-.323t.801.323q.324.324.324.802v2.25a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66z"
  })
}));
SvgDownload.displayName = 'SvgDownload';
const DownloadIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDownload, _objectSpread$1f(_objectSpread$1f({}, props), {}, {
      className: createClass(getIconStyles$1f(props))
    }));
  }
});
DownloadIcon.displayName = 'DownloadIcon';
var DownloadIcon$1 = DownloadIcon;

function ownKeys$1e(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1e(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1e(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1e(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1e = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1e = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1e[size], "px"),
        height: "".concat(iconSizes$1e[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1e.big, "px"),
        height: "".concat(iconSizes$1e.big, "px")
      };
  }
};
const getSizeStyle$1e = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1e(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1e = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1e = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1e(props.color), ";}&,image{", getSizeStyle$1e(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDragDrop = props => jsxRuntime.jsx("svg", _objectSpread$1e(_objectSpread$1e({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.179 21q-.21 0-.394-.066a.9.9 0 0 1-.341-.223l-2.755-2.755a.96.96 0 0 1-.289-.708q0-.42.315-.735a1 1 0 0 1 .735-.289q.446 0 .734.29l.945.944V6.542l-.971.971a.96.96 0 0 1-.708.289q-.42 0-.735-.315a1 1 0 0 1-.289-.735q0-.445.289-.735l2.729-2.728a.9.9 0 0 1 .34-.224A1.2 1.2 0 0 1 12.179 3q.21 0 .394.065a.9.9 0 0 1 .341.224l2.755 2.755a.96.96 0 0 1 .289.708q0 .42-.315.735a1 1 0 0 1-.735.289 1 1 0 0 1-.734-.29l-.945-.944v10.916l.97-.971a.96.96 0 0 1 .71-.289q.42 0 .734.315a1 1 0 0 1 .289.735 1 1 0 0 1-.289.735l-2.729 2.728a.9.9 0 0 1-.341.223 1.2 1.2 0 0 1-.393.066"
  })
}));
SvgDragDrop.displayName = 'SvgDragDrop';
const DragDropIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDragDrop, _objectSpread$1e(_objectSpread$1e({}, props), {}, {
      className: createClass(getIconStyles$1e(props))
    }));
  }
});
DragDropIcon.displayName = 'DragDropIcon';
var DragDropIcon$1 = DragDropIcon;

function ownKeys$1d(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1d(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1d(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1d(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1d = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1d = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1d[size], "px"),
        height: "".concat(iconSizes$1d[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1d.big, "px"),
        height: "".concat(iconSizes$1d.big, "px")
      };
  }
};
const getSizeStyle$1d = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1d(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1d = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1d = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1d(props.color), ";}&,image{", getSizeStyle$1d(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDrag = props => jsxRuntime.jsx("svg", _objectSpread$1d(_objectSpread$1d({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.25 21q-.928 0-1.588-.66A2.17 2.17 0 0 1 6 18.75q0-.928.662-1.59.66-.66 1.588-.66t1.59.66q.66.662.66 1.59a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66M15 21q-.928 0-1.588-.66a2.17 2.17 0 0 1-.662-1.59q0-.928.662-1.59.66-.66 1.588-.66t1.59.66q.66.662.66 1.59a2.17 2.17 0 0 1-.66 1.59Q15.928 21 15 21m-6.75-6.75q-.928 0-1.588-.662A2.16 2.16 0 0 1 6 12q0-.928.662-1.59.66-.66 1.588-.66t1.59.66q.66.662.66 1.59t-.66 1.588q-.662.662-1.59.662m6.75 0q-.928 0-1.588-.662A2.16 2.16 0 0 1 12.75 12q0-.928.662-1.59.66-.66 1.588-.66t1.59.66q.66.662.66 1.59t-.66 1.588q-.662.662-1.59.662M8.25 7.5q-.928 0-1.588-.662A2.16 2.16 0 0 1 6 5.25q0-.928.662-1.588Q7.322 3 8.25 3t1.59.662q.66.66.66 1.588t-.66 1.588q-.662.662-1.59.662m6.75 0q-.928 0-1.588-.662a2.16 2.16 0 0 1-.662-1.588q0-.928.662-1.588Q14.072 3 15 3t1.59.662q.66.66.66 1.588t-.66 1.588Q15.928 7.5 15 7.5"
  })
}));
SvgDrag.displayName = 'SvgDrag';
const DragIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDrag, _objectSpread$1d(_objectSpread$1d({}, props), {}, {
      className: createClass(getIconStyles$1d(props))
    }));
  }
});
DragIcon.displayName = 'DragIcon';
var DragIcon$1 = DragIcon;

function ownKeys$1c(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1c(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1c(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1c(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1c = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1c = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1c[size], "px"),
        height: "".concat(iconSizes$1c[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1c.big, "px"),
        height: "".concat(iconSizes$1c.big, "px")
      };
  }
};
const getSizeStyle$1c = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1c(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1c = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1c = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1c(props.color), ";}&,image{", getSizeStyle$1c(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEdit = props => jsxRuntime.jsx("svg", _objectSpread$1c(_objectSpread$1c({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 17.541 6.58 21H3zM14.322 6.635l3.58 3.46-10.068 9.728-3.58-3.46zm4.976-3.161 1.212 1.17a1.58 1.58 0 0 1 0 2.289l-1.39 1.342-3.58-3.459 1.39-1.342a1.716 1.716 0 0 1 2.368 0"
  })
}));
SvgEdit.displayName = 'SvgEdit';
const EditIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEdit, _objectSpread$1c(_objectSpread$1c({}, props), {}, {
      className: createClass(getIconStyles$1c(props))
    }));
  }
});
EditIcon.displayName = 'EditIcon';
var EditIcon$1 = EditIcon;

function ownKeys$1b(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1b(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1b(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1b(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1b = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1b = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1b[size], "px"),
        height: "".concat(iconSizes$1b[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1b.big, "px"),
        height: "".concat(iconSizes$1b.big, "px")
      };
  }
};
const getSizeStyle$1b = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1b(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1b = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1b = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1b(props.color), ";}&,image{", getSizeStyle$1b(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgError = props => jsxRuntime.jsx("svg", _objectSpread$1b(_objectSpread$1b({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.8 8.8 0 0 1-3.511-.709 9 9 0 0 1-2.857-1.933 9.2 9.2 0 0 1-1.923-2.868A8.8 8.8 0 0 1 3 11.979q0-1.869.709-3.502a9.1 9.1 0 0 1 1.923-2.846 9.1 9.1 0 0 1 2.857-1.922A8.8 8.8 0 0 1 12 3q1.869 0 3.512.709a9.1 9.1 0 0 1 2.857 1.922 9.1 9.1 0 0 1 1.922 2.846A8.7 8.7 0 0 1 21 11.98a8.8 8.8 0 0 1-.709 3.511 9.2 9.2 0 0 1-1.922 2.868 9 9 0 0 1-2.857 1.933A8.8 8.8 0 0 1 12 21m0-2.277q2.814 0 4.768-1.965 1.956-1.966 1.955-4.78 0-1.052-.31-2.04a6.4 6.4 0 0 0-.936-1.847l-9.365 9.365q.816.645 1.826.955 1.01.312 2.062.312m-5.477-2.857 9.343-9.386a6.5 6.5 0 0 0-1.836-.902q-.977-.3-2.03-.301-2.814 0-4.768 1.943-1.955 1.945-1.955 4.759 0 1.052.31 2.04.313.989.936 1.847"
  })
}));
SvgError.displayName = 'SvgError';
const ErrorIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgError, _objectSpread$1b(_objectSpread$1b({}, props), {}, {
      className: createClass(getIconStyles$1b(props))
    }));
  }
});
ErrorIcon.displayName = 'ErrorIcon';
var ErrorIcon$1 = ErrorIcon;

function ownKeys$1a(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1a(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1a(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1a(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1a = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1a = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1a[size], "px"),
        height: "".concat(iconSizes$1a[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1a.big, "px"),
        height: "".concat(iconSizes$1a.big, "px")
      };
  }
};
const getSizeStyle$1a = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1a(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1a = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1a = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1a(props.color), ";}&,image{", getSizeStyle$1a(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExpand = props => jsxRuntime.jsx("svg", _objectSpread$1a(_objectSpread$1a({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 21a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 20v-6q0-.425.288-.713A.97.97 0 0 1 4 13a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 14v3.6L17.6 5H14a.97.97 0 0 1-.712-.288A.97.97 0 0 1 13 4q0-.425.288-.713A.97.97 0 0 1 14 3h6q.424 0 .712.287Q21 3.575 21 4v6q0 .424-.288.712A.97.97 0 0 1 20 11a.97.97 0 0 1-.712-.288A.97.97 0 0 1 19 10V6.4L6.4 19H10q.425 0 .713.288A.97.97 0 0 1 11 20q0 .424-.287.712A.97.97 0 0 1 10 21z"
  })
}));
SvgExpand.displayName = 'SvgExpand';
const ExpandIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExpand, _objectSpread$1a(_objectSpread$1a({}, props), {}, {
      className: createClass(getIconStyles$1a(props))
    }));
  }
});
ExpandIcon.displayName = 'ExpandIcon';
var ExpandIcon$1 = ExpandIcon;

function ownKeys$19(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$19(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$19(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$19(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$19 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$19 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$19[size], "px"),
        height: "".concat(iconSizes$19[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$19.big, "px"),
        height: "".concat(iconSizes$19.big, "px")
      };
  }
};
const getSizeStyle$19 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$19(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$19 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$19 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$19(props.color), ";}&,image{", getSizeStyle$19(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExport = props => jsxRuntime.jsx("svg", _objectSpread$19(_objectSpread$19({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.8 16.275a.95.95 0 0 1-.288-.725q.013-.425.313-.725L11.65 13H4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 12q0-.425.288-.713A.97.97 0 0 1 4 11h7.65L9.8 9.15q-.3-.3-.3-.712 0-.413.3-.713t.713-.3.712.3L14.8 11.3q.15.15.213.325.062.175.062.375t-.062.375a.9.9 0 0 1-.213.325l-3.6 3.6a.93.93 0 0 1-.687.275.97.97 0 0 1-.713-.3M5 21q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19v-3q0-.425.288-.713A.97.97 0 0 1 4 15a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 16v3h14V5H5v3q0 .424-.287.712A.97.97 0 0 1 4 9a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 8V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h14q.825 0 1.413.587Q21 4.175 21 5v14q0 .825-.587 1.413A1.93 1.93 0 0 1 19 21z"
  })
}));
SvgExport.displayName = 'SvgExport';
const ExportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExport, _objectSpread$19(_objectSpread$19({}, props), {}, {
      className: createClass(getIconStyles$19(props))
    }));
  }
});
ExportIcon.displayName = 'ExportIcon';
var ExportIcon$1 = ExportIcon;

function ownKeys$18(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$18(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$18(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$18(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$18 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$18 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$18[size], "px"),
        height: "".concat(iconSizes$18[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$18.big, "px"),
        height: "".concat(iconSizes$18.big, "px")
      };
  }
};
const getSizeStyle$18 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$18(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$18 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$18 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$18(props.color), ";}&,image{", getSizeStyle$18(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExternalLink = props => jsxRuntime.jsx("svg", _objectSpread$18(_objectSpread$18({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 21q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h7v2H5v14h14v-7h2v7q0 .825-.587 1.413A1.93 1.93 0 0 1 19 21zm4.7-5.3-1.4-1.4L17.6 5H14V3h7v7h-2V6.4z"
  })
}));
SvgExternalLink.displayName = 'SvgExternalLink';
const ExternalLinkIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExternalLink, _objectSpread$18(_objectSpread$18({}, props), {}, {
      className: createClass(getIconStyles$18(props))
    }));
  }
});
ExternalLinkIcon.displayName = 'ExternalLinkIcon';
var ExternalLinkIcon$1 = ExternalLinkIcon;

function ownKeys$17(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$17(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$17(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$17(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$17 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$17 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$17[size], "px"),
        height: "".concat(iconSizes$17[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$17.big, "px"),
        height: "".concat(iconSizes$17.big, "px")
      };
  }
};
const getSizeStyle$17 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$17(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$17 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$17 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$17(props.color), ";}&,image{", getSizeStyle$17(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEyeCrossed = props => jsxRuntime.jsx("svg", _objectSpread$17(_objectSpread$17({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.355 12.39-1.187-1.186q.184-.96-.552-1.8-.736-.838-1.902-.654l-1.187-1.186q.348-.164.706-.246T12 7.236q1.534 0 2.608 1.074t1.074 2.608q0 .41-.082.768a3.5 3.5 0 0 1-.245.705m2.618 2.578-1.187-1.145a9 9 0 0 0 1.381-1.3 7.3 7.3 0 0 0 1.033-1.605 8.05 8.05 0 0 0-2.936-3.283Q14.352 6.418 12 6.418q-.594 0-1.166.082a8 8 0 0 0-1.125.245L8.441 5.477A9.1 9.1 0 0 1 12 4.782q3.09 0 5.502 1.707A9.74 9.74 0 0 1 21 10.92a9.6 9.6 0 0 1-1.237 2.24 9 9 0 0 1-1.79 1.81M18.382 20l-3.437-3.395q-.715.225-1.441.337a10 10 0 0 1-1.504.113q-3.09 0-5.502-1.708A9.74 9.74 0 0 1 3 10.918a9.7 9.7 0 0 1 1.084-2.015 9.4 9.4 0 0 1 1.493-1.667l-2.25-2.29L4.473 3.8l15.054 15.055zM6.722 8.382A9 9 0 0 0 5.64 9.548q-.492.634-.839 1.37a8.04 8.04 0 0 0 2.935 3.283Q9.648 15.418 12 15.418q.41 0 .798-.05.389-.052.797-.114l-.736-.777q-.225.062-.43.092A3 3 0 0 1 12 14.6q-1.534 0-2.608-1.073-1.074-1.075-1.074-2.609 0-.225.03-.43.032-.204.093-.429z"
  })
}));
SvgEyeCrossed.displayName = 'SvgEyeCrossed';
const EyeCrossedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEyeCrossed, _objectSpread$17(_objectSpread$17({}, props), {}, {
      className: createClass(getIconStyles$17(props))
    }));
  }
});
EyeCrossedIcon.displayName = 'EyeCrossedIcon';
var EyeCrossedIcon$1 = EyeCrossedIcon;

function ownKeys$16(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$16(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$16(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$16(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$16 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$16 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$16[size], "px"),
        height: "".concat(iconSizes$16[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$16.big, "px"),
        height: "".concat(iconSizes$16.big, "px")
      };
  }
};
const getSizeStyle$16 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$16(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$16 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$16 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$16(props.color), ";}&,image{", getSizeStyle$16(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEye = props => jsxRuntime.jsx("svg", _objectSpread$16(_objectSpread$16({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 15.818q1.534 0 2.608-1.073 1.074-1.074 1.074-2.609 0-1.533-1.074-2.608Q13.534 8.455 12 8.455T9.392 9.528t-1.074 2.608 1.074 2.609q1.074 1.073 2.608 1.073m0-1.473a2.13 2.13 0 0 1-1.564-.644q-.645-.644-.645-1.565t.645-1.565q.643-.644 1.564-.644.92 0 1.565.644.645.645.644 1.565a2.13 2.13 0 0 1-.644 1.565q-.644.644-1.565.644m0 3.928a9.47 9.47 0 0 1-5.44-1.668Q4.103 14.94 3 12.136q1.104-2.802 3.56-4.47A9.47 9.47 0 0 1 12 6q2.986 0 5.44 1.667 2.456 1.667 3.56 4.47-1.104 2.801-3.56 4.468A9.47 9.47 0 0 1 12 18.273m0-1.637a7.8 7.8 0 0 0 4.245-1.217 8 8 0 0 0 2.955-3.283 8 8 0 0 0-2.955-3.283A7.8 7.8 0 0 0 12 7.636q-2.31 0-4.245 1.217A8 8 0 0 0 4.8 12.136a8 8 0 0 0 2.955 3.283A7.8 7.8 0 0 0 12 16.636"
  })
}));
SvgEye.displayName = 'SvgEye';
const EyeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEye, _objectSpread$16(_objectSpread$16({}, props), {}, {
      className: createClass(getIconStyles$16(props))
    }));
  }
});
EyeIcon.displayName = 'EyeIcon';
var EyeIcon$1 = EyeIcon;

function ownKeys$15(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$15(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$15(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$15(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$15 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$15 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$15[size], "px"),
        height: "".concat(iconSizes$15[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$15.big, "px"),
        height: "".concat(iconSizes$15.big, "px")
      };
  }
};
const getSizeStyle$15 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$15(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$15 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$15 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$15(props.color), ";}&,image{", getSizeStyle$15(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFilterAndList = props => jsxRuntime.jsx("svg", _objectSpread$15(_objectSpread$15({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8 18H4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 17q0-.424.288-.712A.97.97 0 0 1 4 16h4q.425 0 .713.288A.97.97 0 0 1 9 17q0 .424-.287.712A.97.97 0 0 1 8 18M20 8H4a.97.97 0 0 1-.712-.287A.97.97 0 0 1 3 7q0-.425.288-.713A.97.97 0 0 1 4 6h16q.424 0 .712.287Q21 6.575 21 7a.97.97 0 0 1-.288.713A.97.97 0 0 1 20 8m-6 5H4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 12q0-.425.288-.713A.97.97 0 0 1 4 11h10a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 12q0 .424-.287.712A.97.97 0 0 1 14 13"
  })
}));
SvgFilterAndList.displayName = 'SvgFilterAndList';
const FilterAndListIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFilterAndList, _objectSpread$15(_objectSpread$15({}, props), {}, {
      className: createClass(getIconStyles$15(props))
    }));
  }
});
FilterAndListIcon.displayName = 'FilterAndListIcon';
var FilterAndListIcon$1 = FilterAndListIcon;

function ownKeys$14(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$14(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$14(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$14(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$14 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$14 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$14[size], "px"),
        height: "".concat(iconSizes$14[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$14.big, "px"),
        height: "".concat(iconSizes$14.big, "px")
      };
  }
};
const getSizeStyle$14 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$14(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$14 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$14 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$14(props.color), ";}&,image{", getSizeStyle$14(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFilter = props => jsxRuntime.jsx("svg", _objectSpread$14(_objectSpread$14({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11 20a.97.97 0 0 1-.712-.288A.97.97 0 0 1 10 19v-6L4.2 5.6q-.375-.5-.112-1.05T5 4h14q.65 0 .913.55.262.55-.113 1.05L14 13v6q0 .424-.287.712A.97.97 0 0 1 13 20z"
  })
}));
SvgFilter.displayName = 'SvgFilter';
const FilterIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFilter, _objectSpread$14(_objectSpread$14({}, props), {}, {
      className: createClass(getIconStyles$14(props))
    }));
  }
});
FilterIcon.displayName = 'FilterIcon';
var FilterIcon$1 = FilterIcon;

function ownKeys$13(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$13(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$13(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$13(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$13 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$13 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$13[size], "px"),
        height: "".concat(iconSizes$13[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$13.big, "px"),
        height: "".concat(iconSizes$13.big, "px")
      };
  }
};
const getSizeStyle$13 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$13(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$13 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$13 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$13(props.color), ";}&,image{", getSizeStyle$13(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlagFilled = props => jsxRuntime.jsx("svg", _objectSpread$13(_objectSpread$13({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.059 21q-.45 0-.755-.305A1.02 1.02 0 0 1 4 19.941V4.06q0-.45.304-.755Q4.609 3 5.059 3h7.597q.37 0 .662.238.29.239.37.61l.265 1.27h4.87q.45-.001.754.304.305.304.305.754v8.471q0 .45-.305.754a1.02 1.02 0 0 1-.754.305h-5.479q-.37 0-.662-.238a1.05 1.05 0 0 1-.37-.61l-.265-1.27h-5.93v6.353q0 .45-.303.754a1.02 1.02 0 0 1-.755.305"
  })
}));
SvgFlagFilled.displayName = 'SvgFlagFilled';
const FlagFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlagFilled, _objectSpread$13(_objectSpread$13({}, props), {}, {
      className: createClass(getIconStyles$13(props))
    }));
  }
});
FlagFilledIcon.displayName = 'FlagFilledIcon';
var FlagFilledIcon$1 = FlagFilledIcon;

function ownKeys$12(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$12(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$12(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$12(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$12 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$12 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$12[size], "px"),
        height: "".concat(iconSizes$12[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$12.big, "px"),
        height: "".concat(iconSizes$12.big, "px")
      };
  }
};
const getSizeStyle$12 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$12(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$12 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$12 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$12(props.color), ";}&,image{", getSizeStyle$12(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlagLinear = props => jsxRuntime.jsx("svg", _objectSpread$12(_objectSpread$12({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.059 21q-.45 0-.755-.305A1.02 1.02 0 0 1 4 19.941V4.06q0-.45.304-.755Q4.609 3 5.059 3h7.597q.37 0 .662.238.29.239.37.61l.265 1.27h4.87q.45-.001.754.304.305.304.305.754v8.471q0 .45-.305.754a1.02 1.02 0 0 1-.754.305h-5.479q-.37 0-.662-.238a1.05 1.05 0 0 1-.37-.61l-.265-1.27h-5.93v6.353q0 .45-.303.754a1.02 1.02 0 0 1-.755.305m9.159-7.412h3.547V7.235h-5.56l-.423-2.117H6.118v6.353h7.676z"
  })
}));
SvgFlagLinear.displayName = 'SvgFlagLinear';
const FlagLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlagLinear, _objectSpread$12(_objectSpread$12({}, props), {}, {
      className: createClass(getIconStyles$12(props))
    }));
  }
});
FlagLinearIcon.displayName = 'FlagLinearIcon';
var FlagLinearIcon$1 = FlagLinearIcon;

function ownKeys$11(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$11(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$11(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$11(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$11 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$11 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$11[size], "px"),
        height: "".concat(iconSizes$11[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$11.big, "px"),
        height: "".concat(iconSizes$11.big, "px")
      };
  }
};
const getSizeStyle$11 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$11(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$11 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$11 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$11(props.color), ";}&,image{", getSizeStyle$11(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlame = props => jsxRuntime.jsx("svg", _objectSpread$11(_objectSpread$11({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 13.613q0 2.42 1.248 4.368a8 8 0 0 0 3.286 2.943 4.9 4.9 0 0 1-.904-1.478 4.7 4.7 0 0 1-.319-1.707q0-.968.357-1.82a4.6 4.6 0 0 1 1.07-1.542l3.413-3.363 3.44 3.363q.687.687 1.044 1.541.356.854.356 1.821a4.7 4.7 0 0 1-.318 1.707 4.9 4.9 0 0 1-.904 1.478 8 8 0 0 0 3.286-2.943q1.248-1.948 1.248-4.368a8.2 8.2 0 0 0-.956-3.872 8.1 8.1 0 0 0-2.636-2.955.52.52 0 0 0-.484-.064q-.255.09-.458.319a2 2 0 0 1-.7.573 1.9 1.9 0 0 1-.854.19 2.02 2.02 0 0 1-1.465-.585 1.95 1.95 0 0 1-.599-1.452V3.933q0-.535-.445-.802-.446-.268-.88.012-3.183 1.962-5.005 4.738Q4 10.658 4 13.613m8.151-.459-2.343 2.293a3 3 0 0 0-.726 1.044q-.242.586-.242 1.248 0 1.35.968 2.306.968.955 2.343.955t2.344-.955a3.12 3.12 0 0 0 .968-2.306q0-.662-.255-1.248a3.4 3.4 0 0 0-.713-1.044z"
  })
}));
SvgFlame.displayName = 'SvgFlame';
const FlameIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlame, _objectSpread$11(_objectSpread$11({}, props), {}, {
      className: createClass(getIconStyles$11(props))
    }));
  }
});
FlameIcon.displayName = 'FlameIcon';
var FlameIcon$1 = FlameIcon;

function ownKeys$10(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$10(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$10(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$10(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$10 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$10 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$10[size], "px"),
        height: "".concat(iconSizes$10[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$10.big, "px"),
        height: "".concat(iconSizes$10.big, "px")
      };
  }
};
const getSizeStyle$10 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$10(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$10 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$10 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$10(props.color), ";}&,image{", getSizeStyle$10(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFractionDigits = props => jsxRuntime.jsx("svg", _objectSpread$10(_objectSpread$10({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsxs("g", {
    fillRule: "evenodd",
    children: [jsxRuntime.jsx("path", {
      fill: "#1A1A1A",
      fillRule: "nonzero",
      d: "M4.686 11.162q0-.492.263-.744.264-.252.768-.252.486 0 .753.258.266.258.266.738 0 .463-.27.73-.269.266-.75.266-.491 0-.76-.26-.27-.261-.27-.736m9.158-3.445q0 2.244-.736 3.322-.735 1.078-2.264 1.078-1.483 0-2.236-1.113t-.753-3.287q0-2.268.733-3.343.732-1.075 2.256-1.075 1.482 0 2.241 1.125t.759 3.293m-4.19 0q0 1.576.273 2.259.272.682.917.682.633 0 .914-.691.28-.691.281-2.25 0-1.577-.284-2.265-.285-.688-.911-.688-.639 0-.914.688-.276.69-.276 2.265m11.04 0q0 2.244-.736 3.322-.735 1.078-2.265 1.078-1.482 0-2.235-1.113t-.753-3.287q0-2.268.732-3.343.733-1.075 2.256-1.075 1.483 0 2.242 1.125t.758 3.293m-4.19 0q0 1.576.272 2.259.273.682.917.682.633 0 .914-.691t.282-2.25q0-1.577-.285-2.265-.284-.688-.91-.688-.639 0-.915.688-.275.69-.275 2.265"
    }), jsxRuntime.jsxs("g", {
      fill: "#1A1A1A",
      fillRule: "nonzero",
      children: [jsxRuntime.jsx("path", {
        d: "m7.002 18.017-.004-2 10.5-.019.004 2z"
      }), jsxRuntime.jsx("path", {
        d: "M16.945 13.581v6.869l4.145-3.466z"
      })]
    })]
  })
}));
SvgFractionDigits.displayName = 'SvgFractionDigits';
const FractionDigitsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFractionDigits, _objectSpread$10(_objectSpread$10({}, props), {}, {
      className: createClass(getIconStyles$10(props))
    }));
  }
});
FractionDigitsIcon.displayName = 'FractionDigitsIcon';
var FractionDigitsIcon$1 = FractionDigitsIcon;

function ownKeys$$(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$$(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$$(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$$(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$$ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$$ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$$[size], "px"),
        height: "".concat(iconSizes$$[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$$.big, "px"),
        height: "".concat(iconSizes$$.big, "px")
      };
  }
};
const getSizeStyle$$ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$$(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$$ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$$ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$$(props.color), ";}&,image{", getSizeStyle$$(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGear = props => jsxRuntime.jsx("svg", _objectSpread$$(_objectSpread$$({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.732 21.47h-3.464a.86.86 0 0 1-.6-.23.92.92 0 0 1-.3-.578l-.277-2.147q-.3-.116-.565-.277a8 8 0 0 1-.52-.346l-2.009.83a1.03 1.03 0 0 1-.646.024.86.86 0 0 1-.508-.393l-1.709-2.978a.87.87 0 0 1-.115-.646.9.9 0 0 1 .346-.555l1.732-1.316a2 2 0 0 1-.023-.312v-.623q0-.15.023-.311l-1.732-1.316a.89.89 0 0 1-.346-.554.87.87 0 0 1 .115-.647l1.709-2.978a.73.73 0 0 1 .496-.405q.335-.08.658.035l2.009.832q.255-.185.53-.347.278-.161.555-.277l.277-2.147a.92.92 0 0 1 .3-.577q.255-.231.6-.231h3.464q.345 0 .6.23a.92.92 0 0 1 .3.578l.277 2.147q.3.116.566.277t.52.347l2.008-.832q.322-.115.646-.023a.86.86 0 0 1 .508.393l1.709 2.978q.184.3.115.647a.89.89 0 0 1-.346.554l-1.732 1.316a2 2 0 0 1 .023.31v.624q0 .15-.046.312l1.732 1.316q.277.208.346.555a.87.87 0 0 1-.115.646l-1.709 2.955a.9.9 0 0 1-.519.405 1 1 0 0 1-.658-.012l-1.963-.831q-.255.184-.53.346-.278.162-.555.277l-.277 2.147a.92.92 0 0 1-.3.577.86.86 0 0 1-.6.231m-1.686-6.003q1.34 0 2.286-.946a3.12 3.12 0 0 0 .946-2.286q0-1.339-.946-2.286a3.12 3.12 0 0 0-2.286-.946q-1.362 0-2.298.946a3.14 3.14 0 0 0-.934 2.286q0 1.34.934 2.286.936.945 2.298.946m0-1.847q-.577 0-.98-.404a1.33 1.33 0 0 1-.405-.98q0-.579.404-.982.404-.405.981-.404.577 0 .982.404.403.404.403.981 0 .578-.403.98-.405.405-.982.405m-.97 6.003H12.9l.324-2.447q.716-.184 1.328-.543a5.5 5.5 0 0 0 1.119-.865l2.286.946.9-1.57-1.985-1.5q.114-.324.161-.682a5.7 5.7 0 0 0 0-1.455 3.3 3.3 0 0 0-.162-.68l1.986-1.501-.9-1.57-2.286.97a5.2 5.2 0 0 0-1.12-.89 5.2 5.2 0 0 0-1.327-.542l-.3-2.447H11.1l-.324 2.447q-.716.185-1.327.542a5.5 5.5 0 0 0-1.12.867l-2.286-.947-.9 1.57 1.986 1.478q-.115.345-.162.692a5.6 5.6 0 0 0 0 1.455q.046.345.162.692l-1.986 1.501.9 1.57 2.286-.97a5.1 5.1 0 0 0 2.447 1.432z"
  })
}));
SvgGear.displayName = 'SvgGear';
const GearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGear, _objectSpread$$(_objectSpread$$({}, props), {}, {
      className: createClass(getIconStyles$$(props))
    }));
  }
});
GearIcon.displayName = 'GearIcon';
var GearIcon$1 = GearIcon;

function ownKeys$_(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$_(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$_(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$_(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$_ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$_ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$_[size], "px"),
        height: "".concat(iconSizes$_[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$_.big, "px"),
        height: "".concat(iconSizes$_.big, "px")
      };
  }
};
const getSizeStyle$_ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$_(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$_ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$_ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$_(props.color), ";}&,image{", getSizeStyle$_(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGraduationCap = props => jsxRuntime.jsx("svg", _objectSpread$_(_objectSpread$_({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.538 19.01a1.66 1.66 0 0 1-.818-.214l-4.3-2.323a1.7 1.7 0 0 1-.667-.634 1.7 1.7 0 0 1-.237-.893v-4.129l-2.064-1.14a.84.84 0 0 1-.344-.322.9.9 0 0 1-.108-.43.9.9 0 0 1 .108-.43.84.84 0 0 1 .344-.323l7.268-3.957q.195-.108.398-.162a1.66 1.66 0 0 1 1.237.162l8.193 4.473a.8.8 0 0 1 .334.312.87.87 0 0 1 .118.44v5.506a.83.83 0 0 1-.248.613.83.83 0 0 1-.612.248.83.83 0 0 1-.613-.248.83.83 0 0 1-.247-.613V9.871l-1.72.946v4.13q0 .494-.237.892-.237.397-.667.634l-4.301 2.323a1.656 1.656 0 0 1-.817.215m0-6.903 5.892-3.182-5.892-3.183-5.893 3.183zm0 5.183 4.3-2.322V11.72l-3.462 1.914a1.755 1.755 0 0 1-1.269.16 1.7 1.7 0 0 1-.408-.16L7.237 11.72v3.248z"
  })
}));
SvgGraduationCap.displayName = 'SvgGraduationCap';
const GraduationCapIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGraduationCap, _objectSpread$_(_objectSpread$_({}, props), {}, {
      className: createClass(getIconStyles$_(props))
    }));
  }
});
GraduationCapIcon.displayName = 'GraduationCapIcon';
var GraduationCapIcon$1 = GraduationCapIcon;

function ownKeys$Z(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$Z(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Z(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Z(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$Z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Z[size], "px"),
        height: "".concat(iconSizes$Z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Z.big, "px"),
        height: "".concat(iconSizes$Z.big, "px")
      };
  }
};
const getSizeStyle$Z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Z(props.color), ";}&,image{", getSizeStyle$Z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGraph = props => jsxRuntime.jsx("svg", _objectSpread$Z(_objectSpread$Z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.25 21q-.928 0-1.588-.66A2.17 2.17 0 0 1 3 18.75v-7.875q0-.928.662-1.59.66-.66 1.588-.66t1.588.66q.662.662.662 1.59v7.875q0 .928-.662 1.59-.66.66-1.588.66M12 21q-.928 0-1.588-.66a2.17 2.17 0 0 1-.662-1.59V5.25q0-.928.662-1.588Q11.072 3 12 3t1.59.662q.66.66.66 1.588v13.5a2.17 2.17 0 0 1-.66 1.59Q12.928 21 12 21m6.75 0a2.17 2.17 0 0 1-1.59-.66 2.17 2.17 0 0 1-.66-1.59v-3.375q0-.928.66-1.59.662-.66 1.59-.66t1.59.66q.66.662.66 1.59v3.375a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66"
  })
}));
SvgGraph.displayName = 'SvgGraph';
const GraphIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGraph, _objectSpread$Z(_objectSpread$Z({}, props), {}, {
      className: createClass(getIconStyles$Z(props))
    }));
  }
});
GraphIcon.displayName = 'GraphIcon';
var GraphIcon$1 = GraphIcon;

function ownKeys$Y(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$Y(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Y(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Y(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$Y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Y[size], "px"),
        height: "".concat(iconSizes$Y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Y.big, "px"),
        height: "".concat(iconSizes$Y.big, "px")
      };
  }
};
const getSizeStyle$Y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Y(props.color), ";}&,image{", getSizeStyle$Y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGrid = props => jsxRuntime.jsx("svg", _objectSpread$Y(_objectSpread$Y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 21q-.743 0-1.27-.528A1.73 1.73 0 0 1 3 19.2V4.8q0-.742.53-1.272A1.73 1.73 0 0 1 4.8 3h14.4q.743 0 1.272.528Q21 4.058 21 4.8v14.4q0 .743-.528 1.272A1.74 1.74 0 0 1 19.2 21zm0-5.4v3.6h3.6v-3.6zm5.4 0v3.6h3.6v-3.6zm5.4 3.6h3.6v-3.6h-3.6zM4.8 13.8h3.6v-3.6H4.8zm5.4 0h3.6v-3.6h-3.6zm5.4 0h3.6v-3.6h-3.6zm-7.2-9H4.8v3.6h3.6zm1.8 3.6h3.6V4.8h-3.6zm5.4 0h3.6V4.8h-3.6z"
  })
}));
SvgGrid.displayName = 'SvgGrid';
const GridIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGrid, _objectSpread$Y(_objectSpread$Y({}, props), {}, {
      className: createClass(getIconStyles$Y(props))
    }));
  }
});
GridIcon.displayName = 'GridIcon';
var GridIcon$1 = GridIcon;

function ownKeys$X(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$X(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$X(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$X(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$X = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$X = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$X[size], "px"),
        height: "".concat(iconSizes$X[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$X.big, "px"),
        height: "".concat(iconSizes$X.big, "px")
      };
  }
};
const getSizeStyle$X = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$X(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$X = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$X = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$X(props.color), ";}&,image{", getSizeStyle$X(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgHeart = props => jsxRuntime.jsx("svg", _objectSpread$X(_objectSpread$X({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m9.785 18.085-1.553-1.418a61 61 0 0 1-4.308-4.331Q2 10.188 2 7.6q0-2.115 1.418-3.533Q4.834 2.65 6.95 2.65q1.193 0 2.25.506 1.057.507 1.8 1.384a5.4 5.4 0 0 1 1.8-1.384 5.15 5.15 0 0 1 2.25-.506q2.115 0 3.532 1.417Q20 5.485 20 7.6q0 2.588-1.913 4.748a54 54 0 0 1-4.342 4.342l-1.53 1.395A1.7 1.7 0 0 1 11 18.58a1.7 1.7 0 0 1-1.215-.495m.36-11.745q-.652-.922-1.395-1.407-.742-.483-1.8-.483-1.35 0-2.25.9T3.8 7.6q0 1.17.833 2.486.832 1.317 1.991 2.554a34 34 0 0 0 2.385 2.317q1.226 1.08 1.991 1.778.765-.697 1.992-1.777a35 35 0 0 0 2.385-2.318 17 17 0 0 0 1.99-2.554Q18.2 8.77 18.2 7.6q0-1.35-.9-2.25t-2.25-.9q-1.058 0-1.8.483-.742.485-1.395 1.407a1.02 1.02 0 0 1-.855.45q-.247 0-.473-.113a1 1 0 0 1-.382-.337"
  })
}));
SvgHeart.displayName = 'SvgHeart';
const HeartIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgHeart, _objectSpread$X(_objectSpread$X({}, props), {}, {
      className: createClass(getIconStyles$X(props))
    }));
  }
});
HeartIcon.displayName = 'HeartIcon';
var HeartIcon$1 = HeartIcon;

function ownKeys$W(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$W(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$W(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$W(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$W = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$W = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$W[size], "px"),
        height: "".concat(iconSizes$W[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$W.big, "px"),
        height: "".concat(iconSizes$W.big, "px")
      };
  }
};
const getSizeStyle$W = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$W(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$W = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$W = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$W(props.color), ";}&,image{", getSizeStyle$W(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgHome = props => jsxRuntime.jsx("svg", _objectSpread$W(_objectSpread$W({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M6.057 18.943h3.086V12.77h6.171v6.172H18.4V9.686l-6.171-4.629-6.172 4.629zm0 2.057a1.98 1.98 0 0 1-1.452-.604A1.98 1.98 0 0 1 4 18.943V9.686q0-.49.22-.926.217-.437.603-.72l6.171-4.629q.283-.206.592-.308A2 2 0 0 1 12.229 3q.334 0 .642.103.309.102.592.308l6.171 4.629q.386.284.605.72.218.437.218.926v9.257q0 .849-.604 1.453A1.98 1.98 0 0 1 18.4 21h-5.143v-6.171H11.2V21z"
  })
}));
SvgHome.displayName = 'SvgHome';
const HomeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgHome, _objectSpread$W(_objectSpread$W({}, props), {}, {
      className: createClass(getIconStyles$W(props))
    }));
  }
});
HomeIcon.displayName = 'HomeIcon';
var HomeIcon$1 = HomeIcon;

function ownKeys$V(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$V(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$V(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$V(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$V = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$V = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$V[size], "px"),
        height: "".concat(iconSizes$V[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$V.big, "px"),
        height: "".concat(iconSizes$V.big, "px")
      };
  }
};
const getSizeStyle$V = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$V(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$V = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$V = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$V(props.color), ";}&,image{", getSizeStyle$V(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgImport = props => jsxRuntime.jsx("svg", _objectSpread$V(_objectSpread$V({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.022q-.479 0-.801-.324a1.09 1.09 0 0 1-.324-.801V6.853l-2.11 2.11a1.08 1.08 0 0 1-.787.337q-.45 0-.816-.366a1.05 1.05 0 0 1-.322-.802q.013-.463.322-.773l4.05-4.05a1 1 0 0 1 .366-.24Q11.775 3 12 3t.422.07a1 1 0 0 1 .365.24l4.05 4.05q.338.336.323.8-.013.465-.323.774a1.14 1.14 0 0 1-.8.351q-.465.014-.803-.322l-2.109-2.11v8.044q0 .479-.323.8a1.1 1.1 0 0 1-.802.325m-6.75 4.5q-.928 0-1.588-.66A2.17 2.17 0 0 1 3 18.272v-2.25q0-.478.323-.802.324-.323.802-.323t.802.323q.323.324.323.802v2.25h13.5v-2.25q0-.478.324-.802.323-.323.801-.323t.801.323q.324.324.324.802v2.25a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66z"
  })
}));
SvgImport.displayName = 'SvgImport';
const ImportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgImport, _objectSpread$V(_objectSpread$V({}, props), {}, {
      className: createClass(getIconStyles$V(props))
    }));
  }
});
ImportIcon.displayName = 'ImportIcon';
var ImportIcon$1 = ImportIcon;

function ownKeys$U(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$U(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$U(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$U(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$U = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$U = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$U[size], "px"),
        height: "".concat(iconSizes$U[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$U.big, "px"),
        height: "".concat(iconSizes$U.big, "px")
      };
  }
};
const getSizeStyle$U = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$U(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$U = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$U = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$U(props.color), ";}&,image{", getSizeStyle$U(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgInfo = props => jsxRuntime.jsx("svg", _objectSpread$U(_objectSpread$U({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.5a.87.87 0 0 0 .642-.26.87.87 0 0 0 .258-.64v-3.623a.84.84 0 0 0-.258-.63A.9.9 0 0 0 12 11.1a.87.87 0 0 0-.64.258.87.87 0 0 0-.26.642v3.623q0 .382.26.63a.9.9 0 0 0 .64.247m0-7.2a.87.87 0 0 0 .642-.26.87.87 0 0 0 .258-.64.87.87 0 0 0-.258-.642A.87.87 0 0 0 12 7.5a.87.87 0 0 0-.64.258.87.87 0 0 0-.26.642q0 .383.26.64.257.26.64.26M12 21a8.8 8.8 0 0 1-3.51-.71 9.1 9.1 0 0 1-2.857-1.922 9.1 9.1 0 0 1-1.924-2.858A8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9.1 9.1 0 0 1 1.923-2.857A9.1 9.1 0 0 1 8.49 3.708 8.8 8.8 0 0 1 12 3q1.867 0 3.51.708a9.1 9.1 0 0 1 2.858 1.925A9.1 9.1 0 0 1 20.29 8.49 8.8 8.8 0 0 1 21 12a8.8 8.8 0 0 1-.71 3.51 9.1 9.1 0 0 1-1.922 2.858 9.1 9.1 0 0 1-2.858 1.923A8.8 8.8 0 0 1 12 21"
  })
}));
SvgInfo.displayName = 'SvgInfo';
const InfoIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgInfo, _objectSpread$U(_objectSpread$U({}, props), {}, {
      className: createClass(getIconStyles$U(props))
    }));
  }
});
InfoIcon.displayName = 'InfoIcon';
var InfoIcon$1 = InfoIcon;

function ownKeys$T(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$T(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$T(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$T(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$T = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$T = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$T[size], "px"),
        height: "".concat(iconSizes$T[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$T.big, "px"),
        height: "".concat(iconSizes$T.big, "px")
      };
  }
};
const getSizeStyle$T = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$T(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$T = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$T = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$T(props.color), ";}&,image{", getSizeStyle$T(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgInformation = props => jsxRuntime.jsx("svg", _objectSpread$T(_objectSpread$T({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M11.856 4.773a1.932 1.932 0 1 1 0 3.863 1.932 1.932 0 0 1 0-3.863m3.112 14.81H9.173a.966.966 0 1 1 0-1.932h.966v-5.795h-.966a.966.966 0 1 1 0-1.932h3.864c.533 0 .966.433.966.966v6.761h.965a.966.966 0 0 1 0 1.932"
  })
}));
SvgInformation.displayName = 'SvgInformation';
const InformationIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgInformation, _objectSpread$T(_objectSpread$T({}, props), {}, {
      className: createClass(getIconStyles$T(props))
    }));
  }
});
InformationIcon.displayName = 'InformationIcon';
var InformationIcon$1 = InformationIcon;

function ownKeys$S(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$S(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$S(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$S(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$S = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$S = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$S[size], "px"),
        height: "".concat(iconSizes$S[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$S.big, "px"),
        height: "".concat(iconSizes$S.big, "px")
      };
  }
};
const getSizeStyle$S = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$S(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$S = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$S = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$S(props.color), ";}&,image{", getSizeStyle$S(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLayers = props => jsxRuntime.jsx("svg", _objectSpread$S(_objectSpread$S({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#000",
    d: "M11.996 21a1.5 1.5 0 0 1-.507-.091 1.8 1.8 0 0 1-.466-.253l-7.706-6.009a.71.71 0 0 1-.304-.621.78.78 0 0 1 .332-.623.8.8 0 0 1 .478-.159q.26 0 .47.159L12 19.412l7.707-6.01a.8.8 0 0 1 .956 0q.317.237.327.622a.72.72 0 0 1-.307.623l-7.706 6.009a1.9 1.9 0 0 1-.47.253 1.5 1.5 0 0 1-.51.091m0-4.023a1.5 1.5 0 0 1-.507-.092 1.8 1.8 0 0 1-.466-.253L3.29 10.623a.75.75 0 0 1-.224-.296.9.9 0 0 1 0-.677.75.75 0 0 1 .224-.297l7.734-6.009q.22-.162.47-.253a1.48 1.48 0 0 1 1.017 0q.247.09.466.253l7.733 6.009q.158.132.224.297a.9.9 0 0 1 0 .677.75.75 0 0 1-.224.297l-7.734 6.008a1.9 1.9 0 0 1-.47.253 1.5 1.5 0 0 1-.51.091M12 15.388l6.915-5.4L12 4.588l-6.915 5.4z"
  })
}));
SvgLayers.displayName = 'SvgLayers';
const LayersIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLayers, _objectSpread$S(_objectSpread$S({}, props), {}, {
      className: createClass(getIconStyles$S(props))
    }));
  }
});
LayersIcon.displayName = 'LayersIcon';
var LayersIcon$1 = LayersIcon;

function ownKeys$R(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$R(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$R(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$R(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$R = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$R = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$R[size], "px"),
        height: "".concat(iconSizes$R[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$R.big, "px"),
        height: "".concat(iconSizes$R.big, "px")
      };
  }
};
const getSizeStyle$R = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$R(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$R = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$R = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$R(props.color), ";}&,image{", getSizeStyle$R(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgListWithSearch = props => jsxRuntime.jsx("svg", _objectSpread$R(_objectSpread$R({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.92 8.759a.89.89 0 0 1-.655-.265A.89.89 0 0 1 3 7.839q0-.39.265-.656a.9.9 0 0 1 .655-.263h2.758q.391 0 .656.263a.9.9 0 0 1 .264.656q0 .39-.264.655a.9.9 0 0 1-.656.265zm0 4.597a.89.89 0 0 1-.655-.264.89.89 0 0 1-.265-.655q0-.391.265-.656a.9.9 0 0 1 .655-.264h2.758q.391 0 .656.264a.9.9 0 0 1 .264.656q0 .39-.264.655a.9.9 0 0 1-.656.264zm15.54 3.954-2.897-2.896q-.552.39-1.206.585-.656.196-1.322.196-1.91 0-3.253-1.345-1.345-1.344-1.345-3.252t1.345-3.254Q12.126 6 14.034 6t3.254 1.344q1.344 1.346 1.344 3.254 0 .666-.195 1.322a4.1 4.1 0 0 1-.586 1.206l2.896 2.897a.87.87 0 0 1 .253.644q0 .39-.253.643a.87.87 0 0 1-.644.253.87.87 0 0 1-.643-.253m-5.426-3.954a2.66 2.66 0 0 0 1.954-.804 2.66 2.66 0 0 0 .805-1.954 2.66 2.66 0 0 0-.804-1.954 2.66 2.66 0 0 0-1.955-.805 2.66 2.66 0 0 0-1.953.805 2.66 2.66 0 0 0-.805 1.954q0 1.149.805 1.954a2.66 2.66 0 0 0 1.954.804M3.92 17.954a.89.89 0 0 1-.655-.265.89.89 0 0 1-.265-.654q0-.392.265-.655a.89.89 0 0 1 .655-.265h7.356a.9.9 0 0 1 .656.265.9.9 0 0 1 .263.655.9.9 0 0 1-.264.654.9.9 0 0 1-.655.265z"
  })
}));
SvgListWithSearch.displayName = 'SvgListWithSearch';
const ListWithSearchIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgListWithSearch, _objectSpread$R(_objectSpread$R({}, props), {}, {
      className: createClass(getIconStyles$R(props))
    }));
  }
});
ListWithSearchIcon.displayName = 'ListWithSearchIcon';
var ListWithSearchIcon$1 = ListWithSearchIcon;

function ownKeys$Q(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$Q(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Q(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Q(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$Q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Q[size], "px"),
        height: "".concat(iconSizes$Q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Q.big, "px"),
        height: "".concat(iconSizes$Q.big, "px")
      };
  }
};
const getSizeStyle$Q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Q(props.color), ";}&,image{", getSizeStyle$Q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgList = props => jsxRuntime.jsx("svg", _objectSpread$Q(_objectSpread$Q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8 9a.97.97 0 0 1-.713-.288A.97.97 0 0 1 7 8a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 7h12q.424 0 .712.287Q21 7.575 21 8q0 .424-.288.712A.97.97 0 0 1 20 9zm0 4a.97.97 0 0 1-.713-.288A.97.97 0 0 1 7 12a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 11h12q.424 0 .712.287.288.288.288.713 0 .424-.288.712A.97.97 0 0 1 20 13zm0 4a.97.97 0 0 1-.713-.288A.97.97 0 0 1 7 16a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 15h12q.424 0 .712.287.288.288.288.713 0 .424-.288.712A.97.97 0 0 1 20 17zM4 9a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 8q0-.425.288-.713A.97.97 0 0 1 4 7a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 8q0 .424-.287.712A.97.97 0 0 1 4 9m0 4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 12q0-.425.288-.713A.97.97 0 0 1 4 11a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 12q0 .424-.287.712A.97.97 0 0 1 4 13m0 4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 16q0-.425.288-.713A.97.97 0 0 1 4 15a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 16q0 .424-.287.712A.97.97 0 0 1 4 17"
  })
}));
SvgList.displayName = 'SvgList';
const ListIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgList, _objectSpread$Q(_objectSpread$Q({}, props), {}, {
      className: createClass(getIconStyles$Q(props))
    }));
  }
});
ListIcon.displayName = 'ListIcon';
var ListIcon$1 = ListIcon;

function ownKeys$P(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$P(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$P(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$P(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$P = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$P = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$P[size], "px"),
        height: "".concat(iconSizes$P[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$P.big, "px"),
        height: "".concat(iconSizes$P.big, "px")
      };
  }
};
const getSizeStyle$P = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$P(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$P = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$P = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$P(props.color), ";}&,image{", getSizeStyle$P(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLock = props => jsxRuntime.jsx("svg", _objectSpread$P(_objectSpread$P({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M6.714 21a1.65 1.65 0 0 1-1.21-.503A1.65 1.65 0 0 1 5 19.286v-8.572q0-.707.504-1.21A1.65 1.65 0 0 1 6.714 9h.857V7.286q0-1.779 1.254-3.033Q10.078 3 11.857 3t3.033 1.253 1.253 3.033V9H17q.707 0 1.211.503.503.504.503 1.211v8.572q0 .707-.503 1.21Q17.707 21 17 21zm0-1.714H17v-8.572H6.714zm5.143-2.572q.707 0 1.211-.503.504-.504.503-1.211 0-.707-.503-1.211a1.65 1.65 0 0 0-1.21-.503 1.65 1.65 0 0 0-1.211.503q-.504.504-.504 1.211t.504 1.211a1.65 1.65 0 0 0 1.21.503M9.286 9h5.143V7.286a2.48 2.48 0 0 0-.75-1.822 2.48 2.48 0 0 0-1.822-.75 2.48 2.48 0 0 0-1.821.75q-.75.75-.75 1.822zM6.714 19.286v-8.572z"
  })
}));
SvgLock.displayName = 'SvgLock';
const LockIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLock, _objectSpread$P(_objectSpread$P({}, props), {}, {
      className: createClass(getIconStyles$P(props))
    }));
  }
});
LockIcon.displayName = 'LockIcon';
var LockIcon$1 = LockIcon;

function ownKeys$O(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$O(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$O(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$O(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$O = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$O = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$O[size], "px"),
        height: "".concat(iconSizes$O[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$O.big, "px"),
        height: "".concat(iconSizes$O.big, "px")
      };
  }
};
const getSizeStyle$O = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$O(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$O = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$O = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$O(props.color), ";}&,image{", getSizeStyle$O(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLogout = props => jsxRuntime.jsx("svg", _objectSpread$O(_objectSpread$O({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M15.325 16.275a1.1 1.1 0 0 1-.275-.738q0-.412.275-.687l1.85-1.85H10a.97.97 0 0 1-.712-.288A.97.97 0 0 1 9 12q0-.425.288-.713A.97.97 0 0 1 10 11h7.175l-1.85-1.85q-.3-.3-.3-.712 0-.413.3-.713.275-.3.688-.3t.687.275l3.6 3.6q.15.15.213.325.062.175.062.375t-.062.375a.9.9 0 0 1-.213.325l-3.6 3.6q-.325.325-.712.287a1.05 1.05 0 0 1-.663-.312M5 21q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h6a.97.97 0 0 1 .713.287A.97.97 0 0 1 12 4q0 .424-.287.712A.97.97 0 0 1 11 5H5v14h6q.425 0 .713.288A.97.97 0 0 1 12 20q0 .424-.287.712A.97.97 0 0 1 11 21z"
  })
}));
SvgLogout.displayName = 'SvgLogout';
const LogoutIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLogout, _objectSpread$O(_objectSpread$O({}, props), {}, {
      className: createClass(getIconStyles$O(props))
    }));
  }
});
LogoutIcon.displayName = 'LogoutIcon';
var LogoutIcon$1 = LogoutIcon;

function ownKeys$N(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$N(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$N(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$N(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$N = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$N = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$N[size], "px"),
        height: "".concat(iconSizes$N[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$N.big, "px"),
        height: "".concat(iconSizes$N.big, "px")
      };
  }
};
const getSizeStyle$N = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$N(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$N = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$N = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$N(props.color), ";}&,image{", getSizeStyle$N(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgMail = props => jsxRuntime.jsx("svg", _objectSpread$N(_objectSpread$N({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 19.4q-.743 0-1.27-.528A1.73 1.73 0 0 1 3 17.6V6.8q0-.743.53-1.27Q4.056 5 4.8 5h14.4q.743 0 1.272.53Q21 6.056 21 6.8v10.8q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528zM19.2 8.6l-6.727 4.208a1 1 0 0 1-.237.1 1 1 0 0 1-.236.035 1 1 0 0 1-.236-.035 1 1 0 0 1-.236-.1L4.8 8.6v9h14.4zM12 11.3l7.2-4.5H4.8zM4.8 8.6v.225-1.327.022-.72.72-.012 1.317zv9z"
  })
}));
SvgMail.displayName = 'SvgMail';
const MailIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgMail, _objectSpread$N(_objectSpread$N({}, props), {}, {
      className: createClass(getIconStyles$N(props))
    }));
  }
});
MailIcon.displayName = 'MailIcon';
var MailIcon$1 = MailIcon;

function ownKeys$M(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$M(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$M(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$M(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$M = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$M = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$M[size], "px"),
        height: "".concat(iconSizes$M[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$M.big, "px"),
        height: "".concat(iconSizes$M.big, "px")
      };
  }
};
const getSizeStyle$M = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$M(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$M = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$M = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$M(props.color), ";}&,image{", getSizeStyle$M(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgMinimize = props => jsxRuntime.jsx("svg", _objectSpread$M(_objectSpread$M({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.463 13q-.639 0-1.05-.432A1.48 1.48 0 0 1 3 11.5q0-.638.43-1.068A1.45 1.45 0 0 1 4.5 10h15.038q.636 0 1.05.432.412.43.412 1.068t-.432 1.068A1.45 1.45 0 0 1 19.5 13z"
  })
}));
SvgMinimize.displayName = 'SvgMinimize';
const MinimizeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgMinimize, _objectSpread$M(_objectSpread$M({}, props), {}, {
      className: createClass(getIconStyles$M(props))
    }));
  }
});
MinimizeIcon.displayName = 'MinimizeIcon';
var MinimizeIcon$1 = MinimizeIcon;

function ownKeys$L(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$L(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$L(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$L(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$L = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$L = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$L[size], "px"),
        height: "".concat(iconSizes$L[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$L.big, "px"),
        height: "".concat(iconSizes$L.big, "px")
      };
  }
};
const getSizeStyle$L = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$L(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$L = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$L = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$L(props.color), ";}&,image{", getSizeStyle$L(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgNestedView = props => jsxRuntime.jsx("svg", _objectSpread$L(_objectSpread$L({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M16.235 7.176H3.53A.53.53 0 0 1 3 6.647V4.53A.53.53 0 0 1 3.53 4h12.705a.53.53 0 0 1 .53.53v2.117a.53.53 0 0 1-.53.53M20.538 14H9.462C9.207 14 9 13.776 9 13.5v-2c0-.276.207-.5.462-.5h11.076c.255 0 .462.224.462.5v2c0 .276-.207.5-.462.5m0 6H9.462C9.207 20 9 19.776 9 19.5v-2c0-.276.207-.5.462-.5h11.076c.255 0 .462.224.462.5v2c0 .276-.207.5-.462.5M7.01 19c.317 0 .573.224.573.5s-.256.5-.573.5H3.573C3.257 20 3 19.776 3 19.5v-10c0-.276.257-.5.573-.5s.573.224.573.5V13H7.01c.317 0 .573.224.573.5s-.256.5-.573.5H4.146v5z"
  })
}));
SvgNestedView.displayName = 'SvgNestedView';
const NestedViewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgNestedView, _objectSpread$L(_objectSpread$L({}, props), {}, {
      className: createClass(getIconStyles$L(props))
    }));
  }
});
NestedViewIcon.displayName = 'NestedViewIcon';
var NestedViewIcon$1 = NestedViewIcon;

function ownKeys$K(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$K(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$K(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$K(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$K = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$K = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$K[size], "px"),
        height: "".concat(iconSizes$K[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$K.big, "px"),
        height: "".concat(iconSizes$K.big, "px")
      };
  }
};
const getSizeStyle$K = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$K(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$K = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$K = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$K(props.color), ";}&,image{", getSizeStyle$K(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgOperations = props => jsxRuntime.jsx("svg", _objectSpread$K(_objectSpread$K({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsxs("g", {
    fillRule: "nonzero",
    children: [jsxRuntime.jsx("path", {
      d: "M8 11c-.542 0-1 .458-1 1 0 .56.458 1 1 1 .56 0 1-.458 1-1s-.44-1-1-1M16 11c-.56 0-1 .458-1 1 0 .56.458 1 1 1s1-.44 1-1c0-.542-.458-1-1-1M12 11c-.56 0-1 .458-1 1 0 .56.458 1 1 1 .56 0 1-.458 1-1s-.44-1-1-1"
    }), jsxRuntime.jsx("path", {
      d: "M21 14.5h-1.79l.027-.13a7 7 0 0 0 .13-1.009l.007-.098q.015-.182.017-.367c0-3.635-2.59-5.532-6.195-5.89v2.225L9.555 6.11 13.195 3l.001 2.241c4.592.364 7.958 3.04 7.958 7.655q-.002.124-.011.245l-.009.142a9 9 0 0 1-.118 1.127zM10.881 21v-2.235c-4.649-.316-7.826-2.994-7.826-7.66 0-.11.008-.218.015-.326l.01-.146c.018-.36.056-.711.114-1.043l.015-.09H5l-.028.131c-.07.336-.115.7-.135 1.111l-.008.121q-.01.12-.011.241c0 3.685 2.402 5.585 6.062 5.896v-2.255l3.642 3.145z"
    })]
  })
}));
SvgOperations.displayName = 'SvgOperations';
const OperationsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgOperations, _objectSpread$K(_objectSpread$K({}, props), {}, {
      className: createClass(getIconStyles$K(props))
    }));
  }
});
OperationsIcon.displayName = 'OperationsIcon';
var OperationsIcon$1 = OperationsIcon;

function ownKeys$J(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$J(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$J(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$J(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$J = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$J = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$J[size], "px"),
        height: "".concat(iconSizes$J[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$J.big, "px"),
        height: "".concat(iconSizes$J.big, "px")
      };
  }
};
const getSizeStyle$J = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$J(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$J = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$J = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$J(props.color), ";}&,image{", getSizeStyle$J(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPageGear = props => jsxRuntime.jsxs("svg", _objectSpread$J(_objectSpread$J({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "page-gear_react_svg__a",
      d: "m12.553 4-.062-.059h-.045l.062.059zm3.824 6.086H11V4.941H5V19.06h4.779a.97.97 0 1 1 0 1.941h-5.53C3.567 21 3 20.467 3 19.794V4.206C3 3.533 3.566 3 4.25 3h9.032L18 7.441c.24.226.377.537.377.863v2.403a1 1 0 0 1-2 0zm-.914-2.328L13.06 5.494v2.264zm4.488 9.183.976.742a.223.223 0 0 1 .055.288l-.925 1.558c-.055.099-.176.139-.282.099l-1.152-.45c-.24.175-.5.328-.782.44l-.176 1.193a.224.224 0 0 1-.226.189h-1.85a.224.224 0 0 1-.228-.189l-.175-1.192a3.4 3.4 0 0 1-.782-.442l-1.152.45a.236.236 0 0 1-.282-.098l-.926-1.558a.223.223 0 0 1 .056-.288l.976-.742v-.882l-.976-.743a.22.22 0 0 1-.056-.288l.926-1.556c.055-.1.176-.14.282-.1l1.152.45c.24-.175.5-.328.782-.44l.175-1.193a.224.224 0 0 1 .227-.189h1.85c.116 0 .213.081.227.189l.176 1.193q.422.169.782.44l1.152-.45a.236.236 0 0 1 .282.1l.925 1.556a.223.223 0 0 1-.055.288l-.976.743zm-3.438 1.134c.893 0 1.62-.706 1.62-1.575 0-.868-.727-1.575-1.62-1.575-.892 0-1.619.707-1.619 1.575 0 .869.727 1.575 1.62 1.575"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#page-gear_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd"
  })]
}));
SvgPageGear.displayName = 'SvgPageGear';
const PageGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPageGear, _objectSpread$J(_objectSpread$J({}, props), {}, {
      className: createClass(getIconStyles$J(props))
    }));
  }
});
PageGearIcon.displayName = 'PageGearIcon';
var PageGearIcon$1 = PageGearIcon;

function ownKeys$I(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$I(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$I(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$I(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$I = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$I = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$I[size], "px"),
        height: "".concat(iconSizes$I[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$I.big, "px"),
        height: "".concat(iconSizes$I.big, "px")
      };
  }
};
const getSizeStyle$I = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$I(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$I = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$I = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$I(props.color), ";}&,image{", getSizeStyle$I(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPages = props => jsxRuntime.jsx("svg", _objectSpread$I(_objectSpread$I({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.73 18.838q-.714 0-1.221-.508A1.67 1.67 0 0 1 3 17.108V6.73q0-.714.509-1.221A1.66 1.66 0 0 1 4.729 5h4.476a1.7 1.7 0 0 1 1.211.497L11.65 6.73h6.918q.714 0 1.222.508t.508 1.221h-9.362l-1.73-1.73H4.73v10.379l1.708-5.687q.173-.561.638-.897t1.027-.335h11.156q.887 0 1.395.702.508.704.27 1.525l-1.557 5.19a1.7 1.7 0 0 1-.637.897 1.72 1.72 0 0 1-1.027.335zm1.816-1.73h11.157l1.556-5.19H8.103z"
  })
}));
SvgPages.displayName = 'SvgPages';
const PagesIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPages, _objectSpread$I(_objectSpread$I({}, props), {}, {
      className: createClass(getIconStyles$I(props))
    }));
  }
});
PagesIcon.displayName = 'PagesIcon';
var PagesIcon$1 = PagesIcon;

function ownKeys$H(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$H(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$H(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$H(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$H = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$H = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$H[size], "px"),
        height: "".concat(iconSizes$H[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$H.big, "px"),
        height: "".concat(iconSizes$H.big, "px")
      };
  }
};
const getSizeStyle$H = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$H(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$H = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$H = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$H(props.color), ";}&,image{", getSizeStyle$H(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPaperBillInverted = props => jsxRuntime.jsx("svg", _objectSpread$H(_objectSpread$H({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.848 21.8a2.75 2.75 0 0 1-2.017-.83A2.75 2.75 0 0 1 3 18.951v-1.9q0-.403.273-.675a.92.92 0 0 1 .676-.274h1.9V3.498q0-.213.19-.26t.38.142l.854.854 1.092-1.092a.455.455 0 0 1 .664 0l1.092 1.092 1.092-1.092a.456.456 0 0 1 .665 0l1.092 1.092 1.092-1.092a.455.455 0 0 1 .664 0l1.092 1.092 1.092-1.092a.455.455 0 0 1 .665 0l1.092 1.092.854-.854q.19-.19.38-.155t.19.273v15.453q0 1.188-.83 2.018a2.75 2.75 0 0 1-2.019.831zm11.394-1.899a.92.92 0 0 0 .677-.273.92.92 0 0 0 .273-.677V5.66H7.747v10.444h7.596q.404 0 .677.273a.92.92 0 0 1 .273.676v1.9q0 .403.273.676a.92.92 0 0 0 .676.273M9.622 9.457a.88.88 0 0 1-.664-.274.94.94 0 0 1-.261-.676.92.92 0 0 1 .273-.677.92.92 0 0 1 .676-.272h3.798q.404 0 .677.272a.92.92 0 0 1 .273.677q0 .404-.273.676a.92.92 0 0 1-.677.274zm0 2.848a.88.88 0 0 1-.664-.273.94.94 0 0 1-.261-.676.92.92 0 0 1 .273-.677.92.92 0 0 1 .676-.273h3.798q.404 0 .677.273a.92.92 0 0 1 .273.677q0 .403-.273.676a.92.92 0 0 1-.677.273zm6.67-2.848a.92.92 0 0 1-.675-.274.92.92 0 0 1-.274-.676.92.92 0 0 1 .274-.677.92.92 0 0 1 .676-.272q.403 0 .676.272a.92.92 0 0 1 .273.677.92.92 0 0 1-.273.676.92.92 0 0 1-.676.274m0 2.848a.92.92 0 0 1-.675-.273.92.92 0 0 1-.274-.676.92.92 0 0 1 .274-.677.92.92 0 0 1 .676-.273q.403 0 .676.273a.92.92 0 0 1 .273.677.92.92 0 0 1-.273.676.92.92 0 0 1-.676.273M5.849 19.901h8.546v-1.899H4.899v.95q0 .403.272.676a.92.92 0 0 0 .677.273m-.949 0v-1.899z"
  })
}));
SvgPaperBillInverted.displayName = 'SvgPaperBillInverted';
const PaperBillInvertedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPaperBillInverted, _objectSpread$H(_objectSpread$H({}, props), {}, {
      className: createClass(getIconStyles$H(props))
    }));
  }
});
PaperBillInvertedIcon.displayName = 'PaperBillInvertedIcon';
var PaperBillInvertedIcon$1 = PaperBillInvertedIcon;

function ownKeys$G(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$G(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$G(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$G(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$G = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$G = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$G[size], "px"),
        height: "".concat(iconSizes$G[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$G.big, "px"),
        height: "".concat(iconSizes$G.big, "px")
      };
  }
};
const getSizeStyle$G = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$G(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$G = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$G = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$G(props.color), ";}&,image{", getSizeStyle$G(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPaperclip = props => jsxRuntime.jsx("svg", _objectSpread$G(_objectSpread$G({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.95 21q-2.07 0-3.51-1.44T7 16.05V6.6q0-1.485 1.057-2.542Q9.115 3 10.6 3t2.543 1.058T14.2 6.6v8.55q0 .945-.652 1.597a2.17 2.17 0 0 1-1.598.653q-.944 0-1.598-.652A2.17 2.17 0 0 1 9.7 15.15V7.275a.653.653 0 0 1 .675-.675.656.656 0 0 1 .675.675v7.875q0 .383.26.64.257.26.64.26a.87.87 0 0 0 .642-.26.87.87 0 0 0 .258-.64V6.6q0-.945-.652-1.597A2.17 2.17 0 0 0 10.6 4.35q-.945 0-1.598.653A2.17 2.17 0 0 0 8.35 6.6v9.45q0 1.484 1.058 2.543 1.057 1.056 2.542 1.057t2.543-1.057q1.056-1.059 1.057-2.543V7.275a.653.653 0 0 1 .675-.675.656.656 0 0 1 .675.675v8.775q0 2.07-1.44 3.51T11.95 21"
  })
}));
SvgPaperclip.displayName = 'SvgPaperclip';
const PaperclipIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPaperclip, _objectSpread$G(_objectSpread$G({}, props), {}, {
      className: createClass(getIconStyles$G(props))
    }));
  }
});
PaperclipIcon.displayName = 'PaperclipIcon';
var PaperclipIcon$1 = PaperclipIcon;

function ownKeys$F(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$F(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$F(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$F(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$F = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$F = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$F[size], "px"),
        height: "".concat(iconSizes$F[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$F.big, "px"),
        height: "".concat(iconSizes$F.big, "px")
      };
  }
};
const getSizeStyle$F = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$F(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$F = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$F = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$F(props.color), ";}&,image{", getSizeStyle$F(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinFilled = props => jsxRuntime.jsx("svg", _objectSpread$F(_objectSpread$F({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m16 11.1 1.8 1.8v1.8h-4.5v5.4l-.9.9-.9-.9v-5.4H7v-1.8l1.8-1.8V4.8h-.9V3h9v1.8H16z"
  })
}));
SvgPinFilled.displayName = 'SvgPinFilled';
const PinFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinFilled, _objectSpread$F(_objectSpread$F({}, props), {}, {
      className: createClass(getIconStyles$F(props))
    }));
  }
});
PinFilledIcon.displayName = 'PinFilledIcon';
var PinFilledIcon$1 = PinFilledIcon;

function ownKeys$E(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$E(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$E(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$E(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$E = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$E = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$E[size], "px"),
        height: "".concat(iconSizes$E[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$E.big, "px"),
        height: "".concat(iconSizes$E.big, "px")
      };
  }
};
const getSizeStyle$E = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$E(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$E = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$E = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$E(props.color), ";}&,image{", getSizeStyle$E(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinGear = props => jsxRuntime.jsxs("svg", _objectSpread$E(_objectSpread$E({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 18,
  height: 18,
  viewBox: "0 0 18 18",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "pin-gear_react_svg__a",
      d: "m19.938 16.541.976.742a.223.223 0 0 1 .056.288l-.925 1.557c-.056.1-.176.14-.282.1l-1.152-.45c-.241.175-.5.328-.782.44l-.176 1.193a.224.224 0 0 1-.227.189h-1.85a.224.224 0 0 1-.227-.189l-.176-1.193a3.4 3.4 0 0 1-.782-.44l-1.151.45a.236.236 0 0 1-.283-.1l-.925-1.557a.223.223 0 0 1 .056-.288l.976-.742v-.882l-.976-.743a.22.22 0 0 1-.056-.288l.925-1.557c.056-.099.176-.139.283-.099l1.151.45c.241-.175.5-.328.782-.44l.176-1.193a.224.224 0 0 1 .227-.189h1.85c.116 0 .213.081.227.189l.176 1.192q.422.17.782.441l1.152-.45a.236.236 0 0 1 .282.1l.925 1.556a.223.223 0 0 1-.056.288l-.976.743zm-3.437 1.134c.893 0 1.62-.707 1.62-1.575 0-.869-.727-1.575-1.62-1.575s-1.62.706-1.62 1.575c0 .868.727 1.575 1.62 1.575"
    })
  }), jsxRuntime.jsxs("g", {
    fillRule: "evenodd",
    children: [jsxRuntime.jsx("use", {
      xlinkHref: "#pin-gear_react_svg__a",
      fill: "#1A1A1A",
      transform: "translate(-3 -3)"
    }), jsxRuntime.jsx("path", {
      fill: "#1A1A1A",
      d: "m5.664 11.893-3.74 5.342-1.407-.985 3.74-5.342-3.4-2.382q1.3-1.143 2.256-.475.002.002 3.982-5.686Q5.768 1.265 6.653 0q0-.005 8.412 5.89-1.137 1.259-2.343.414.003.001-1.7 2.428l-1.394-.976 1.7-2.428-2.826-1.98L4.52 9.038l2.11 1.477 1.712 1.2-.965 1.378z"
    })]
  })]
}));
SvgPinGear.displayName = 'SvgPinGear';
const PinGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinGear, _objectSpread$E(_objectSpread$E({}, props), {}, {
      className: createClass(getIconStyles$E(props))
    }));
  }
});
PinGearIcon.displayName = 'PinGearIcon';
var PinGearIcon$1 = PinGearIcon;

function ownKeys$D(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$D(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$D(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$D(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$D = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$D = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$D[size], "px"),
        height: "".concat(iconSizes$D[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$D.big, "px"),
        height: "".concat(iconSizes$D.big, "px")
      };
  }
};
const getSizeStyle$D = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$D(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$D = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$D = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$D(props.color), ";}&,image{", getSizeStyle$D(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinLinear = props => jsxRuntime.jsx("svg", _objectSpread$D(_objectSpread$D({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m16 11.1 1.8 1.8v1.8h-4.5v5.4l-.9.9-.9-.9v-5.4H7v-1.8l1.8-1.8V4.8h-.9V3h9v1.8H16zm-6.435 1.8h5.67L14.2 11.865V4.8h-3.6v7.065z"
  })
}));
SvgPinLinear.displayName = 'SvgPinLinear';
const PinLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinLinear, _objectSpread$D(_objectSpread$D({}, props), {}, {
      className: createClass(getIconStyles$D(props))
    }));
  }
});
PinLinearIcon.displayName = 'PinLinearIcon';
var PinLinearIcon$1 = PinLinearIcon;

function ownKeys$C(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$C(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$C(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$C(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$C = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$C = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$C[size], "px"),
        height: "".concat(iconSizes$C[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$C.big, "px"),
        height: "".concat(iconSizes$C.big, "px")
      };
  }
};
const getSizeStyle$C = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$C(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$C = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$C = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$C(props.color), ";}&,image{", getSizeStyle$C(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlugin = props => jsxRuntime.jsx("svg", _objectSpread$C(_objectSpread$C({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.354 20.5H4.846a1.78 1.78 0 0 1-1.304-.542A1.78 1.78 0 0 1 3 18.654v-3.508q1.108 0 1.938-.703.831-.705.831-1.79t-.83-1.788A2.9 2.9 0 0 0 3 10.162V6.654q0-.761.542-1.304a1.78 1.78 0 0 1 1.304-.542h3.692q0-.97.67-1.639.669-.669 1.638-.669.97 0 1.639.67.669.668.669 1.638h3.692q.762 0 1.305.542.54.543.541 1.304v3.692q.97 0 1.639.67.669.668.669 1.638t-.67 1.638q-.668.67-1.638.67v3.692q0 .762-.541 1.304a1.78 1.78 0 0 1-1.305.542h-3.508q0-1.154-.726-1.962-.727-.807-1.766-.807-1.038 0-1.765.807-.727.809-.727 1.962m-3.508-1.846h1.962q.553-1.522 1.777-2.146t2.261-.623q1.039 0 2.262.623 1.222.622 1.777 2.146h1.961v-5.539h1.846q.185 0 .323-.138a.443.443 0 0 0 0-.646.44.44 0 0 0-.323-.139h-1.846V6.654h-5.538V4.808a.44.44 0 0 0-.139-.323.443.443 0 0 0-.646 0 .44.44 0 0 0-.138.323v1.846H4.846v2.03q1.245.462 2.008 1.547.761 1.084.761 2.423 0 1.316-.761 2.4a4.3 4.3 0 0 1-2.008 1.57z"
  })
}));
SvgPlugin.displayName = 'SvgPlugin';
const PluginIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlugin, _objectSpread$C(_objectSpread$C({}, props), {}, {
      className: createClass(getIconStyles$C(props))
    }));
  }
});
PluginIcon.displayName = 'PluginIcon';
var PluginIcon$1 = PluginIcon;

function ownKeys$B(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$B(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$B(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$B(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$B = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$B = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$B[size], "px"),
        height: "".concat(iconSizes$B[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$B.big, "px"),
        height: "".concat(iconSizes$B.big, "px")
      };
  }
};
const getSizeStyle$B = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$B(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$B = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$B = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$B(props.color), ";}&,image{", getSizeStyle$B(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlusBold = props => jsxRuntime.jsx("svg", _objectSpread$B(_objectSpread$B({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 20q-.486 0-.814-.33-.33-.327-.329-.813v-5.714H5.143q-.486 0-.815-.33A1.1 1.1 0 0 1 4 12q0-.486.328-.815.33-.328.815-.328h5.714V5.143q0-.486.33-.815Q11.514 4 12 4q.486 0 .815.328.328.33.328.815v5.714h5.714q.486 0 .814.328.33.33.329.815 0 .486-.33.814-.327.33-.813.329h-5.714v5.714q0 .486-.328.814-.33.33-.815.329"
  })
}));
SvgPlusBold.displayName = 'SvgPlusBold';
const PlusBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlusBold, _objectSpread$B(_objectSpread$B({}, props), {}, {
      className: createClass(getIconStyles$B(props))
    }));
  }
});
PlusBoldIcon.displayName = 'PlusBoldIcon';
var PlusBoldIcon$1 = PlusBoldIcon;

function ownKeys$A(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$A(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$A(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$A(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$A = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$A = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$A[size], "px"),
        height: "".concat(iconSizes$A[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$A.big, "px"),
        height: "".concat(iconSizes$A.big, "px")
      };
  }
};
const getSizeStyle$A = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$A(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$A = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$A = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$A(props.color), ";}&,image{", getSizeStyle$A(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlusThin = props => jsxRuntime.jsx("svg", _objectSpread$A(_objectSpread$A({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 20q-.486 0-.814-.33-.33-.327-.329-.813v-5.714H5.143q-.486 0-.815-.33A1.1 1.1 0 0 1 4 12q0-.486.328-.815.33-.328.815-.328h5.714V5.143q0-.486.33-.815Q11.514 4 12 4q.486 0 .815.328.328.33.328.815v5.714h5.714q.486 0 .814.328.33.33.329.815 0 .486-.33.814-.327.33-.813.329h-5.714v5.714q0 .486-.328.814-.33.33-.815.329"
  })
}));
SvgPlusThin.displayName = 'SvgPlusThin';
const PlusThinIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlusThin, _objectSpread$A(_objectSpread$A({}, props), {}, {
      className: createClass(getIconStyles$A(props))
    }));
  }
});
PlusThinIcon.displayName = 'PlusThinIcon';
var PlusThinIcon$1 = PlusThinIcon;

function ownKeys$z(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$z(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$z(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$z(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$z[size], "px"),
        height: "".concat(iconSizes$z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$z.big, "px"),
        height: "".concat(iconSizes$z.big, "px")
      };
  }
};
const getSizeStyle$z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$z(props.color), ";}&,image{", getSizeStyle$z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRefresh = props => jsxRuntime.jsx("svg", _objectSpread$z(_objectSpread$z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21q-3.768 0-6.384-2.616T3 12t2.616-6.384T12 3q1.94 0 3.713.802a8.6 8.6 0 0 1 3.037 2.292V4.125q0-.478.324-.802.323-.323.801-.323t.801.323q.324.324.324.802V9.75q0 .479-.324.801a1.09 1.09 0 0 1-.801.324H14.25q-.479 0-.801-.324a1.09 1.09 0 0 1-.324-.801q0-.478.324-.802.322-.323.801-.323h3.6a6.57 6.57 0 0 0-2.46-2.475q-1.562-.9-3.39-.9-2.813 0-4.781 1.969Q5.249 9.187 5.25 12t1.969 4.781Q9.187 18.751 12 18.75q1.942 0 3.586-1.027a6.43 6.43 0 0 0 2.46-2.742q.142-.31.466-.52.323-.21.66-.211.647 0 .97.45.325.45.07 1.013a8.77 8.77 0 0 1-3.29 3.838Q14.7 21 12 21"
  })
}));
SvgRefresh.displayName = 'SvgRefresh';
const RefreshIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRefresh, _objectSpread$z(_objectSpread$z({}, props), {}, {
      className: createClass(getIconStyles$z(props))
    }));
  }
});
RefreshIcon.displayName = 'RefreshIcon';
var RefreshIcon$1 = RefreshIcon;

function ownKeys$y(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$y(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$y(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$y(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$y[size], "px"),
        height: "".concat(iconSizes$y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$y.big, "px"),
        height: "".concat(iconSizes$y.big, "px")
      };
  }
};
const getSizeStyle$y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$y(props.color), ";}&,image{", getSizeStyle$y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRestore = props => jsxRuntime.jsx("svg", _objectSpread$y(_objectSpread$y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m13 11.6 2.5 2.5a.95.95 0 0 1 .275.7.95.95 0 0 1-.275.7.95.95 0 0 1-.7.275.95.95 0 0 1-.7-.275l-2.8-2.8a1.03 1.03 0 0 1-.3-.725V8q0-.425.288-.713A.97.97 0 0 1 12 7a.97.97 0 0 1 .713.287A.97.97 0 0 1 13 8zM12 21q-3.025 0-5.425-1.788-2.4-1.787-3.225-4.662-.125-.45.088-.85a.95.95 0 0 1 .662-.5.83.83 0 0 1 .763.187q.338.288.462.713a6.57 6.57 0 0 0 2.513 3.55A6.92 6.92 0 0 0 12 19q2.925 0 4.962-2.038T19 12q0-2.925-2.038-4.963Q14.925 5 12 5a6.75 6.75 0 0 0-3.225.8A7.4 7.4 0 0 0 6.25 8H8a.97.97 0 0 1 .713.287A.97.97 0 0 1 9 9q0 .424-.287.712A.97.97 0 0 1 8 10H4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 9V5q0-.425.288-.713A.97.97 0 0 1 4 4a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 5v1.35a8.7 8.7 0 0 1 3.113-2.475A8.9 8.9 0 0 1 12 3q1.875 0 3.513.712a9.2 9.2 0 0 1 2.85 1.925 9.2 9.2 0 0 1 1.925 2.85A8.7 8.7 0 0 1 21 12q0 1.874-.712 3.512a9.2 9.2 0 0 1-1.925 2.85 9.2 9.2 0 0 1-2.85 1.926A8.7 8.7 0 0 1 12 21"
  })
}));
SvgRestore.displayName = 'SvgRestore';
const RestoreIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRestore, _objectSpread$y(_objectSpread$y({}, props), {}, {
      className: createClass(getIconStyles$y(props))
    }));
  }
});
RestoreIcon.displayName = 'RestoreIcon';
var RestoreIcon$1 = RestoreIcon;

function ownKeys$x(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$x(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$x(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$x(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$x = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$x = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$x[size], "px"),
        height: "".concat(iconSizes$x[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$x.big, "px"),
        height: "".concat(iconSizes$x.big, "px")
      };
  }
};
const getSizeStyle$x = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$x(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$x = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$x = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$x(props.color), ";}&,image{", getSizeStyle$x(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRevert = props => jsxRuntime.jsx("svg", _objectSpread$x(_objectSpread$x({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.132 20.27a1.12 1.12 0 0 1-.824-.334 1.12 1.12 0 0 1-.332-.822q0-.492.332-.823a1.12 1.12 0 0 1 .824-.333h7.05q1.82 0 3.162-1.156 1.345-1.155 1.345-2.889t-1.344-2.89-3.164-1.155h-7.28l2.195 2.196q.318.317.318.809 0 .49-.318.809a1.1 1.1 0 0 1-.809.318q-.49 0-.809-.318l-4.16-4.16a1 1 0 0 1-.246-.376A1.3 1.3 0 0 1 3 8.712q0-.23.072-.433t.246-.376l4.16-4.16q.318-.318.81-.318.49 0 .808.318t.318.809q0 .49-.318.809L6.9 7.557h7.281q2.804 0 4.812 1.82Q21 11.197 21 13.913t-2.007 4.536q-2.01 1.82-4.812 1.82z"
  })
}));
SvgRevert.displayName = 'SvgRevert';
const RevertIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRevert, _objectSpread$x(_objectSpread$x({}, props), {}, {
      className: createClass(getIconStyles$x(props))
    }));
  }
});
RevertIcon.displayName = 'RevertIcon';
var RevertIcon$1 = RevertIcon;

function ownKeys$w(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$w(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$w(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$w(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$w = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$w = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$w[size], "px"),
        height: "".concat(iconSizes$w[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$w.big, "px"),
        height: "".concat(iconSizes$w.big, "px")
      };
  }
};
const getSizeStyle$w = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$w(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$w = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$w = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$w(props.color), ";}&,image{", getSizeStyle$w(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgReview = props => jsxRuntime.jsx("svg", _objectSpread$w(_objectSpread$w({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m11.233 14.813-1.26-1.26a.9.9 0 0 0-.293-.203.8.8 0 0 0-.326-.067.9.9 0 0 0-.641.27.88.88 0 0 0-.27.641q0 .37.27.641l1.912 1.935q.135.136.293.19a1 1 0 0 0 .337.057q.18 0 .337-.056a.8.8 0 0 0 .293-.191l3.803-3.802q.27-.27.27-.653a.9.9 0 0 0-.27-.652.9.9 0 0 0-.653-.27.9.9 0 0 0-.652.27zM6.8 21q-.743 0-1.27-.528A1.73 1.73 0 0 1 5 19.2V4.8q0-.742.53-1.272A1.73 1.73 0 0 1 6.8 3h6.458a1.78 1.78 0 0 1 1.26.518l4.365 4.365q.247.247.382.573.135.327.135.687V19.2q0 .743-.528 1.272A1.74 1.74 0 0 1 17.6 21zm6.3-12.6V4.8H6.8v14.4h10.8V9.3H14a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64M6.8 4.8v4.5zv14.4z"
  })
}));
SvgReview.displayName = 'SvgReview';
const ReviewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgReview, _objectSpread$w(_objectSpread$w({}, props), {}, {
      className: createClass(getIconStyles$w(props))
    }));
  }
});
ReviewIcon.displayName = 'ReviewIcon';
var ReviewIcon$1 = ReviewIcon;

function ownKeys$v(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$v(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$v(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$v(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$v = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$v = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$v[size], "px"),
        height: "".concat(iconSizes$v[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$v.big, "px"),
        height: "".concat(iconSizes$v.big, "px")
      };
  }
};
const getSizeStyle$v = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$v(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$v = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$v = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$v(props.color), ";}&,image{", getSizeStyle$v(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRightTriangleFilled = props => jsxRuntime.jsx("svg", _objectSpread$v(_objectSpread$v({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.715 21q-.475 0-.653-.44-.178-.439.154-.77L19.79 3.215q.333-.332.772-.154.44.178.439.653v16.573a.69.69 0 0 1-.712.712z"
  })
}));
SvgRightTriangleFilled.displayName = 'SvgRightTriangleFilled';
const RightTriangleFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRightTriangleFilled, _objectSpread$v(_objectSpread$v({}, props), {}, {
      className: createClass(getIconStyles$v(props))
    }));
  }
});
RightTriangleFilledIcon.displayName = 'RightTriangleFilledIcon';
var RightTriangleFilledIcon$1 = RightTriangleFilledIcon;

function ownKeys$u(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$u(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$u(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$u(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$u = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$u = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$u[size], "px"),
        height: "".concat(iconSizes$u[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$u.big, "px"),
        height: "".concat(iconSizes$u.big, "px")
      };
  }
};
const getSizeStyle$u = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$u(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$u = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$u = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$u(props.color), ";}&,image{", getSizeStyle$u(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRightTriangleLinear = props => jsxRuntime.jsx("svg", _objectSpread$u(_objectSpread$u({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.425 19.575h14.15V5.425zM3.715 21q-.475 0-.653-.44-.178-.439.154-.77L19.79 3.215q.333-.332.772-.154.44.178.439.653v16.573a.69.69 0 0 1-.712.712z"
  })
}));
SvgRightTriangleLinear.displayName = 'SvgRightTriangleLinear';
const RightTriangleLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRightTriangleLinear, _objectSpread$u(_objectSpread$u({}, props), {}, {
      className: createClass(getIconStyles$u(props))
    }));
  }
});
RightTriangleLinearIcon.displayName = 'RightTriangleLinearIcon';
var RightTriangleLinearIcon$1 = RightTriangleLinearIcon;

function ownKeys$t(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$t(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$t(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$t(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$t = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$t = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$t[size], "px"),
        height: "".concat(iconSizes$t[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$t.big, "px"),
        height: "".concat(iconSizes$t.big, "px")
      };
  }
};
const getSizeStyle$t = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$t(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$t = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$t = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$t(props.color), ";}&,image{", getSizeStyle$t(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRocket = props => jsxRuntime.jsx("svg", _objectSpread$t(_objectSpread$t({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.648 11.105q.322-.645.668-1.242.345-.6.759-1.197l-1.289-.253-1.933 1.933zM18.74 4.777q-1.61.045-3.44.944a12.4 12.4 0 0 0-3.326 2.393 14.7 14.7 0 0 0-1.726 2.07q-.76 1.106-1.127 2.072l2.623 2.6q.967-.368 2.071-1.127a14.7 14.7 0 0 0 2.071-1.726 12.5 12.5 0 0 0 2.393-3.314q.898-1.818.944-3.429a.5.5 0 0 0-.034-.184.45.45 0 0 0-.265-.265.5.5 0 0 0-.184-.034M13.677 10.3a1.77 1.77 0 0 1-.53-1.3q0-.771.53-1.3.53-.53 1.312-.53t1.311.53.53 1.3q0 .77-.53 1.3-.529.53-1.311.53-.783 0-1.312-.53m-.782 6.029.76 1.818 1.932-1.933-.253-1.289q-.599.414-1.197.747a31 31 0 0 1-1.242.657M20.972 4.04a10.6 10.6 0 0 1-.829 4.935q-1.012 2.406-3.198 4.591l.46 2.278q.092.46-.046.898a1.84 1.84 0 0 1-.46.76l-2.9 2.899a.9.9 0 0 1-.828.264.82.82 0 0 1-.667-.54L11.1 16.835 7.165 12.9l-3.29-1.404a.85.85 0 0 1-.553-.667.88.88 0 0 1 .253-.828l2.9-2.9q.322-.322.771-.46t.908-.046l2.279.46q2.186-2.185 4.59-3.198a10.6 10.6 0 0 1 4.936-.829q.185.024.368.103a1.05 1.05 0 0 1 .54.542q.082.183.105.368M4.726 15.362q.805-.806 1.967-.817t1.968.794.793 1.967q-.011 1.163-.816 1.968-.576.575-1.921.99Q5.37 20.678 3 21q.322-2.37.736-3.717.414-1.345.99-1.92m1.311 1.289q-.23.23-.46.84a6 6 0 0 0-.322 1.23 6.5 6.5 0 0 0 1.232-.31q.609-.218.84-.449a1 1 0 0 0 .298-.667.84.84 0 0 0-.253-.667.87.87 0 0 0-.667-.265.95.95 0 0 0-.668.288"
  })
}));
SvgRocket.displayName = 'SvgRocket';
const RocketIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRocket, _objectSpread$t(_objectSpread$t({}, props), {}, {
      className: createClass(getIconStyles$t(props))
    }));
  }
});
RocketIcon.displayName = 'RocketIcon';
var RocketIcon$1 = RocketIcon;

function ownKeys$s(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$s(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$s(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$s(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$s = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$s = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$s[size], "px"),
        height: "".concat(iconSizes$s[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$s.big, "px"),
        height: "".concat(iconSizes$s.big, "px")
      };
  }
};
const getSizeStyle$s = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$s(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$s = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$s = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$s(props.color), ";}&,image{", getSizeStyle$s(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgScreenGear = props => jsxRuntime.jsx("svg", _objectSpread$s(_objectSpread$s({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 21q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h14q.825 0 1.413.587Q21 4.175 21 5v14q0 .825-.587 1.413A1.93 1.93 0 0 1 19 21zm0-2h14V5H5zm6.4-2h1.2a.43.43 0 0 0 .3-.113.6.6 0 0 0 .175-.287l.225-1.1q.3-.124.563-.262a4.4 4.4 0 0 0 .537-.338l1.075.325q.175.05.325-.012a.56.56 0 0 0 .25-.213l.6-1a.38.38 0 0 0 .05-.325.7.7 0 0 0-.175-.3l-.825-.725q.05-.35.05-.65t-.05-.65l.825-.725a.7.7 0 0 0 .175-.3.38.38 0 0 0-.05-.325l-.6-1a.56.56 0 0 0-.25-.213.48.48 0 0 0-.325-.012L14.4 9.1a4.4 4.4 0 0 0-.537-.338A7 7 0 0 0 13.3 8.5l-.225-1.1a.6.6 0 0 0-.175-.288.43.43 0 0 0-.3-.112h-1.2a.43.43 0 0 0-.3.112.6.6 0 0 0-.175.288L10.7 8.5q-.3.124-.563.262A4.4 4.4 0 0 0 9.6 9.1l-1.075-.325a.48.48 0 0 0-.325.012.56.56 0 0 0-.25.213l-.6 1a.38.38 0 0 0-.05.325.7.7 0 0 0 .175.3l.825.725q-.05.35-.05.65t.05.65l-.825.725a.7.7 0 0 0-.175.3.38.38 0 0 0 .05.325l.6 1q.1.15.25.213.15.062.325.012L9.6 14.9q.274.2.537.338.263.137.563.262l.225 1.1a.6.6 0 0 0 .175.287.43.43 0 0 0 .3.113m.6-3q-.825 0-1.412-.588A1.92 1.92 0 0 1 10 12q0-.825.588-1.413A1.93 1.93 0 0 1 12 10q.825 0 1.413.587Q14 11.175 14 12t-.587 1.412A1.93 1.93 0 0 1 12 14m-7 5V5z"
  })
}));
SvgScreenGear.displayName = 'SvgScreenGear';
const ScreenGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgScreenGear, _objectSpread$s(_objectSpread$s({}, props), {}, {
      className: createClass(getIconStyles$s(props))
    }));
  }
});
ScreenGearIcon.displayName = 'ScreenGearIcon';
var ScreenGearIcon$1 = ScreenGearIcon;

function ownKeys$r(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$r(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$r(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$r(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$r = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$r = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$r[size], "px"),
        height: "".concat(iconSizes$r[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$r.big, "px"),
        height: "".concat(iconSizes$r.big, "px")
      };
  }
};
const getSizeStyle$r = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$r(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$r = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$r = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$r(props.color), ";}&,image{", getSizeStyle$r(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgScreenUser = props => jsxRuntime.jsx("svg", _objectSpread$r(_objectSpread$r({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 17.85q1.35-1.325 3.138-2.088Q9.925 15 12 15t3.863.762A10.1 10.1 0 0 1 19 17.85V5H5zM12 13q1.45 0 2.475-1.025A3.37 3.37 0 0 0 15.5 9.5q0-1.45-1.025-2.475A3.37 3.37 0 0 0 12 6q-1.45 0-2.475 1.025A3.37 3.37 0 0 0 8.5 9.5q0 1.45 1.025 2.475A3.37 3.37 0 0 0 12 13m-7 8q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h14q.825 0 1.413.587Q21 4.175 21 5v14q0 .825-.587 1.413A1.93 1.93 0 0 1 19 21zm2-2h10v-.25a7.3 7.3 0 0 0-2.325-1.312A8.2 8.2 0 0 0 12 17q-1.4 0-2.675.438A7.3 7.3 0 0 0 7 18.75zm5-8q-.625 0-1.062-.438A1.44 1.44 0 0 1 10.5 9.5q0-.625.438-1.062A1.44 1.44 0 0 1 12 8q.625 0 1.062.438.438.437.438 1.062t-.438 1.062A1.44 1.44 0 0 1 12 11"
  })
}));
SvgScreenUser.displayName = 'SvgScreenUser';
const ScreenUserIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgScreenUser, _objectSpread$r(_objectSpread$r({}, props), {}, {
      className: createClass(getIconStyles$r(props))
    }));
  }
});
ScreenUserIcon.displayName = 'ScreenUserIcon';
var ScreenUserIcon$1 = ScreenUserIcon;

function ownKeys$q(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$q(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$q(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$q(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$q[size], "px"),
        height: "".concat(iconSizes$q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$q.big, "px"),
        height: "".concat(iconSizes$q.big, "px")
      };
  }
};
const getSizeStyle$q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$q(props.color), ";}&,image{", getSizeStyle$q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSearch = props => jsxRuntime.jsx("svg", _objectSpread$q(_objectSpread$q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m19.285 20.718-5.736-5.735a6.242 6.242 0 0 1-3.892 1.331q-2.79 0-4.723-1.932Q3 12.448 3 9.657t1.934-4.724Q6.867 3 9.657 3t4.725 1.933q1.932 1.934 1.932 4.724a6.24 6.24 0 0 1-1.331 3.892l5.761 5.761a.94.94 0 0 1 .282.691.98.98 0 0 1-.308.717.97.97 0 0 1-.717.282.97.97 0 0 1-.716-.282m-9.628-6.452q1.92 0 3.265-1.344 1.344-1.344 1.344-3.265 0-1.92-1.344-3.265-1.344-1.344-3.265-1.344-1.92 0-3.265 1.344-1.344 1.345-1.344 3.265t1.344 3.265q1.345 1.344 3.265 1.344"
  })
}));
SvgSearch.displayName = 'SvgSearch';
const SearchIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSearch, _objectSpread$q(_objectSpread$q({}, props), {}, {
      className: createClass(getIconStyles$q(props))
    }));
  }
});
SearchIcon.displayName = 'SearchIcon';
var SearchIcon$1 = SearchIcon;

function ownKeys$p(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$p(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$p(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$p(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$p = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$p = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$p[size], "px"),
        height: "".concat(iconSizes$p[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$p.big, "px"),
        height: "".concat(iconSizes$p.big, "px")
      };
  }
};
const getSizeStyle$p = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$p(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$p = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$p = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$p(props.color), ";}&,image{", getSizeStyle$p(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSidebarCollapse = props => jsxRuntime.jsxs("svg", _objectSpread$p(_objectSpread$p({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M4.5 21q-.618 0-1.06-.44A1.45 1.45 0 0 1 3 19.5v-15q0-.618.44-1.06Q3.883 3 4.5 3h15q.62 0 1.06.44.44.442.44 1.06v15q0 .62-.44 1.06T19.5 21zm0-1.5h15v-15h-15z"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M12.642 12.006q0-.156.041-.292a.7.7 0 0 1 .14-.253l3.058-3.596a.54.54 0 0 1 .455-.203.6.6 0 0 1 .454.223.8.8 0 0 1 .182.544.8.8 0 0 1-.182.544l-2.578 3.032 2.595 3.052q.18.214.174.535a.83.83 0 0 1-.19.534.58.58 0 0 1-.464.214.58.58 0 0 1-.463-.214l-3.04-3.576a.7.7 0 0 1-.14-.253 1 1 0 0 1-.042-.292",
    clipRule: "evenodd"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M3.963 4.768c0-.798.648-1.446 1.446-1.446h4.34c.798 0 1.446.648 1.446 1.446v14.465c0 .799-.648 1.446-1.446 1.446h-4.34a1.446 1.446 0 0 1-1.446-1.446z"
  })]
}));
SvgSidebarCollapse.displayName = 'SvgSidebarCollapse';
const SidebarCollapseIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSidebarCollapse, _objectSpread$p(_objectSpread$p({}, props), {}, {
      className: createClass(getIconStyles$p(props))
    }));
  }
});
SidebarCollapseIcon.displayName = 'SidebarCollapseIcon';
var SidebarCollapseIcon$1 = SidebarCollapseIcon;

function ownKeys$o(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$o(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$o(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$o(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$o = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$o = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$o[size], "px"),
        height: "".concat(iconSizes$o[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$o.big, "px"),
        height: "".concat(iconSizes$o.big, "px")
      };
  }
};
const getSizeStyle$o = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$o(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$o = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$o = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$o(props.color), ";}&,image{", getSizeStyle$o(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSidebarExpand = props => jsxRuntime.jsxs("svg", _objectSpread$o(_objectSpread$o({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M4.5 21q-.618 0-1.06-.44A1.45 1.45 0 0 1 3 19.5v-15q0-.618.44-1.06Q3.883 3 4.5 3h15q.62 0 1.06.44.44.442.44 1.06v15q0 .62-.44 1.06T19.5 21zm0-1.5h15v-15h-15z"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M16.98 12.006a1 1 0 0 0-.04-.292.7.7 0 0 0-.141-.253l-3.058-3.596a.54.54 0 0 0-.454-.203.6.6 0 0 0-.455.223.8.8 0 0 0-.182.544q0 .33.182.544l2.579 3.032-2.595 3.052a.77.77 0 0 0-.174.535q.01.321.19.534a.58.58 0 0 0 .463.214.58.58 0 0 0 .463-.214l3.041-3.576a.7.7 0 0 0 .14-.253 1 1 0 0 0 .042-.292",
    clipRule: "evenodd"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M3.963 4.768c0-.798.648-1.446 1.446-1.446h4.34c.798 0 1.446.648 1.446 1.446v14.465c0 .799-.648 1.446-1.446 1.446h-4.34a1.446 1.446 0 0 1-1.446-1.446z"
  })]
}));
SvgSidebarExpand.displayName = 'SvgSidebarExpand';
const SidebarExpandIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSidebarExpand, _objectSpread$o(_objectSpread$o({}, props), {}, {
      className: createClass(getIconStyles$o(props))
    }));
  }
});
SidebarExpandIcon.displayName = 'SidebarExpandIcon';
var SidebarExpandIcon$1 = SidebarExpandIcon;

function ownKeys$n(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$n(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$n(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$n(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$n = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$n = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$n[size], "px"),
        height: "".concat(iconSizes$n[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$n.big, "px"),
        height: "".concat(iconSizes$n.big, "px")
      };
  }
};
const getSizeStyle$n = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$n(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$n = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$n = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$n(props.color), ";}&,image{", getSizeStyle$n(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSorting = props => jsxRuntime.jsx("svg", _objectSpread$n(_objectSpread$n({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14 17.804V12q0-.4.27-.67t.67-.27q.4 0 .67.27t.27.67v5.804l1.762-1.762a.92.92 0 0 1 .646-.27.88.88 0 0 1 .67.27.88.88 0 0 1 .294.645.88.88 0 0 1-.27.67l-3.384 3.384a.8.8 0 0 1-.306.2q-.165.06-.352.059-.188 0-.352-.06a.8.8 0 0 1-.306-.199l-3.384-3.383a.88.88 0 0 1-.258-.646q0-.388.282-.67a1 1 0 0 1 .658-.27q.376-.012.658.27zM8.36 6.196 6.598 7.958q-.305.306-.682.282a.95.95 0 0 1-.634-.282.92.92 0 0 1-.282-.67q0-.387.258-.646l3.384-3.384a.8.8 0 0 1 .306-.2Q9.113 3 9.3 3q.188 0 .353.058a.8.8 0 0 1 .305.2l3.384 3.384a.9.9 0 0 1 .258.658.9.9 0 0 1-.258.658.91.91 0 0 1-.67.282.92.92 0 0 1-.67-.282L10.24 6.196V12q0 .4-.27.67a.9.9 0 0 1-.67.27.9.9 0 0 1-.669-.27.9.9 0 0 1-.27-.67z"
  })
}));
SvgSorting.displayName = 'SvgSorting';
const SortingIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSorting, _objectSpread$n(_objectSpread$n({}, props), {}, {
      className: createClass(getIconStyles$n(props))
    }));
  }
});
SortingIcon.displayName = 'SortingIcon';
var SortingIcon$1 = SortingIcon;

function ownKeys$m(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$m(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$m(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$m(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$m = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$m = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$m[size], "px"),
        height: "".concat(iconSizes$m[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$m.big, "px"),
        height: "".concat(iconSizes$m.big, "px")
      };
  }
};
const getSizeStyle$m = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$m(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$m = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$m = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$m(props.color), ";}&,image{", getSizeStyle$m(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSpeechBubble = props => jsxRuntime.jsx("svg", _objectSpread$m(_objectSpread$m({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.5 14.8h5.422a.83.83 0 0 0 .63-.26.9.9 0 0 0 .248-.64.87.87 0 0 0-.258-.642A.87.87 0 0 0 12.9 13H7.478a.84.84 0 0 0-.63.258.9.9 0 0 0-.248.642.87.87 0 0 0 .258.64q.26.26.642.26m0-2.7h9.023a.83.83 0 0 0 .63-.26.9.9 0 0 0 .247-.64.87.87 0 0 0-.26-.642.87.87 0 0 0-.64-.258H7.478a.84.84 0 0 0-.63.258.9.9 0 0 0-.248.642.87.87 0 0 0 .258.64q.26.26.642.26m0-2.7h9.023a.84.84 0 0 0 .63-.258.9.9 0 0 0 .247-.642.87.87 0 0 0-.26-.642.87.87 0 0 0-.64-.258H7.478a.84.84 0 0 0-.63.258.9.9 0 0 0-.248.642q0 .383.258.642A.87.87 0 0 0 7.5 9.4M3 19.817V5.8q0-.742.53-1.272A1.73 1.73 0 0 1 4.8 4h14.4q.743 0 1.272.528Q21 5.058 21 5.8v10.8q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528H6.6l-2.07 2.07q-.427.428-.98.19-.55-.234-.55-.843m1.8-2.16L5.858 16.6H19.2V5.8H4.8zM4.8 5.8v11.857z"
  })
}));
SvgSpeechBubble.displayName = 'SvgSpeechBubble';
const SpeechBubbleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSpeechBubble, _objectSpread$m(_objectSpread$m({}, props), {}, {
      className: createClass(getIconStyles$m(props))
    }));
  }
});
SpeechBubbleIcon.displayName = 'SpeechBubbleIcon';
var SpeechBubbleIcon$1 = SpeechBubbleIcon;

function ownKeys$l(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$l(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$l(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$l(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$l = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$l = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$l[size], "px"),
        height: "".concat(iconSizes$l[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$l.big, "px"),
        height: "".concat(iconSizes$l.big, "px")
      };
  }
};
const getSizeStyle$l = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$l(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$l = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$l = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$l(props.color), ";}&,image{", getSizeStyle$l(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSpeedometer = props => jsxRuntime.jsx("svg", _objectSpread$l(_objectSpread$l({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M10.605 14.35q.54.54 1.395.528.855-.01 1.26-.618l3.803-5.692q.203-.316-.057-.574-.259-.259-.573-.056L10.74 11.74q-.608.405-.64 1.237-.035.834.505 1.373M5.79 18.4q-.473 0-.9-.225t-.675-.63A8.936 8.936 0 0 1 3 13q0-1.867.71-3.5a9.2 9.2 0 0 1 1.934-2.857 9.1 9.1 0 0 1 2.868-1.935A8.7 8.7 0 0 1 12 4q1.013 0 1.957.213.945.215 1.823.642.473.247.55.675.08.427-.235.81a.79.79 0 0 1-.495.248 1 1 0 0 1-.562-.068A6.8 6.8 0 0 0 12 5.8q-2.993 0-5.096 2.103Q4.8 10.008 4.8 13q0 .945.258 1.867A7.4 7.4 0 0 0 5.79 16.6h12.42q.517-.855.754-1.778a7.7 7.7 0 0 0 .236-1.912 6.3 6.3 0 0 0-.19-1.54 6.8 6.8 0 0 0-.553-1.452.86.86 0 0 1-.09-.608.9.9 0 0 1 .316-.518q.36-.315.787-.18.428.136.63.585.405.856.63 1.767t.27 1.901q0 1.282-.303 2.453a9 9 0 0 1-.912 2.227q-.247.405-.675.63t-.9.225z"
  })
}));
SvgSpeedometer.displayName = 'SvgSpeedometer';
const SpeedometerIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSpeedometer, _objectSpread$l(_objectSpread$l({}, props), {}, {
      className: createClass(getIconStyles$l(props))
    }));
  }
});
SpeedometerIcon.displayName = 'SpeedometerIcon';
var SpeedometerIcon$1 = SpeedometerIcon;

function ownKeys$k(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$k(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$k(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$k(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$k = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$k = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$k[size], "px"),
        height: "".concat(iconSizes$k[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$k.big, "px"),
        height: "".concat(iconSizes$k.big, "px")
      };
  }
};
const getSizeStyle$k = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$k(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$k = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$k = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$k(props.color), ";}&,image{", getSizeStyle$k(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSplit = props => jsxRuntime.jsx("svg", _objectSpread$k(_objectSpread$k({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 11.885q0-.39.265-.655a.89.89 0 0 1 .655-.264h3.678q1.287 0 1.908-.391.621-.39 1.218-1.035l1.31 1.31q-.252.275-.54.53-.287.252-.609.505.437.322.77.656.334.332.655.677a10.5 10.5 0 0 0 1.862 1.587q1.058.713 3.702.758l-.805-.804a.86.86 0 0 1-.253-.632q0-.38.253-.656a.9.9 0 0 1 .656-.276q.378 0 .654.276l2.368 2.368a.8.8 0 0 1 .196.299q.057.16.057.345 0 .183-.057.345a.8.8 0 0 1-.196.298l-2.39 2.391a.9.9 0 0 1-.632.265.86.86 0 0 1-.656-.265.87.87 0 0 1-.253-.643q0-.392.253-.644l.805-.828q-3.288-.045-4.678-1.011-1.392-.966-2.265-1.931a8.7 8.7 0 0 0-1.298-1.196q-.633-.46-2.035-.46H3.92a.9.9 0 0 1-.655-.263.9.9 0 0 1-.265-.656m12.713-5.333a8 8 0 0 1 1.011-.127 50 50 0 0 1 1.15-.057l-.828-.828a.86.86 0 0 1-.253-.632q0-.38.276-.655A.87.87 0 0 1 17.713 4q.39 0 .643.253l2.391 2.39a.8.8 0 0 1 .196.3q.057.16.057.344t-.057.345a.8.8 0 0 1-.196.299l-2.39 2.39a.84.84 0 0 1-.644.266.927.927 0 0 1-.897-.932q0-.368.253-.644l.782-.804q-.483 0-.909.046-.424.045-.793.092zm-4.046 1.977a8 8 0 0 1 1.126-.885q.644-.426 1.586-.747l.437 1.77a4.86 4.86 0 0 0-1.839 1.172z"
  })
}));
SvgSplit.displayName = 'SvgSplit';
const SplitIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSplit, _objectSpread$k(_objectSpread$k({}, props), {}, {
      className: createClass(getIconStyles$k(props))
    }));
  }
});
SplitIcon.displayName = 'SplitIcon';
var SplitIcon$1 = SplitIcon;

function ownKeys$j(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$j(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$j(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$j(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$j = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$j = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$j[size], "px"),
        height: "".concat(iconSizes$j[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$j.big, "px"),
        height: "".concat(iconSizes$j.big, "px")
      };
  }
};
const getSizeStyle$j = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$j(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$j = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$j = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$j(props.color), ";}&,image{", getSizeStyle$j(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgStack = props => jsxRuntime.jsx("svg", _objectSpread$j(_objectSpread$j({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 15a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 14q0-.425.288-.713A.97.97 0 0 1 4 13h16q.424 0 .712.287.288.288.288.713 0 .424-.288.712A.97.97 0 0 1 20 15zm0 4a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 18q0-.424.288-.712A.97.97 0 0 1 4 17h16q.424 0 .712.288A.97.97 0 0 1 21 18q0 .424-.288.712A.97.97 0 0 1 20 19zm0-8a.97.97 0 0 1-.712-.288A.97.97 0 0 1 3 10q0-.425.288-.713A.97.97 0 0 1 4 9h16q.424 0 .712.287Q21 9.575 21 10q0 .424-.288.712A.97.97 0 0 1 20 11zm0-4a.97.97 0 0 1-.712-.287A.97.97 0 0 1 3 6q0-.425.288-.713A.97.97 0 0 1 4 5h16q.424 0 .712.287Q21 5.575 21 6a.97.97 0 0 1-.288.713A.97.97 0 0 1 20 7z"
  })
}));
SvgStack.displayName = 'SvgStack';
const StackIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgStack, _objectSpread$j(_objectSpread$j({}, props), {}, {
      className: createClass(getIconStyles$j(props))
    }));
  }
});
StackIcon.displayName = 'StackIcon';
var StackIcon$1 = StackIcon;

function ownKeys$i(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$i(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$i(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$i(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$i = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$i = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$i[size], "px"),
        height: "".concat(iconSizes$i[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$i.big, "px"),
        height: "".concat(iconSizes$i.big, "px")
      };
  }
};
const getSizeStyle$i = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$i(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$i = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$i = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$i(props.color), ";}&,image{", getSizeStyle$i(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgStar = props => jsxRuntime.jsx("svg", _objectSpread$i(_objectSpread$i({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.688 16.929 12 14.93l3.311 2.024-.867-3.784 2.917-2.523-3.837-.342L12 6.732l-1.524 3.548-3.837.341 2.917 2.55zm3.312.473L7.637 20.03a.95.95 0 0 1-.604.157 1 1 0 0 1-.552-.21 1.26 1.26 0 0 1-.368-.46.92.92 0 0 1-.053-.617l1.157-4.967-3.863-3.338a1 1 0 0 1-.328-.54 1.04 1.04 0 0 1 .038-.59q.106-.289.316-.473t.578-.237l5.098-.446 1.971-4.678a.94.94 0 0 1 .408-.473Q11.711 3 12 3q.29 0 .565.158.276.157.407.473l1.971 4.678 5.099.446q.368.053.578.237t.315.473.04.59a1 1 0 0 1-.329.54l-3.863 3.338 1.156 4.967a.92.92 0 0 1-.052.618q-.132.274-.368.46a1 1 0 0 1-.552.21.96.96 0 0 1-.605-.158z"
  })
}));
SvgStar.displayName = 'SvgStar';
const StarIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgStar, _objectSpread$i(_objectSpread$i({}, props), {}, {
      className: createClass(getIconStyles$i(props))
    }));
  }
});
StarIcon.displayName = 'StarIcon';
var StarIcon$1 = StarIcon;

function ownKeys$h(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$h(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$h(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$h(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$h = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$h = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$h[size], "px"),
        height: "".concat(iconSizes$h[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$h.big, "px"),
        height: "".concat(iconSizes$h.big, "px")
      };
  }
};
const getSizeStyle$h = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$h(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$h = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$h = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$h(props.color), ";}&,image{", getSizeStyle$h(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSubdirectoryArrow = props => jsxRuntime.jsx("svg", _objectSpread$h(_objectSpread$h({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.014 20.674q-.3-.325-.313-.76a1 1 0 0 1 .313-.76l3.122-3.122H5.086q-.462 0-.774-.313A1.05 1.05 0 0 1 4 14.946V4.086q0-.462.312-.774T5.086 3t.774.312.312.774v9.774h9.964l-3.15-3.15a1.06 1.06 0 0 1-.311-.747q-.015-.447.311-.773.327-.325.775-.313.447.015.773.313l4.995 4.996a1 1 0 0 1 .232.353q.067.19.067.407t-.067.407a1 1 0 0 1-.232.353L14.534 20.7q-.3.3-.746.299-.45 0-.774-.326"
  })
}));
SvgSubdirectoryArrow.displayName = 'SvgSubdirectoryArrow';
const SubdirectoryArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSubdirectoryArrow, _objectSpread$h(_objectSpread$h({}, props), {}, {
      className: createClass(getIconStyles$h(props))
    }));
  }
});
SubdirectoryArrowIcon.displayName = 'SubdirectoryArrowIcon';
var SubdirectoryArrowIcon$1 = SubdirectoryArrowIcon;

function ownKeys$g(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$g(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$g(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$g(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$g = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$g = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$g[size], "px"),
        height: "".concat(iconSizes$g[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$g.big, "px"),
        height: "".concat(iconSizes$g.big, "px")
      };
  }
};
const getSizeStyle$g = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$g(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$g = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$g = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$g(props.color), ";}&,image{", getSizeStyle$g(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSupport = props => jsxRuntime.jsx("svg", _objectSpread$g(_objectSpread$g({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.955 17.4q.472 0 .8-.327.325-.326.325-.798t-.326-.798a1.09 1.09 0 0 0-.799-.327q-.472 0-.8.327a1.09 1.09 0 0 0-.325.798q0 .473.326.798.327.327.799.327m.135-9.27q.63 0 1.012.348.383.35.383.912 0 .383-.258.776a4.4 4.4 0 0 1-.732.822q-.675.585-.99 1.125t-.315 1.08q0 .315.237.528.235.214.55.214t.563-.225.315-.562q.067-.383.304-.709.236-.327.776-.844.697-.653.98-1.193.28-.54.28-1.192 0-1.147-.866-1.88-.867-.73-2.239-.73-.945 0-1.676.36a2.56 2.56 0 0 0-1.136 1.103.9.9 0 0 0-.113.573q.045.281.315.462.293.18.642.112a.9.9 0 0 0 .573-.383q.248-.337.597-.517.348-.18.798-.18M12 21a8.7 8.7 0 0 1-3.488-.71 9.2 9.2 0 0 1-2.868-1.922A9 9 0 0 1 3.71 15.51 8.8 8.8 0 0 1 3 12q0-1.867.71-3.51a9 9 0 0 1 1.934-2.857 9.2 9.2 0 0 1 2.868-1.925A8.7 8.7 0 0 1 12 3q1.89 0 3.533.708a9.1 9.1 0 0 1 2.857 1.925 8.9 8.9 0 0 1 1.912 2.857A8.9 8.9 0 0 1 21 12a8.9 8.9 0 0 1-.698 3.51 8.9 8.9 0 0 1-1.912 2.858 9.1 9.1 0 0 1-2.857 1.923A8.8 8.8 0 0 1 12 21m0-1.8q3.015 0 5.108-2.103T19.2 12q0-2.992-2.092-5.097Q15.015 4.8 12 4.8q-2.947 0-5.074 2.103Q4.8 9.008 4.8 12t2.126 5.097Q9.053 19.2 12 19.2"
  })
}));
SvgSupport.displayName = 'SvgSupport';
const SupportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSupport, _objectSpread$g(_objectSpread$g({}, props), {}, {
      className: createClass(getIconStyles$g(props))
    }));
  }
});
SupportIcon.displayName = 'SupportIcon';
var SupportIcon$1 = SupportIcon;

function ownKeys$f(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$f(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$f(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$f(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$f = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$f = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$f[size], "px"),
        height: "".concat(iconSizes$f[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$f.big, "px"),
        height: "".concat(iconSizes$f.big, "px")
      };
  }
};
const getSizeStyle$f = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$f(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$f = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$f = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$f(props.color), ";}&,image{", getSizeStyle$f(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSwitcher = props => jsxRuntime.jsx("svg", _objectSpread$f(_objectSpread$f({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.76 16.7v-2.82q0-.4.27-.67t.67-.27a.93.93 0 0 1 .669.258.87.87 0 0 1 .27.658v3.784q0 .4-.27.669a.9.9 0 0 1-.67.27H7.22l.776.776a.97.97 0 0 1 .294.682.9.9 0 0 1-.27.681.91.91 0 0 1-.67.282.88.88 0 0 1-.647-.259l-2.444-2.443A.9.9 0 0 1 4 17.64q0-.4.258-.658l2.42-2.42a.92.92 0 0 1 .671-.283q.387 0 .67.282a.92.92 0 0 1 .281.67.91.91 0 0 1-.282.67l-.799.799zm-9.4-9.4v2.82q0 .4-.27.67a.9.9 0 0 1-.67.27.93.93 0 0 1-.67-.258.87.87 0 0 1-.27-.658V6.36q0-.4.27-.67t.67-.27H16.9l-.775-.775a.97.97 0 0 1-.293-.682.89.89 0 0 1 .27-.681.92.92 0 0 1 .67-.282q.387 0 .646.258l2.444 2.444a.9.9 0 0 1 .258.658.9.9 0 0 1-.258.658l-2.42 2.42a.91.91 0 0 1-.67.283.92.92 0 0 1-.67-.282.92.92 0 0 1-.282-.67q0-.388.282-.67L16.9 7.3z"
  })
}));
SvgSwitcher.displayName = 'SvgSwitcher';
const SwitcherIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSwitcher, _objectSpread$f(_objectSpread$f({}, props), {}, {
      className: createClass(getIconStyles$f(props))
    }));
  }
});
SwitcherIcon.displayName = 'SwitcherIcon';
var SwitcherIcon$1 = SwitcherIcon;

function ownKeys$e(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$e(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$e(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$e(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$e = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$e = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$e[size], "px"),
        height: "".concat(iconSizes$e[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$e.big, "px"),
        height: "".concat(iconSizes$e.big, "px")
      };
  }
};
const getSizeStyle$e = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$e(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$e = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$e = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$e(props.color), ";}&,image{", getSizeStyle$e(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTable = props => jsxRuntime.jsx("svg", _objectSpread$e(_objectSpread$e({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 17.6h3.6V6.8H4.8zm5.4 0h3.6V6.8h-3.6zm5.4 0h3.6V6.8h-3.6zM4.8 19.4q-.743 0-1.27-.528A1.73 1.73 0 0 1 3 17.6V6.8q0-.743.53-1.27Q4.056 5 4.8 5h14.4q.743 0 1.272.53Q21 6.056 21 6.8v10.8q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528z"
  })
}));
SvgTable.displayName = 'SvgTable';
const TableIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTable, _objectSpread$e(_objectSpread$e({}, props), {}, {
      className: createClass(getIconStyles$e(props))
    }));
  }
});
TableIcon.displayName = 'TableIcon';
var TableIcon$1 = TableIcon;

function ownKeys$d(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$d(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$d(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$d(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$d = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$d = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$d[size], "px"),
        height: "".concat(iconSizes$d[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$d.big, "px"),
        height: "".concat(iconSizes$d.big, "px")
      };
  }
};
const getSizeStyle$d = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$d(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$d = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$d = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$d(props.color), ";}&,image{", getSizeStyle$d(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTagMulti = props => jsxRuntime.jsx("svg", _objectSpread$d(_objectSpread$d({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m4.796 18.121-.763-.314a1.58 1.58 0 0 1-.932-1.01 1.9 1.9 0 0 1 .079-1.416l1.616-3.503zm3.594 1.976q-.742 0-1.27-.527a1.73 1.73 0 0 1-.527-1.27v-5.389l2.38 6.602q.068.157.135.304.068.145.18.28zm4.626-.09q-.72.27-1.393-.067a1.87 1.87 0 0 1-.943-1.055L6.683 7.925a1.76 1.76 0 0 1 .045-1.403q.315-.685 1.033-.932l6.782-2.47q.718-.27 1.392.067.675.337.943 1.056l3.998 10.959q.27.718-.045 1.404-.315.684-1.033.931zm-1.932-10.69a.87.87 0 0 0 .64-.258.87.87 0 0 0 .259-.64.87.87 0 0 0-.258-.64.87.87 0 0 0-.64-.258.87.87 0 0 0-.64.258.87.87 0 0 0-.259.64q0 .382.259.64a.87.87 0 0 0 .64.259m1.303 8.984 6.782-2.47L15.17 4.826 8.39 7.297zM8.39 7.297l6.781-2.47z"
  })
}));
SvgTagMulti.displayName = 'SvgTagMulti';
const TagMultiIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTagMulti, _objectSpread$d(_objectSpread$d({}, props), {}, {
      className: createClass(getIconStyles$d(props))
    }));
  }
});
TagMultiIcon.displayName = 'TagMultiIcon';
var TagMultiIcon$1 = TagMultiIcon;

function ownKeys$c(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$c(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$c(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$c(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$c = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$c = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$c[size], "px"),
        height: "".concat(iconSizes$c[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$c.big, "px"),
        height: "".concat(iconSizes$c.big, "px")
      };
  }
};
const getSizeStyle$c = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$c(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$c = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$c = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$c(props.color), ";}&,image{", getSizeStyle$c(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTagStacked = props => jsxRuntime.jsx("svg", _objectSpread$c(_objectSpread$c({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m17.524 14.792.003.004c.59.644.644 1.36.073 1.915-2.197 2.331-3.448 3.638-3.782 3.95-.488.453-1.072.453-1.644-.007L7 15.633v-5.155l.9.887v1.84l4.847 4.705c.21.168.323.168.48.022.311-.29 1.567-1.601 3.753-3.92.178-.173.186-.31-.14-.63l-.678-.766.596-.668c.15.148.739.787.769.848.59.644.644 1.36.073 1.915zm-.62.656c-1.767 1.872-2.79 2.936-3.086 3.212-.488.454-1.072.454-1.644-.006l-4.273-4.147v.698l4.846 4.705c.21.168.323.168.48.022.311-.29 1.567-1.601 3.753-3.92.165-.161.184-.29-.075-.564M11.49 3.001l5.852 6.442a.744.744 0 0 1 0 1.07l-4.022 4.145a.79.79 0 0 1-1.099 0L6 8.357V4.01C6 3.452 6.464 3 7.036 3zM7.028 6.07a.79.79 0 0 0 1.098 0 .744.744 0 0 0 0-1.071.79.79 0 0 0-1.098 0 .744.744 0 0 0 0 1.07"
  })
}));
SvgTagStacked.displayName = 'SvgTagStacked';
const TagStackedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTagStacked, _objectSpread$c(_objectSpread$c({}, props), {}, {
      className: createClass(getIconStyles$c(props))
    }));
  }
});
TagStackedIcon.displayName = 'TagStackedIcon';
var TagStackedIcon$1 = TagStackedIcon;

function ownKeys$b(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$b(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$b(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$b(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$b = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$b = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$b[size], "px"),
        height: "".concat(iconSizes$b[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$b.big, "px"),
        height: "".concat(iconSizes$b.big, "px")
      };
  }
};
const getSizeStyle$b = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$b(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$b = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$b = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$b(props.color), ";}&,image{", getSizeStyle$b(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTag = props => jsxRuntime.jsx("svg", _objectSpread$b(_objectSpread$b({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.039 20.482a1.74 1.74 0 0 1-1.284.518q-.766 0-1.284-.518l-7.93-7.93A1.86 1.86 0 0 1 3 11.245V4.802q0-.743.53-1.273A1.74 1.74 0 0 1 4.802 3h6.443q.384 0 .721.146.338.147.586.395l7.93 7.952q.518.518.518 1.272 0 .755-.518 1.274zm-1.284-1.262 6.443-6.443-7.953-7.975H4.802v6.443zm-5.7-10.813q.564 0 .957-.395.395-.393.395-.957 0-.562-.395-.957a1.3 1.3 0 0 0-.957-.395q-.562 0-.957.395a1.3 1.3 0 0 0-.395.957q0 .564.395.957.394.395.957.395"
  })
}));
SvgTag.displayName = 'SvgTag';
const TagIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTag, _objectSpread$b(_objectSpread$b({}, props), {}, {
      className: createClass(getIconStyles$b(props))
    }));
  }
});
TagIcon.displayName = 'TagIcon';
var TagIcon$1 = TagIcon;

function ownKeys$a(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$a(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$a(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$a(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$a = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$a = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$a[size], "px"),
        height: "".concat(iconSizes$a[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$a.big, "px"),
        height: "".concat(iconSizes$a.big, "px")
      };
  }
};
const getSizeStyle$a = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$a(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$a = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$a = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$a(props.color), ";}&,image{", getSizeStyle$a(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTerminal = props => jsxRuntime.jsx("svg", _objectSpread$a(_objectSpread$a({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.9 16.7a.87.87 0 0 1-.64-.26.87.87 0 0 1-.26-.64q0-.383.26-.642a.87.87 0 0 1 .64-.258h3.6a.87.87 0 0 1 .64.258q.26.26.26.642a.87.87 0 0 1-.26.64.87.87 0 0 1-.64.26zm-5.58-.63a.85.85 0 0 1-.248-.63q0-.383.248-.63l1.688-1.71-1.71-1.71a.82.82 0 0 1-.259-.63q.01-.36.281-.63a.95.95 0 0 1 .63-.26q.36-.01.63.26l2.34 2.34q.135.136.192.292.056.158.056.338-.001.18-.056.338a.8.8 0 0 1-.192.292l-2.34 2.34a.88.88 0 0 1-.618.258.84.84 0 0 1-.642-.258M4.8 19.4q-.743 0-1.27-.528A1.73 1.73 0 0 1 3 17.6V6.8q0-.743.53-1.27Q4.056 5 4.8 5h14.4q.743 0 1.272.53Q21 6.056 21 6.8v10.8q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528zm0-1.8h14.4v-9H4.8z"
  })
}));
SvgTerminal.displayName = 'SvgTerminal';
const TerminalIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTerminal, _objectSpread$a(_objectSpread$a({}, props), {}, {
      className: createClass(getIconStyles$a(props))
    }));
  }
});
TerminalIcon.displayName = 'TerminalIcon';
var TerminalIcon$1 = TerminalIcon;

function ownKeys$9(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$9(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$9(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$9(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$9 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$9 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$9[size], "px"),
        height: "".concat(iconSizes$9[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$9.big, "px"),
        height: "".concat(iconSizes$9.big, "px")
      };
  }
};
const getSizeStyle$9 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$9(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$9 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$9 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$9(props.color), ";}&,image{", getSizeStyle$9(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTreeStructure = props => jsxRuntime.jsx("svg", _objectSpread$9(_objectSpread$9({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.5 20.2q-.743 0-1.27-.528a1.73 1.73 0 0 1-.53-1.272v-.9h-1.8q-.743 0-1.27-.528a1.73 1.73 0 0 1-.53-1.272V8.5H9.3v.9q0 .743-.53 1.27-.527.53-1.27.53H4.8q-.743 0-1.27-.53A1.73 1.73 0 0 1 3 9.4V5.8q0-.742.53-1.272A1.73 1.73 0 0 1 4.8 4h2.7q.743 0 1.27.528.53.53.53 1.272v.9h5.4v-.9q0-.742.53-1.272A1.73 1.73 0 0 1 16.5 4h2.7q.743 0 1.272.528Q21 5.058 21 5.8v3.6q0 .743-.528 1.27-.53.53-1.272.53h-2.7q-.743 0-1.27-.53a1.73 1.73 0 0 1-.53-1.27v-.9h-1.8v7.2h1.8v-.9q0-.742.53-1.272A1.73 1.73 0 0 1 16.5 13h2.7q.743 0 1.272.528.528.53.528 1.272v3.6q0 .742-.528 1.272a1.74 1.74 0 0 1-1.272.528zM4.8 5.8v3.6zm11.7 9v3.6zm0-9v3.6zm0 3.6h2.7V5.8h-2.7zm0 9h2.7v-3.6h-2.7zm-11.7-9h2.7V5.8H4.8z"
  })
}));
SvgTreeStructure.displayName = 'SvgTreeStructure';
const TreeStructureIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTreeStructure, _objectSpread$9(_objectSpread$9({}, props), {}, {
      className: createClass(getIconStyles$9(props))
    }));
  }
});
TreeStructureIcon.displayName = 'TreeStructureIcon';
var TreeStructureIcon$1 = TreeStructureIcon;

function ownKeys$8(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$8(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$8(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$8(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$8 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$8 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$8[size], "px"),
        height: "".concat(iconSizes$8[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$8.big, "px"),
        height: "".concat(iconSizes$8.big, "px")
      };
  }
};
const getSizeStyle$8 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$8(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$8 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$8 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$8(props.color), ";}&,image{", getSizeStyle$8(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTruck = props => jsxRuntime.jsx("svg", _objectSpread$8(_objectSpread$8({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.09 18.09a2.37 2.37 0 0 1-1.738-.715 2.37 2.37 0 0 1-.716-1.739q-.675 0-1.155-.48A1.58 1.58 0 0 1 3 14V6.636q0-.675.481-1.155.48-.48 1.155-.481h9.819q.675 0 1.156.481.48.48.48 1.155v1.637h2.045q.206 0 .369.082.163.081.286.245l2.045 2.72a.7.7 0 0 1 .123.226q.04.122.041.265v3.007a.8.8 0 0 1-.236.583.8.8 0 0 1-.582.235h-.818q0 1.023-.716 1.739a2.37 2.37 0 0 1-1.739.716 2.37 2.37 0 0 1-1.738-.716 2.37 2.37 0 0 1-.716-1.739h-4.91q0 1.023-.715 1.739a2.37 2.37 0 0 1-1.74.716m0-1.636a.8.8 0 0 0 .584-.235.8.8 0 0 0 .235-.583.8.8 0 0 0-.235-.582.8.8 0 0 0-.583-.236.8.8 0 0 0-.583.236.8.8 0 0 0-.235.582.8.8 0 0 0 .235.583.8.8 0 0 0 .583.235M4.637 6.637V14h.655a2.8 2.8 0 0 1 .798-.593q.45-.225 1.002-.225t1.002.225.798.593h5.563V6.636zm12.273 9.819a.8.8 0 0 0 .583-.236.8.8 0 0 0 .235-.583.8.8 0 0 0-.235-.582.8.8 0 0 0-.583-.236.8.8 0 0 0-.582.236.8.8 0 0 0-.236.582.8.8 0 0 0 .235.583.8.8 0 0 0 .583.235m-.818-4.091h3.477l-1.84-2.455H16.09z"
  })
}));
SvgTruck.displayName = 'SvgTruck';
const TruckIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTruck, _objectSpread$8(_objectSpread$8({}, props), {}, {
      className: createClass(getIconStyles$8(props))
    }));
  }
});
TruckIcon.displayName = 'TruckIcon';
var TruckIcon$1 = TruckIcon;

function ownKeys$7(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$7(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$7(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$7(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$7 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$7 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$7[size], "px"),
        height: "".concat(iconSizes$7[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$7.big, "px"),
        height: "".concat(iconSizes$7.big, "px")
      };
  }
};
const getSizeStyle$7 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$7(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$7 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$7 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$7(props.color), ";}&,image{", getSizeStyle$7(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgUserFilled = props => jsxRuntime.jsx("svg", _objectSpread$7(_objectSpread$7({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13 13q-1.857 0-3.178-1.322Q8.5 10.357 8.5 8.5t1.322-3.178T13 4t3.178 1.322Q17.5 6.643 17.5 8.5t-1.322 3.178Q14.857 13 13 13m-6.75 9q-.928 0-1.588-.66A2.17 2.17 0 0 1 4 19.75v-.9q0-.957.493-1.758A3.3 3.3 0 0 1 5.8 15.869a16.7 16.7 0 0 1 3.544-1.309q1.8-.435 3.656-.435t3.656.435T20.2 15.87q.816.422 1.307 1.223.493.801.493 1.758v.9a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66z"
  })
}));
SvgUserFilled.displayName = 'SvgUserFilled';
const UserFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUserFilled, _objectSpread$7(_objectSpread$7({}, props), {}, {
      className: createClass(getIconStyles$7(props))
    }));
  }
});
UserFilledIcon.displayName = 'UserFilledIcon';
var UserFilledIcon$1 = UserFilledIcon;

function ownKeys$6(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$6(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$6(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$6(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$6 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$6 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$6[size], "px"),
        height: "".concat(iconSizes$6[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$6.big, "px"),
        height: "".concat(iconSizes$6.big, "px")
      };
  }
};
const getSizeStyle$6 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$6(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$6 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$6 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$6(props.color), ";}&,image{", getSizeStyle$6(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgUserLinear = props => jsxRuntime.jsx("svg", _objectSpread$6(_objectSpread$6({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 12q-1.857 0-3.178-1.322Q7.5 9.357 7.5 7.5t1.322-3.178T12 3t3.178 1.322Q16.5 5.643 16.5 7.5t-1.322 3.178Q13.857 12 12 12m6.75 9H5.25q-.928 0-1.588-.66A2.17 2.17 0 0 1 3 18.75v-.9q0-.957.493-1.758A3.3 3.3 0 0 1 4.8 14.869a16.7 16.7 0 0 1 3.544-1.309q1.8-.435 3.656-.435t3.656.435T19.2 14.87q.816.422 1.307 1.223.493.801.493 1.758v.9a2.17 2.17 0 0 1-.66 1.59q-.662.66-1.59.66m-13.5-2.25h13.5v-.9q0-.31-.154-.562-.156-.254-.409-.394a14.7 14.7 0 0 0-3.065-1.14 13.1 13.1 0 0 0-6.244 0 14.7 14.7 0 0 0-3.065 1.14 1.09 1.09 0 0 0-.563.956zm6.75-9q.928 0 1.59-.662.66-.66.66-1.588t-.66-1.588A2.17 2.17 0 0 0 12 5.25q-.928 0-1.588.662-.662.66-.662 1.588t.662 1.588q.66.662 1.588.662"
  })
}));
SvgUserLinear.displayName = 'SvgUserLinear';
const UserLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUserLinear, _objectSpread$6(_objectSpread$6({}, props), {}, {
      className: createClass(getIconStyles$6(props))
    }));
  }
});
UserLinearIcon.displayName = 'UserLinearIcon';
var UserLinearIcon$1 = UserLinearIcon;

function ownKeys$5(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$5(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$5(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$5(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$5 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$5 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$5[size], "px"),
        height: "".concat(iconSizes$5[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$5.big, "px"),
        height: "".concat(iconSizes$5.big, "px")
      };
  }
};
const getSizeStyle$5 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$5(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$5 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$5 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$5(props.color), ";}&,image{", getSizeStyle$5(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgUsers = props => jsxRuntime.jsx("svg", _objectSpread$5(_objectSpread$5({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 18.09V15.8q0-.696.358-1.279.358-.582.951-.89 1.269-.634 2.577-.95a11.3 11.3 0 0 1 2.66-.317q1.35 0 2.659.316a12.2 12.2 0 0 1 2.577.952q.593.306.95.89.36.582.359 1.278v2.29zm14.727 0v-2.454q0-.9-.5-1.728-.503-.829-1.422-1.422 1.043.123 1.963.42.92.296 1.718.726.736.41 1.125.91.39.501.389 1.094v2.455zm-8.182-6.544q-1.35 0-2.31-.962a3.15 3.15 0 0 1-.962-2.311q0-1.35.961-2.312A3.15 3.15 0 0 1 9.545 5q1.35 0 2.312.961.96.962.961 2.312 0 1.35-.961 2.311-.962.962-2.312.962m8.182-3.273q0 1.35-.961 2.311-.961.962-2.311.962-.225 0-.573-.051a5 5 0 0 1-.573-.113q.552-.655.849-1.452a4.7 4.7 0 0 0 .297-1.657 4.7 4.7 0 0 0-.297-1.657 4.9 4.9 0 0 0-.849-1.452q.287-.103.573-.134.286-.03.572-.03 1.35 0 2.312.961.96.962.961 2.312m-13.09 8.182h9.817V15.8a.77.77 0 0 0-.112-.41.8.8 0 0 0-.296-.286 10.7 10.7 0 0 0-2.23-.828 9.5 9.5 0 0 0-4.541 0q-1.125.276-2.23.829a.8.8 0 0 0-.409.695zm4.908-6.546q.675 0 1.156-.481.48-.48.48-1.155t-.48-1.156a1.58 1.58 0 0 0-1.156-.48q-.675 0-1.155.48t-.48 1.156.48 1.155q.48.48 1.155.481"
  })
}));
SvgUsers.displayName = 'SvgUsers';
const UsersIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUsers, _objectSpread$5(_objectSpread$5({}, props), {}, {
      className: createClass(getIconStyles$5(props))
    }));
  }
});
UsersIcon.displayName = 'UsersIcon';
var UsersIcon$1 = UsersIcon;

function ownKeys$4(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$4(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$4(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$4(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$4 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$4 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$4[size], "px"),
        height: "".concat(iconSizes$4[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$4.big, "px"),
        height: "".concat(iconSizes$4.big, "px")
      };
  }
};
const getSizeStyle$4 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$4(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$4 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$4 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$4(props.color), ";}&,image{", getSizeStyle$4(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgVerified = props => jsxRuntime.jsx("svg", _objectSpread$4(_objectSpread$4({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.734 18.429 5.312 17.9a.83.83 0 0 1-.529-.342.82.82 0 0 1-.154-.605l.242-2.488-1.65-1.894A.82.82 0 0 1 3 12q0-.33.22-.572l1.651-1.894-.242-2.488a.82.82 0 0 1 .154-.605.83.83 0 0 1 .529-.342l2.422-.528L9.01 3.413a.82.82 0 0 1 .484-.374 1 1 0 0 1 .616.022l2.29.969 2.29-.969a1 1 0 0 1 .616-.022.82.82 0 0 1 .485.374l1.277 2.158 2.422.528a.83.83 0 0 1 .528.342.82.82 0 0 1 .154.605l-.242 2.488 1.651 1.894q.22.242.22.572t-.22.572l-1.651 1.894.242 2.488a.82.82 0 0 1-.154.605.83.83 0 0 1-.528.341l-2.422.529-1.277 2.158a.82.82 0 0 1-.485.374 1 1 0 0 1-.616-.022l-2.29-.969-2.29.969a1 1 0 0 1-.616.022.82.82 0 0 1-.484-.374zm3.126-3.92a.84.84 0 0 0 .617.243q.373 0 .616-.242l3.743-3.743a.86.86 0 0 0 .264-.628.86.86 0 0 0-.264-.627.86.86 0 0 0-.627-.264.86.86 0 0 0-.628.264l-3.104 3.105L10.2 11.36a.86.86 0 0 0-.628-.231.86.86 0 0 0-.605.253.84.84 0 0 0-.243.617q0 .375.243.617z"
  })
}));
SvgVerified.displayName = 'SvgVerified';
const VerifiedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgVerified, _objectSpread$4(_objectSpread$4({}, props), {}, {
      className: createClass(getIconStyles$4(props))
    }));
  }
});
VerifiedIcon.displayName = 'VerifiedIcon';
var VerifiedIcon$1 = VerifiedIcon;

function ownKeys$3(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$3(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$3(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$3(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$3 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$3 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$3[size], "px"),
        height: "".concat(iconSizes$3[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$3.big, "px"),
        height: "".concat(iconSizes$3.big, "px")
      };
  }
};
const getSizeStyle$3 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$3(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$3 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$3 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$3(props.color), ";}&,image{", getSizeStyle$3(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgViewGridPlus = props => jsxRuntime.jsx("svg", _objectSpread$3(_objectSpread$3({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 11q-.825 0-1.413-.588A1.93 1.93 0 0 1 3 9V5q0-.825.587-1.413A1.93 1.93 0 0 1 5 3h4q.825 0 1.413.587Q11 4.175 11 5v4q0 .825-.587 1.412A1.93 1.93 0 0 1 9 11zm0 10q-.825 0-1.413-.587A1.93 1.93 0 0 1 3 19v-4q0-.825.587-1.413A1.93 1.93 0 0 1 5 13h4q.825 0 1.413.587Q11 14.175 11 15v4q0 .825-.587 1.413A1.93 1.93 0 0 1 9 21zm10-10q-.825 0-1.412-.588A1.92 1.92 0 0 1 13 9V5q0-.825.588-1.413A1.93 1.93 0 0 1 15 3h4q.825 0 1.413.587Q21 4.175 21 5v4q0 .825-.587 1.412A1.93 1.93 0 0 1 19 11zm0 10q-.825 0-1.412-.587A1.93 1.93 0 0 1 13 19v-4q0-.825.588-1.413A1.93 1.93 0 0 1 15 13h4q.825 0 1.413.587Q21 14.175 21 15v4q0 .825-.587 1.413A1.93 1.93 0 0 1 19 21zM5 9h4V5H5zm10 0h4V5h-4zm0 10h4v-4h-4zM5 19h4v-4H5z"
  })
}));
SvgViewGridPlus.displayName = 'SvgViewGridPlus';
const ViewGridPlusIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgViewGridPlus, _objectSpread$3(_objectSpread$3({}, props), {}, {
      className: createClass(getIconStyles$3(props))
    }));
  }
});
ViewGridPlusIcon.displayName = 'ViewGridPlusIcon';
var ViewGridPlusIcon$1 = ViewGridPlusIcon;

function ownKeys$2(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$2(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$2(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$2(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$2 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$2 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$2[size], "px"),
        height: "".concat(iconSizes$2[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$2.big, "px"),
        height: "".concat(iconSizes$2.big, "px")
      };
  }
};
const getSizeStyle$2 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$2(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$2 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$2 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$2(props.color), ";}&,image{", getSizeStyle$2(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgWarning = props => jsxRuntime.jsx("svg", _objectSpread$2(_objectSpread$2({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.866 19.786a.8.8 0 0 1-.745-.439.86.86 0 0 1 0-.877l8.112-14.032Q11.473 4 12 4q.526 0 .767.438L20.88 18.47q.241.44 0 .877a.8.8 0 0 1-.745.439zM12 10.139a.85.85 0 0 0-.624.252.85.85 0 0 0-.253.625v2.63q0 .374.253.625a.85.85 0 0 0 .624.253.85.85 0 0 0 .625-.253.85.85 0 0 0 .252-.624v-2.631a.85.85 0 0 0-.252-.626.85.85 0 0 0-.625-.251m0 7.016a.85.85 0 0 0 .625-.253.85.85 0 0 0 .252-.624.85.85 0 0 0-.252-.625.85.85 0 0 0-.625-.252.85.85 0 0 0-.624.252.85.85 0 0 0-.253.625q0 .372.253.624a.85.85 0 0 0 .624.253m-6.621.877H18.62L12 6.63z"
  })
}));
SvgWarning.displayName = 'SvgWarning';
const WarningIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgWarning, _objectSpread$2(_objectSpread$2({}, props), {}, {
      className: createClass(getIconStyles$2(props))
    }));
  }
});
WarningIcon.displayName = 'WarningIcon';
var WarningIcon$1 = WarningIcon;

function ownKeys$1(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes$1 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1[size], "px"),
        height: "".concat(iconSizes$1[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1.big, "px"),
        height: "".concat(iconSizes$1.big, "px")
      };
  }
};
const getSizeStyle$1 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1(props.color), ";}&,image{", getSizeStyle$1(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgWindowEye = props => jsxRuntime.jsx("svg", _objectSpread$1(_objectSpread$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: 12,
  height: 12,
  fill: "none",
  viewBox: "0 0 12 12",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#545878",
    d: "M1.286 12q-.531 0-.908-.378A1.24 1.24 0 0 1 0 10.714V1.286Q0 .755.378.378.755 0 1.286 0h9.428q.53 0 .908.378.378.377.378.908v9.428q0 .53-.378.908a1.24 1.24 0 0 1-.908.378zm0-1.286h9.428V2.571H1.286zm4.712-1.5q-1.32 0-2.355-.723a4.15 4.15 0 0 1-1.5-1.848q.464-1.125 1.502-1.848t2.357-.724 2.355.724a4.15 4.15 0 0 1 1.5 1.848Q9.392 7.768 8.355 8.49t-2.357.723M6 8.357q.947 0 1.712-.454t1.199-1.26a3.2 3.2 0 0 0-1.199-1.26A3.3 3.3 0 0 0 6 4.929q-.947 0-1.712.454-.765.455-1.199 1.26.433.806 1.199 1.26.765.454 1.712.454m0-.643q.446 0 .759-.312.312-.313.312-.76 0-.446-.312-.758A1.03 1.03 0 0 0 6 5.57q-.446 0-.759.313a1.03 1.03 0 0 0-.312.759q0 .446.312.759.312.312.759.312"
  })
}));
SvgWindowEye.displayName = 'SvgWindowEye';
const WindowEyeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgWindowEye, _objectSpread$1(_objectSpread$1({}, props), {}, {
      className: createClass(getIconStyles$1(props))
    }));
  }
});
WindowEyeIcon.displayName = 'WindowEyeIcon';
var WindowEyeIcon$1 = WindowEyeIcon;

function ownKeys(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys(Object(t))).call(_context4, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes[size], "px"),
        height: "".concat(iconSizes[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes.big, "px"),
        height: "".concat(iconSizes.big, "px")
      };
  }
};
const getSizeStyle = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor(props.color), ";}&,image{", getSizeStyle(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgWorld = props => jsxRuntime.jsx("svg", _objectSpread(_objectSpread({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.7 8.7 0 0 1-3.488-.71 9.1 9.1 0 0 1-2.868-1.934 9.1 9.1 0 0 1-1.935-2.869A8.7 8.7 0 0 1 3 12q0-1.867.71-3.498a9.2 9.2 0 0 1 1.934-2.858 9.1 9.1 0 0 1 2.868-1.936A8.7 8.7 0 0 1 12 3q1.867 0 3.498.708a9.2 9.2 0 0 1 2.858 1.936 9.2 9.2 0 0 1 1.935 2.858A8.7 8.7 0 0 1 21 12q0 1.845-.71 3.488a9.1 9.1 0 0 1-1.934 2.868 9.2 9.2 0 0 1-2.858 1.935A8.7 8.7 0 0 1 12 21m0-1.845q.585-.81 1.012-1.687.428-.878.698-1.868h-3.42q.27.99.698 1.868.427.876 1.012 1.687m-2.34-.36a12.4 12.4 0 0 1-.708-1.542 13 13 0 0 1-.507-1.653H5.79q.653 1.125 1.63 1.958a6.5 6.5 0 0 0 2.24 1.237m4.68 0a6.5 6.5 0 0 0 2.238-1.238A7.5 7.5 0 0 0 18.21 15.6h-2.655q-.203.855-.506 1.653-.304.8-.709 1.542M5.025 13.8h3.06q-.067-.45-.102-.89a12 12 0 0 1 0-1.82q.034-.44.102-.89h-3.06q-.112.45-.17.89A7 7 0 0 0 4.8 12a7.2 7.2 0 0 0 .225 1.8m4.86 0h4.23q.068-.45.102-.89a12 12 0 0 0 0-1.82q-.035-.44-.102-.89h-4.23A12 12 0 0 0 9.75 12a12 12 0 0 0 .135 1.8m6.03 0h3.06q.112-.45.17-.89A7 7 0 0 0 19.2 12a7.2 7.2 0 0 0-.225-1.8h-3.06a12 12 0 0 1 .135 1.8 12 12 0 0 1-.135 1.8m-.36-5.4h2.655a7.5 7.5 0 0 0-1.632-1.958 6.5 6.5 0 0 0-2.238-1.237q.404.743.71 1.54.302.8.505 1.655m-5.265 0h3.42q-.27-.99-.698-1.868A11.4 11.4 0 0 0 12 4.845q-.585.81-1.012 1.688A10.7 10.7 0 0 0 10.29 8.4m-4.5 0h2.655q.203-.855.507-1.654a12.4 12.4 0 0 1 .708-1.541 6.5 6.5 0 0 0-2.24 1.237A7.5 7.5 0 0 0 5.79 8.4"
  })
}));
SvgWorld.displayName = 'SvgWorld';
const WorldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgWorld, _objectSpread(_objectSpread({}, props), {}, {
      className: createClass(getIconStyles(props))
    }));
  }
});
WorldIcon.displayName = 'WorldIcon';
var WorldIcon$1 = WorldIcon;

exports.AngleDownIcon = AngleDownIcon$1;
exports.AngleLeftIcon = AngleLeftIcon$1;
exports.AngleRightIcon = AngleRightIcon$1;
exports.AngleThinLeftIcon = AngleThinLeftIcon$1;
exports.AngleThinRightIcon = AngleThinRightIcon$1;
exports.AngleUpDownIcon = AngleUpDownIcon$1;
exports.AngleUpIcon = AngleUpIcon$1;
exports.ArrowDownIcon = ArrowDownIcon$1;
exports.ArrowLeftIcon = ArrowLeftIcon$1;
exports.ArrowLongDownIcon = ArrowLongDownIcon$1;
exports.ArrowRightIcon = ArrowRightIcon$1;
exports.ArrowTriangleDownIcon = ArrowTriangleDownIcon$1;
exports.ArrowTriangleUpIcon = ArrowTriangleUpIcon$1;
exports.ArrowUpIcon = ArrowUpIcon$1;
exports.ArrowsIcon = ArrowsIcon$1;
exports.ArrowsMinimizeIcon = ArrowsMinimizeIcon$1;
exports.BackIcon = BackIcon$1;
exports.BidirectionalArrowIcon = BidirectionalArrowIcon$1;
exports.BinFilledIcon = BinFilledIcon$1;
exports.BinLinearIcon = BinLinearIcon$1;
exports.BoxIcon = BoxIcon$1;
exports.BrainIcon = BrainIcon$1;
exports.CalendarIcon = CalendarIcon$1;
exports.CameraIcon = CameraIcon$1;
exports.CaretDownIcon = CaretDownIcon$1;
exports.CaretUpIcon = CaretUpIcon$1;
exports.CartIcon = CartIcon$1;
exports.ChainBrokenIcon = ChainBrokenIcon$1;
exports.ChainIcon = ChainIcon$1;
exports.CheckActiveIcon = CheckActiveIcon$1;
exports.CheckBoldIcon = CheckBoldIcon$1;
exports.CheckInactiveIcon = CheckInactiveIcon$1;
exports.CheckThinIcon = CheckThinIcon$1;
exports.CircleIcon = CircleIcon$1;
exports.ClipboardIcon = ClipboardIcon$1;
exports.ClockIcon = ClockIcon$1;
exports.ClockWithArrowIcon = ClockWithArrowIcon$1;
exports.CloseBoldIcon = CloseBoldIcon$1;
exports.CloseIcon = CloseIcon$1;
exports.CodeViewIcon = CodeViewIcon$1;
exports.CoinsIcon = CoinsIcon$1;
exports.ColumnsIcon = ColumnsIcon$1;
exports.ConnectedSquareIcon = ConnectedSquareIcon$1;
exports.ConnectedTriangleIcon = ConnectedTriangleIcon$1;
exports.CopyIcon = CopyIcon$1;
exports.CubeIcon = CubeIcon$1;
exports.CubesIcon = CubesIcon$1;
exports.DomainIcon = DomainIcon$1;
exports.DotIcon = DotIcon$1;
exports.DownloadIcon = DownloadIcon$1;
exports.DragDropIcon = DragDropIcon$1;
exports.DragIcon = DragIcon$1;
exports.EditIcon = EditIcon$1;
exports.ErrorIcon = ErrorIcon$1;
exports.ExpandIcon = ExpandIcon$1;
exports.ExportIcon = ExportIcon$1;
exports.ExternalLinkIcon = ExternalLinkIcon$1;
exports.EyeCrossedIcon = EyeCrossedIcon$1;
exports.EyeIcon = EyeIcon$1;
exports.FilterAndListIcon = FilterAndListIcon$1;
exports.FilterIcon = FilterIcon$1;
exports.FlagFilledIcon = FlagFilledIcon$1;
exports.FlagLinearIcon = FlagLinearIcon$1;
exports.FlameIcon = FlameIcon$1;
exports.FractionDigitsIcon = FractionDigitsIcon$1;
exports.GearIcon = GearIcon$1;
exports.GraduationCapIcon = GraduationCapIcon$1;
exports.GraphIcon = GraphIcon$1;
exports.GridIcon = GridIcon$1;
exports.HeartIcon = HeartIcon$1;
exports.HomeIcon = HomeIcon$1;
exports.ImportIcon = ImportIcon$1;
exports.InfoIcon = InfoIcon$1;
exports.InformationIcon = InformationIcon$1;
exports.LayersIcon = LayersIcon$1;
exports.ListIcon = ListIcon$1;
exports.ListWithSearchIcon = ListWithSearchIcon$1;
exports.LockIcon = LockIcon$1;
exports.LogoutIcon = LogoutIcon$1;
exports.MailIcon = MailIcon$1;
exports.MinimizeIcon = MinimizeIcon$1;
exports.NestedViewIcon = NestedViewIcon$1;
exports.OperationsIcon = OperationsIcon$1;
exports.PageGearIcon = PageGearIcon$1;
exports.PagesIcon = PagesIcon$1;
exports.PaperBillInvertedIcon = PaperBillInvertedIcon$1;
exports.PaperclipIcon = PaperclipIcon$1;
exports.PinFilledIcon = PinFilledIcon$1;
exports.PinGearIcon = PinGearIcon$1;
exports.PinLinearIcon = PinLinearIcon$1;
exports.PluginIcon = PluginIcon$1;
exports.PlusBoldIcon = PlusBoldIcon$1;
exports.PlusThinIcon = PlusThinIcon$1;
exports.RefreshIcon = RefreshIcon$1;
exports.RestoreIcon = RestoreIcon$1;
exports.RevertIcon = RevertIcon$1;
exports.ReviewIcon = ReviewIcon$1;
exports.RightTriangleFilledIcon = RightTriangleFilledIcon$1;
exports.RightTriangleLinearIcon = RightTriangleLinearIcon$1;
exports.RocketIcon = RocketIcon$1;
exports.ScreenGearIcon = ScreenGearIcon$1;
exports.ScreenUserIcon = ScreenUserIcon$1;
exports.SearchIcon = SearchIcon$1;
exports.SidebarCollapseIcon = SidebarCollapseIcon$1;
exports.SidebarExpandIcon = SidebarExpandIcon$1;
exports.SortingIcon = SortingIcon$1;
exports.SpeechBubbleIcon = SpeechBubbleIcon$1;
exports.SpeedometerIcon = SpeedometerIcon$1;
exports.SplitIcon = SplitIcon$1;
exports.StackIcon = StackIcon$1;
exports.StarIcon = StarIcon$1;
exports.SubdirectoryArrowIcon = SubdirectoryArrowIcon$1;
exports.SupportIcon = SupportIcon$1;
exports.SwitcherIcon = SwitcherIcon$1;
exports.TableIcon = TableIcon$1;
exports.TagIcon = TagIcon$1;
exports.TagMultiIcon = TagMultiIcon$1;
exports.TagStackedIcon = TagStackedIcon$1;
exports.TerminalIcon = TerminalIcon$1;
exports.TreeStructureIcon = TreeStructureIcon$1;
exports.TruckIcon = TruckIcon$1;
exports.UserFilledIcon = UserFilledIcon$1;
exports.UserLinearIcon = UserLinearIcon$1;
exports.UsersIcon = UsersIcon$1;
exports.VerifiedIcon = VerifiedIcon$1;
exports.ViewGridPlusIcon = ViewGridPlusIcon$1;
exports.WarningIcon = WarningIcon$1;
exports.WindowEyeIcon = WindowEyeIcon$1;
exports.WorldIcon = WorldIcon$1;
