'use strict';

var _pt = require('prop-types');
var react$1 = require('react');
var DOMPurify = require('dompurify');
var convert = require('react-from-dom');
var react = require('@emotion/react');
var utils = require('@commercetools-uikit/utils');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var designSystem = require('@commercetools-uikit/design-system');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _pt__default = /*#__PURE__*/_interopDefault(_pt);
var DOMPurify__default = /*#__PURE__*/_interopDefault(DOMPurify);
var convert__default = /*#__PURE__*/_interopDefault(convert);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

const iconSizes = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes[size], "px"),
        height: "".concat(iconSizes[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes.big, "px"),
        height: "".concat(iconSizes.big, "px")
      };
  }
};
const getSizeStyle = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
    case 'success':
      iconColor = designSystem.designTokens.colorSuccess;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};

// @ts-ignore
const getIconStyles = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor(props.color), ";}&,image{", getSizeStyle(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljb24uc3R5bGVzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3R2tEIiwiZmlsZSI6Imljb24uc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY29sb3I/OlxuICAgIHwgJ3NvbGlkJ1xuICAgIHwgJ25ldXRyYWw2MCdcbiAgICB8ICdzdXJmYWNlJ1xuICAgIHwgJ2luZm8nXG4gICAgfCAncHJpbWFyeSdcbiAgICB8ICdwcmltYXJ5NDAnXG4gICAgfCAnd2FybmluZydcbiAgICB8ICdlcnJvcidcbiAgICB8ICdzdWNjZXNzJztcbiAgc2l6ZT86ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5leHBvcnQgdHlwZSBTVkdQcm9wcyA9IFByb3BzICYgeyBjbGFzc05hbWU6IHN0cmluZyB9O1xuXG5jb25zdCBpY29uU2l6ZXMgPSB7XG4gIHNtYWxsOiAxMixcbiAgbWVkaXVtOiAxNixcbiAgYmlnOiAyNCxcbn0gYXMgY29uc3Q7XG5jb25zdCBnZXRTaXplRGltZW5zaW9ucyA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiB7IHdpZHRoOiAnMTAwJScsIGhlaWdodDogJ2F1dG8nIH07XG4gICAgY2FzZSAnc21hbGwnOlxuICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgY2FzZSAnYmlnJzpcbiAgICAgIHJldHVybiB7IHdpZHRoOiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLCBoZWlnaHQ6IGAke2ljb25TaXplc1tzaXplXX1weGAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHsgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLCBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgIH07XG4gIH1cbn07XG5jb25zdCBnZXRTaXplU3R5bGUgPSAoc2l6ZTogUHJvcHNbJ3NpemUnXSkgPT4ge1xuICBjb25zdCBkaW1lbnNpb25zID0gZ2V0U2l6ZURpbWVuc2lvbnMoc2l6ZSk7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiBgXG4gICAgICAgICY6bm90KDpyb290KSB7XG4gICAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgICAgfVxuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtkaW1lbnNpb25zLmhlaWdodH07XG4gICAgICBgO1xuICB9XG59O1xuXG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcblxuICBsZXQgaWNvbkNvbG9yO1xuICBzd2l0Y2ggKGNvbG9yKSB7XG4gICAgY2FzZSAnc29saWQnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU29saWQ7XG4gICAgICBicmVhaztcbiAgICBjYXNlICduZXV0cmFsNjAnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnc3VyZmFjZSc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncHJpbWFyeSc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncHJpbWFyeTQwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JTdWNjZXNzO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgaWYgKCFpY29uQ29sb3IpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgY29sb3IsXG4gICAgICBgdWkta2l0L0ljb246IHRoZSBzcGVjaWZpZWQgY29sb3IgJyR7Y29sb3J9JyBpcyBub3Qgc3VwcG9ydGVkLmBcbiAgICApO1xuICAgIHJldHVybiAnaW5oZXJpdCc7XG4gIH1cblxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcblxuLy8gQHRzLWlnbm9yZVxuZXhwb3J0IGNvbnN0IGdldEljb25TdHlsZXMgPSAocHJvcHM6IFByb3BzKSA9PiBjc3NgXG4gICo6bm90KFtmaWxsPSdub25lJ10pIHtcbiAgICBmaWxsOiAke2dldENvbG9yKHByb3BzLmNvbG9yKX07XG4gIH1cbiAgJixcbiAgaW1hZ2Uge1xuICAgICR7Z2V0U2l6ZVN0eWxlKHByb3BzLnNpemUpfTtcbiAgfVxuICBmbGV4LXNocmluazogMDtcbmA7XG4iXX0= */");

const InlineSvg = props => {
  const sanitized = react$1.useMemo(() => {
    if (!utils.canUseDOM) {
      return props.data;
    }
    return DOMPurify__default["default"].sanitize(props.data, {
      USE_PROFILES: {
        svg: true
      },
      RETURN_DOM: true,
      FORBID_ATTR: [
      // To avoid injection by using `style="filter:url(\"data:image/svg+xml,<svg`
      'style']
    }).innerHTML;
  }, [props.data]);
  const svgElement = useStringToReactElement(sanitized);
  if (svgElement) {
    return jsxRuntime.jsx(react.ClassNames, {
      children: _ref => {
        let css = _ref.css;
        return /*#__PURE__*/react$1.cloneElement(svgElement, {
          className: css(getIconStyles(props))
        });
      }
    });
  }
  return null;
};
InlineSvg.propTypes = process.env.NODE_ENV !== "production" ? {
  data: _pt__default["default"].string.isRequired
} : {};
var InlineSvg$1 = InlineSvg;

// Inspired by https://github.com/gilbarbara/react-inlinesvg
function useStringToReactElement(data) {
  return react$1.useMemo(() => {
    if (!utils.canUseDOM) {
      return null;
    }
    try {
      const node = convert__default["default"](data, {
        nodeOnly: true
      });
      if (!node || !(node instanceof SVGSVGElement)) {
        throw new Error('Could not convert the string to a DOM node');
      }
      const element = convert__default["default"](node);
      if (!element || ! /*#__PURE__*/react$1.isValidElement(element)) {
        throw new Error('Could not convert the DOM node to a React element');
      }
      return element;
    } catch (error) {
      console.error(error);
      return null;
    }
  }, [data]);
}

exports.InlineSvg = InlineSvg$1;
