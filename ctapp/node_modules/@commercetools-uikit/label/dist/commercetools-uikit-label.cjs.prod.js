'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
require('prop-types');
var react$1 = require('react');
var reactIntl = require('react-intl');
require('@commercetools-uikit/utils');
var Text = require('@commercetools-uikit/text');
var react = require('@emotion/react');
var designSystem = require('@commercetools-uikit/design-system');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var Text__default = /*#__PURE__*/_interopDefault(Text);

const RequiredIndicator = () => jsxRuntime.jsx("em", {
  css: /*#__PURE__*/react.css("color:", designSystem.designTokens.colorWarning, ";font-style:normal;margin-left:2px;" + ("" ), "" ),
  children: '*'
});
RequiredIndicator.displayName = 'RequiredIndicator';
var RequiredIndicator$1 = RequiredIndicator;

function ownKeys(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(t))).call(_context2, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
var _ref = {
  name: "1e5gw54",
  styles: ">div{display:flex;}"
} ;
const Label = props => {
  props.intlMessage || Boolean(react$1.Children.count(props.children));
  return jsxRuntime.jsx("label", {
    css: _ref,
    id: props.id,
    htmlFor: props.htmlFor,
    children: jsxRuntime.jsxs(Text__default["default"].Detail, {
      tone: props.tone
      // TODO: remove passing `isBold` prop here once deprecated
      ,
      isBold: props.isBold
      // insure that fontWeight defaults to 'medium' even if user passes 'regular'
      ,
      fontWeight: props.fontWeight === 'bold' ? 'bold' : 'medium',
      children: [props.intlMessage ? jsxRuntime.jsx(reactIntl.FormattedMessage, _objectSpread({}, props.intlMessage)) : props.children, props.isRequiredIndicatorVisible && jsxRuntime.jsx(RequiredIndicator$1, {})]
    })
  });
};
Label.propTypes = {};
Label.displayName = 'Label';
var Label$1 = Label;

// NOTE: This string will be replaced on build time with the package version.
var version = "18.3.0";

exports["default"] = Label$1;
exports.version = version;
