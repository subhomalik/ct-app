'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _pt = require('prop-types');
var react$1 = require('react');
var reactIntl = require('react-intl');
var react = require('@emotion/react');
var AccessibleButton = require('@commercetools-uikit/accessible-button');
var designSystem = require('@commercetools-uikit/design-system');
var icons = require('@commercetools-uikit/icons');
var utils = require('@commercetools-uikit/utils');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _pt__default = /*#__PURE__*/_interopDefault(_pt);
var AccessibleButton__default = /*#__PURE__*/_interopDefault(AccessibleButton);

function ownKeys(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(t))).call(_context2, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
const warnIfMissingContent = props => {
  const hasContent = Boolean(props.intlMessage) || Boolean(react$1.Children.count(props.children));
  process.env.NODE_ENV !== "production" ? utils.warning(hasContent, ['Warning: Failed prop type:', "The prop `intlMessage` is marked as required in `Link`", 'but its value is `undefined`'].join(' ')) : void 0;
  process.env.NODE_ENV !== "production" ? utils.warning(hasContent, ['Warning: Failed prop type:', "The prop `children` is marked as required in `Link`", 'but its value is `undefined`'].join(' ')) : void 0;
};
const getIconByType = props => {
  switch (props.type) {
    case 'error':
      return icons.ErrorIcon;
    case 'info':
      return icons.InformationIcon;
    case 'warning':
      return icons.WarningIcon;
    default:
      return icons.CheckBoldIcon;
  }
};
const getIconColor = props => {
  switch (props.type) {
    case 'error':
      return designSystem.designTokens.colorError;
    case 'info':
      return designSystem.designTokens.colorInfo;
    case 'warning':
      return designSystem.designTokens.colorWarning;
    case 'success':
      return designSystem.designTokens.fontColorForContentNotificationWhenSuccess;
    default:
      return '';
  }
};
const NotificationTypeIcon = props => {
  const Icon = getIconByType(props);
  return jsxRuntime.jsx("div", {
    css: /*#__PURE__*/react.css("display:flex;align-items:center;fill:", getIconColor(props), ";svg{margin:0 -3px;}" + (process.env.NODE_ENV === "production" ? "" : ";label:NotificationTypeIcon;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQtbm90aWZpY2F0aW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwR2MiLCJmaWxlIjoiY29udGVudC1ub3RpZmljYXRpb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXNzYWdlRGVzY3JpcHRvciB9IGZyb20gJ3JlYWN0LWludGwnO1xuXG5pbXBvcnQge1xuICBDaGlsZHJlbixcbiAgdHlwZSBSZWFjdE5vZGUsXG4gIHR5cGUgTW91c2VFdmVudCxcbiAgdHlwZSBLZXlib2FyZEV2ZW50LFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtYXR0ZWRNZXNzYWdlIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgQWNjZXNzaWJsZUJ1dHRvbiBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9hY2Nlc3NpYmxlLWJ1dHRvbic7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB7XG4gIEVycm9ySWNvbixcbiAgV2FybmluZ0ljb24sXG4gIENoZWNrQm9sZEljb24sXG4gIENsb3NlQm9sZEljb24sXG4gIEluZm9ybWF0aW9uSWNvbixcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvaWNvbnMnO1xuaW1wb3J0IHsgZmlsdGVyRGF0YUF0dHJpYnV0ZXMsIHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5cbmV4cG9ydCB0eXBlIFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSBjb2xvci90eXBlIG9mIG5vdGlmaWNhdGlvbi5cbiAgICovXG4gIHR5cGU6ICdlcnJvcicgfCAnaW5mbycgfCAnd2FybmluZycgfCAnc3VjY2Vzcyc7XG5cbiAgLyoqXG4gICAqIEFuIGBpbnRsYCBtZXNzYWdlIG9iamVjdCB0aGF0IHdpbGwgYmUgcmVuZGVyZWQgd2l0aCBgRm9ybWF0dGVkTWVzc2FnZWAuXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgY2hpbGRyZW5gIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGludGxNZXNzYWdlPzogTWVzc2FnZURlc2NyaXB0b3IgJiB7XG4gICAgdmFsdWVzPzogUmVjb3JkPHN0cmluZywgUmVhY3ROb2RlPjtcbiAgfTtcblxuICAvKipcbiAgICogV2hlbiBwcm92aWRlZCwgYSBjbG9zZSBidXR0b24gd2lsbCBiZSByZW5kZXJlZCBhbmQgdGhpcyBjYWxsYmFjayB3aWxsIGJlXG4gICAqIGNhbGxlZCB3aGVuIGl0IGlzIGNsaWNrZWQuXG4gICAqL1xuICBvblJlbW92ZT86IChcbiAgICBldmVudDogTW91c2VFdmVudDxIVE1MRWxlbWVudD4gfCBLZXlib2FyZEV2ZW50PEhUTUxFbGVtZW50PlxuICApID0+IHZvaWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBub3RpZmljYXRpb24uXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgaW50bE1lc3NhZ2VgIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xufTtcblxuY29uc3Qgd2FybklmTWlzc2luZ0NvbnRlbnQgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ29udGVudCA9XG4gICAgQm9vbGVhbihwcm9wcy5pbnRsTWVzc2FnZSkgfHwgQm9vbGVhbihDaGlsZHJlbi5jb3VudChwcm9wcy5jaGlsZHJlbikpO1xuXG4gIHdhcm5pbmcoXG4gICAgaGFzQ29udGVudCxcbiAgICBbXG4gICAgICAnV2FybmluZzogRmFpbGVkIHByb3AgdHlwZTonLFxuICAgICAgYFRoZSBwcm9wIFxcYGludGxNZXNzYWdlXFxgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiBcXGBMaW5rXFxgYCxcbiAgICAgICdidXQgaXRzIHZhbHVlIGlzIGB1bmRlZmluZWRgJyxcbiAgICBdLmpvaW4oJyAnKVxuICApO1xuICB3YXJuaW5nKFxuICAgIGhhc0NvbnRlbnQsXG4gICAgW1xuICAgICAgJ1dhcm5pbmc6IEZhaWxlZCBwcm9wIHR5cGU6JyxcbiAgICAgIGBUaGUgcHJvcCBcXGBjaGlsZHJlblxcYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gXFxgTGlua1xcYGAsXG4gICAgICAnYnV0IGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYCcsXG4gICAgXS5qb2luKCcgJylcbiAgKTtcbn07XG5cbmNvbnN0IGdldEljb25CeVR5cGUgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIEVycm9ySWNvbjtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBJbmZvcm1hdGlvbkljb247XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gV2FybmluZ0ljb247XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBDaGVja0JvbGRJY29uO1xuICB9XG59O1xuXG5jb25zdCBnZXRJY29uQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZztcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IE5vdGlmaWNhdGlvblR5cGVJY29uID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIGNvbnN0IEljb24gPSBnZXRJY29uQnlUeXBlKHByb3BzKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmlsbDogJHtnZXRJY29uQ29sb3IocHJvcHMpfTtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBtYXJnaW46IDAgLTNweDtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICA+XG4gICAgICA8SWNvbiAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbk5vdGlmaWNhdGlvblR5cGVJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvblR5cGVJY29uJztcblxuY29uc3QgTm90aWZpY2F0aW9uQ2xvc2VJY29uID0gKFxuICBwcm9wczogUGljazxUQ29udGVudE5vdGlmaWNhdGlvblByb3BzLCAnb25SZW1vdmUnPlxuKSA9PiAoXG4gIDxBY2Nlc3NpYmxlQnV0dG9uXG4gICAgbGFiZWw9XCJSZW1vdmVcIlxuICAgIG9uQ2xpY2s9e3Byb3BzLm9uUmVtb3ZlfVxuICAgIGNzcz17Y3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw0MH07XG4gICAgICB9XG4gICAgYH1cbiAgPlxuICAgIDxDbG9zZUJvbGRJY29uIHNpemU9XCJtZWRpdW1cIiAvPlxuICA8L0FjY2Vzc2libGVCdXR0b24+XG4pO1xuTm90aWZpY2F0aW9uQ2xvc2VJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvbkNsb3NlSWNvbic7XG5cbmNvbnN0IGdldENvbnRlbnRCb3JkZXJDb2xvciA9IChwcm9wczogVENvbnRlbnROb3RpZmljYXRpb25Qcm9wcykgPT4ge1xuICBzd2l0Y2ggKHByb3BzLnR5cGUpIHtcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvODU7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckNvbnRlbnROb3RpZmljYXRpb25XaGVuU3VjY2VzcztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yOTU7XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzk1O1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc5NTtcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IENvbnRlbnROb3RpZmljYXRpb24gPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgd2FybklmTWlzc2luZ0NvbnRlbnQocHJvcHMpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgey4uLmZpbHRlckRhdGFBdHRyaWJ1dGVzKHByb3BzKX1cbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZTMwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItY29sb3I6ICR7Z2V0Q29udGVudEJvcmRlckNvbG9yKHByb3BzKX07XG4gICAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPE5vdGlmaWNhdGlvblR5cGVJY29uIHR5cGU9e3Byb3BzLnR5cGV9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMCAke2Rlc2lnblRva2Vucy5zcGFjaW5nMzB9IDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmludGxNZXNzYWdlID8gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZSB7Li4ucHJvcHMuaW50bE1lc3NhZ2V9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgcHJvcHMuY2hpbGRyZW5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAge3Byb3BzLm9uUmVtb3ZlICYmIDxOb3RpZmljYXRpb25DbG9zZUljb24gb25SZW1vdmU9e3Byb3BzLm9uUmVtb3ZlfSAvPn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Db250ZW50Tm90aWZpY2F0aW9uLmRpc3BsYXlOYW1lID0gJ0NvbnRlbnROb3RpZmljYXRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBDb250ZW50Tm90aWZpY2F0aW9uO1xuIl19 */"),
    children: jsxRuntime.jsx(Icon, {})
  });
};
NotificationTypeIcon.propTypes = process.env.NODE_ENV !== "production" ? {
  type: _pt__default["default"].oneOf(['error', 'info', 'warning', 'success']).isRequired,
  intlMessage: _pt__default["default"].oneOfType([_pt__default["default"].any, _pt__default["default"].shape({
    values: _pt__default["default"].objectOf(_pt__default["default"].node)
  })]),
  onRemove: _pt__default["default"].func,
  children: _pt__default["default"].node
} : {};
NotificationTypeIcon.displayName = 'NotificationTypeIcon';
const NotificationCloseIcon = props => jsxRuntime.jsx(AccessibleButton__default["default"], {
  label: "Remove",
  onClick: props.onRemove,
  css: /*#__PURE__*/react.css("display:flex;align-items:center;fill:", designSystem.designTokens.colorSolid, ";&:hover{fill:", designSystem.designTokens.colorNeutral40, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:NotificationCloseIcon;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQtbm90aWZpY2F0aW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErSFkiLCJmaWxlIjoiY29udGVudC1ub3RpZmljYXRpb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXNzYWdlRGVzY3JpcHRvciB9IGZyb20gJ3JlYWN0LWludGwnO1xuXG5pbXBvcnQge1xuICBDaGlsZHJlbixcbiAgdHlwZSBSZWFjdE5vZGUsXG4gIHR5cGUgTW91c2VFdmVudCxcbiAgdHlwZSBLZXlib2FyZEV2ZW50LFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtYXR0ZWRNZXNzYWdlIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgQWNjZXNzaWJsZUJ1dHRvbiBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9hY2Nlc3NpYmxlLWJ1dHRvbic7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB7XG4gIEVycm9ySWNvbixcbiAgV2FybmluZ0ljb24sXG4gIENoZWNrQm9sZEljb24sXG4gIENsb3NlQm9sZEljb24sXG4gIEluZm9ybWF0aW9uSWNvbixcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvaWNvbnMnO1xuaW1wb3J0IHsgZmlsdGVyRGF0YUF0dHJpYnV0ZXMsIHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5cbmV4cG9ydCB0eXBlIFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSBjb2xvci90eXBlIG9mIG5vdGlmaWNhdGlvbi5cbiAgICovXG4gIHR5cGU6ICdlcnJvcicgfCAnaW5mbycgfCAnd2FybmluZycgfCAnc3VjY2Vzcyc7XG5cbiAgLyoqXG4gICAqIEFuIGBpbnRsYCBtZXNzYWdlIG9iamVjdCB0aGF0IHdpbGwgYmUgcmVuZGVyZWQgd2l0aCBgRm9ybWF0dGVkTWVzc2FnZWAuXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgY2hpbGRyZW5gIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGludGxNZXNzYWdlPzogTWVzc2FnZURlc2NyaXB0b3IgJiB7XG4gICAgdmFsdWVzPzogUmVjb3JkPHN0cmluZywgUmVhY3ROb2RlPjtcbiAgfTtcblxuICAvKipcbiAgICogV2hlbiBwcm92aWRlZCwgYSBjbG9zZSBidXR0b24gd2lsbCBiZSByZW5kZXJlZCBhbmQgdGhpcyBjYWxsYmFjayB3aWxsIGJlXG4gICAqIGNhbGxlZCB3aGVuIGl0IGlzIGNsaWNrZWQuXG4gICAqL1xuICBvblJlbW92ZT86IChcbiAgICBldmVudDogTW91c2VFdmVudDxIVE1MRWxlbWVudD4gfCBLZXlib2FyZEV2ZW50PEhUTUxFbGVtZW50PlxuICApID0+IHZvaWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBub3RpZmljYXRpb24uXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgaW50bE1lc3NhZ2VgIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xufTtcblxuY29uc3Qgd2FybklmTWlzc2luZ0NvbnRlbnQgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ29udGVudCA9XG4gICAgQm9vbGVhbihwcm9wcy5pbnRsTWVzc2FnZSkgfHwgQm9vbGVhbihDaGlsZHJlbi5jb3VudChwcm9wcy5jaGlsZHJlbikpO1xuXG4gIHdhcm5pbmcoXG4gICAgaGFzQ29udGVudCxcbiAgICBbXG4gICAgICAnV2FybmluZzogRmFpbGVkIHByb3AgdHlwZTonLFxuICAgICAgYFRoZSBwcm9wIFxcYGludGxNZXNzYWdlXFxgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiBcXGBMaW5rXFxgYCxcbiAgICAgICdidXQgaXRzIHZhbHVlIGlzIGB1bmRlZmluZWRgJyxcbiAgICBdLmpvaW4oJyAnKVxuICApO1xuICB3YXJuaW5nKFxuICAgIGhhc0NvbnRlbnQsXG4gICAgW1xuICAgICAgJ1dhcm5pbmc6IEZhaWxlZCBwcm9wIHR5cGU6JyxcbiAgICAgIGBUaGUgcHJvcCBcXGBjaGlsZHJlblxcYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gXFxgTGlua1xcYGAsXG4gICAgICAnYnV0IGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYCcsXG4gICAgXS5qb2luKCcgJylcbiAgKTtcbn07XG5cbmNvbnN0IGdldEljb25CeVR5cGUgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIEVycm9ySWNvbjtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBJbmZvcm1hdGlvbkljb247XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gV2FybmluZ0ljb247XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBDaGVja0JvbGRJY29uO1xuICB9XG59O1xuXG5jb25zdCBnZXRJY29uQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZztcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IE5vdGlmaWNhdGlvblR5cGVJY29uID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIGNvbnN0IEljb24gPSBnZXRJY29uQnlUeXBlKHByb3BzKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmlsbDogJHtnZXRJY29uQ29sb3IocHJvcHMpfTtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBtYXJnaW46IDAgLTNweDtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICA+XG4gICAgICA8SWNvbiAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbk5vdGlmaWNhdGlvblR5cGVJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvblR5cGVJY29uJztcblxuY29uc3QgTm90aWZpY2F0aW9uQ2xvc2VJY29uID0gKFxuICBwcm9wczogUGljazxUQ29udGVudE5vdGlmaWNhdGlvblByb3BzLCAnb25SZW1vdmUnPlxuKSA9PiAoXG4gIDxBY2Nlc3NpYmxlQnV0dG9uXG4gICAgbGFiZWw9XCJSZW1vdmVcIlxuICAgIG9uQ2xpY2s9e3Byb3BzLm9uUmVtb3ZlfVxuICAgIGNzcz17Y3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw0MH07XG4gICAgICB9XG4gICAgYH1cbiAgPlxuICAgIDxDbG9zZUJvbGRJY29uIHNpemU9XCJtZWRpdW1cIiAvPlxuICA8L0FjY2Vzc2libGVCdXR0b24+XG4pO1xuTm90aWZpY2F0aW9uQ2xvc2VJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvbkNsb3NlSWNvbic7XG5cbmNvbnN0IGdldENvbnRlbnRCb3JkZXJDb2xvciA9IChwcm9wczogVENvbnRlbnROb3RpZmljYXRpb25Qcm9wcykgPT4ge1xuICBzd2l0Y2ggKHByb3BzLnR5cGUpIHtcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvODU7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckNvbnRlbnROb3RpZmljYXRpb25XaGVuU3VjY2VzcztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yOTU7XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzk1O1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc5NTtcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IENvbnRlbnROb3RpZmljYXRpb24gPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgd2FybklmTWlzc2luZ0NvbnRlbnQocHJvcHMpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgey4uLmZpbHRlckRhdGFBdHRyaWJ1dGVzKHByb3BzKX1cbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZTMwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItY29sb3I6ICR7Z2V0Q29udGVudEJvcmRlckNvbG9yKHByb3BzKX07XG4gICAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPE5vdGlmaWNhdGlvblR5cGVJY29uIHR5cGU9e3Byb3BzLnR5cGV9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMCAke2Rlc2lnblRva2Vucy5zcGFjaW5nMzB9IDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmludGxNZXNzYWdlID8gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZSB7Li4ucHJvcHMuaW50bE1lc3NhZ2V9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgcHJvcHMuY2hpbGRyZW5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAge3Byb3BzLm9uUmVtb3ZlICYmIDxOb3RpZmljYXRpb25DbG9zZUljb24gb25SZW1vdmU9e3Byb3BzLm9uUmVtb3ZlfSAvPn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Db250ZW50Tm90aWZpY2F0aW9uLmRpc3BsYXlOYW1lID0gJ0NvbnRlbnROb3RpZmljYXRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBDb250ZW50Tm90aWZpY2F0aW9uO1xuIl19 */"),
  children: jsxRuntime.jsx(icons.CloseBoldIcon, {
    size: "medium"
  })
});
NotificationCloseIcon.displayName = 'NotificationCloseIcon';
const getContentBorderColor = props => {
  switch (props.type) {
    case 'error':
      return designSystem.designTokens.colorError85;
    case 'info':
      return designSystem.designTokens.colorInfo85;
    case 'warning':
      return designSystem.designTokens.colorWarning85;
    case 'success':
      return designSystem.designTokens.borderColorForContentNotificationWhenSuccess;
    default:
      return '';
  }
};
const getContainerBackgroundColor = props => {
  switch (props.type) {
    case 'error':
      return designSystem.designTokens.colorError95;
    case 'info':
      return designSystem.designTokens.colorInfo95;
    case 'warning':
      return designSystem.designTokens.colorWarning95;
    case 'success':
      return designSystem.designTokens.backgroundColorForContentNotificationWhenSuccess;
    default:
      return '';
  }
};
const ContentNotification = props => {
  warnIfMissingContent(props);
  return jsxRuntime.jsxs("div", _objectSpread(_objectSpread({}, utils.filterDataAttributes(props)), {}, {
    css: /*#__PURE__*/react.css("display:flex;align-items:stretch;text-align:left;word-break:break-word;hyphens:auto;font-size:", designSystem.designTokens.fontSize30, ";color:", designSystem.designTokens.colorSolid, ";font-family:inherit;background-color:", getContainerBackgroundColor(props), ";border-radius:", designSystem.designTokens.borderRadius4, ";border-width:1px;border-style:solid;border-color:", getContentBorderColor(props), ";padding:", designSystem.designTokens.spacing20, " ", designSystem.designTokens.spacing30, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:ContentNotification;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQtbm90aWZpY2F0aW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpTGMiLCJmaWxlIjoiY29udGVudC1ub3RpZmljYXRpb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXNzYWdlRGVzY3JpcHRvciB9IGZyb20gJ3JlYWN0LWludGwnO1xuXG5pbXBvcnQge1xuICBDaGlsZHJlbixcbiAgdHlwZSBSZWFjdE5vZGUsXG4gIHR5cGUgTW91c2VFdmVudCxcbiAgdHlwZSBLZXlib2FyZEV2ZW50LFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtYXR0ZWRNZXNzYWdlIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgQWNjZXNzaWJsZUJ1dHRvbiBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9hY2Nlc3NpYmxlLWJ1dHRvbic7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB7XG4gIEVycm9ySWNvbixcbiAgV2FybmluZ0ljb24sXG4gIENoZWNrQm9sZEljb24sXG4gIENsb3NlQm9sZEljb24sXG4gIEluZm9ybWF0aW9uSWNvbixcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvaWNvbnMnO1xuaW1wb3J0IHsgZmlsdGVyRGF0YUF0dHJpYnV0ZXMsIHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5cbmV4cG9ydCB0eXBlIFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSBjb2xvci90eXBlIG9mIG5vdGlmaWNhdGlvbi5cbiAgICovXG4gIHR5cGU6ICdlcnJvcicgfCAnaW5mbycgfCAnd2FybmluZycgfCAnc3VjY2Vzcyc7XG5cbiAgLyoqXG4gICAqIEFuIGBpbnRsYCBtZXNzYWdlIG9iamVjdCB0aGF0IHdpbGwgYmUgcmVuZGVyZWQgd2l0aCBgRm9ybWF0dGVkTWVzc2FnZWAuXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgY2hpbGRyZW5gIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGludGxNZXNzYWdlPzogTWVzc2FnZURlc2NyaXB0b3IgJiB7XG4gICAgdmFsdWVzPzogUmVjb3JkPHN0cmluZywgUmVhY3ROb2RlPjtcbiAgfTtcblxuICAvKipcbiAgICogV2hlbiBwcm92aWRlZCwgYSBjbG9zZSBidXR0b24gd2lsbCBiZSByZW5kZXJlZCBhbmQgdGhpcyBjYWxsYmFjayB3aWxsIGJlXG4gICAqIGNhbGxlZCB3aGVuIGl0IGlzIGNsaWNrZWQuXG4gICAqL1xuICBvblJlbW92ZT86IChcbiAgICBldmVudDogTW91c2VFdmVudDxIVE1MRWxlbWVudD4gfCBLZXlib2FyZEV2ZW50PEhUTUxFbGVtZW50PlxuICApID0+IHZvaWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBub3RpZmljYXRpb24uXG4gICAqIDxiciAvPlxuICAgKiBSZXF1aXJlZCBpZiBgaW50bE1lc3NhZ2VgIGlzIG5vdCBwcm92aWRlZC5cbiAgICovXG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xufTtcblxuY29uc3Qgd2FybklmTWlzc2luZ0NvbnRlbnQgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ29udGVudCA9XG4gICAgQm9vbGVhbihwcm9wcy5pbnRsTWVzc2FnZSkgfHwgQm9vbGVhbihDaGlsZHJlbi5jb3VudChwcm9wcy5jaGlsZHJlbikpO1xuXG4gIHdhcm5pbmcoXG4gICAgaGFzQ29udGVudCxcbiAgICBbXG4gICAgICAnV2FybmluZzogRmFpbGVkIHByb3AgdHlwZTonLFxuICAgICAgYFRoZSBwcm9wIFxcYGludGxNZXNzYWdlXFxgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiBcXGBMaW5rXFxgYCxcbiAgICAgICdidXQgaXRzIHZhbHVlIGlzIGB1bmRlZmluZWRgJyxcbiAgICBdLmpvaW4oJyAnKVxuICApO1xuICB3YXJuaW5nKFxuICAgIGhhc0NvbnRlbnQsXG4gICAgW1xuICAgICAgJ1dhcm5pbmc6IEZhaWxlZCBwcm9wIHR5cGU6JyxcbiAgICAgIGBUaGUgcHJvcCBcXGBjaGlsZHJlblxcYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gXFxgTGlua1xcYGAsXG4gICAgICAnYnV0IGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYCcsXG4gICAgXS5qb2luKCcgJylcbiAgKTtcbn07XG5cbmNvbnN0IGdldEljb25CeVR5cGUgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIEVycm9ySWNvbjtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBJbmZvcm1hdGlvbkljb247XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gV2FybmluZ0ljb247XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBDaGVja0JvbGRJY29uO1xuICB9XG59O1xuXG5jb25zdCBnZXRJY29uQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZztcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IE5vdGlmaWNhdGlvblR5cGVJY29uID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIGNvbnN0IEljb24gPSBnZXRJY29uQnlUeXBlKHByb3BzKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmlsbDogJHtnZXRJY29uQ29sb3IocHJvcHMpfTtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBtYXJnaW46IDAgLTNweDtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICA+XG4gICAgICA8SWNvbiAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbk5vdGlmaWNhdGlvblR5cGVJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvblR5cGVJY29uJztcblxuY29uc3QgTm90aWZpY2F0aW9uQ2xvc2VJY29uID0gKFxuICBwcm9wczogUGljazxUQ29udGVudE5vdGlmaWNhdGlvblByb3BzLCAnb25SZW1vdmUnPlxuKSA9PiAoXG4gIDxBY2Nlc3NpYmxlQnV0dG9uXG4gICAgbGFiZWw9XCJSZW1vdmVcIlxuICAgIG9uQ2xpY2s9e3Byb3BzLm9uUmVtb3ZlfVxuICAgIGNzcz17Y3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw0MH07XG4gICAgICB9XG4gICAgYH1cbiAgPlxuICAgIDxDbG9zZUJvbGRJY29uIHNpemU9XCJtZWRpdW1cIiAvPlxuICA8L0FjY2Vzc2libGVCdXR0b24+XG4pO1xuTm90aWZpY2F0aW9uQ2xvc2VJY29uLmRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvbkNsb3NlSWNvbic7XG5cbmNvbnN0IGdldENvbnRlbnRCb3JkZXJDb2xvciA9IChwcm9wczogVENvbnRlbnROb3RpZmljYXRpb25Qcm9wcykgPT4ge1xuICBzd2l0Y2ggKHByb3BzLnR5cGUpIHtcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvODU7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckNvbnRlbnROb3RpZmljYXRpb25XaGVuU3VjY2VzcztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yOTU7XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzk1O1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc5NTtcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29udGVudE5vdGlmaWNhdGlvbldoZW5TdWNjZXNzO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbmNvbnN0IENvbnRlbnROb3RpZmljYXRpb24gPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgd2FybklmTWlzc2luZ0NvbnRlbnQocHJvcHMpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgey4uLmZpbHRlckRhdGFBdHRyaWJ1dGVzKHByb3BzKX1cbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZTMwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItY29sb3I6ICR7Z2V0Q29udGVudEJvcmRlckNvbG9yKHByb3BzKX07XG4gICAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPE5vdGlmaWNhdGlvblR5cGVJY29uIHR5cGU9e3Byb3BzLnR5cGV9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMCAke2Rlc2lnblRva2Vucy5zcGFjaW5nMzB9IDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmludGxNZXNzYWdlID8gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZSB7Li4ucHJvcHMuaW50bE1lc3NhZ2V9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgcHJvcHMuY2hpbGRyZW5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAge3Byb3BzLm9uUmVtb3ZlICYmIDxOb3RpZmljYXRpb25DbG9zZUljb24gb25SZW1vdmU9e3Byb3BzLm9uUmVtb3ZlfSAvPn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Db250ZW50Tm90aWZpY2F0aW9uLmRpc3BsYXlOYW1lID0gJ0NvbnRlbnROb3RpZmljYXRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBDb250ZW50Tm90aWZpY2F0aW9uO1xuIl19 */"),
    children: [jsxRuntime.jsx(NotificationTypeIcon, {
      type: props.type
    }), jsxRuntime.jsx("div", {
      css: /*#__PURE__*/react.css("flex-grow:1;display:flex;align-items:center;padding:0 ", designSystem.designTokens.spacing30, " 0 ", designSystem.designTokens.spacing20, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:ContentNotification;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQtbm90aWZpY2F0aW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvTWdCIiwiZmlsZSI6ImNvbnRlbnQtbm90aWZpY2F0aW9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWVzc2FnZURlc2NyaXB0b3IgfSBmcm9tICdyZWFjdC1pbnRsJztcblxuaW1wb3J0IHtcbiAgQ2hpbGRyZW4sXG4gIHR5cGUgUmVhY3ROb2RlLFxuICB0eXBlIE1vdXNlRXZlbnQsXG4gIHR5cGUgS2V5Ym9hcmRFdmVudCxcbn0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRm9ybWF0dGVkTWVzc2FnZSB9IGZyb20gJ3JlYWN0LWludGwnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IEFjY2Vzc2libGVCdXR0b24gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvYWNjZXNzaWJsZS1idXR0b24nO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQge1xuICBFcnJvckljb24sXG4gIFdhcm5pbmdJY29uLFxuICBDaGVja0JvbGRJY29uLFxuICBDbG9zZUJvbGRJY29uLFxuICBJbmZvcm1hdGlvbkljb24sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2ljb25zJztcbmltcG9ydCB7IGZpbHRlckRhdGFBdHRyaWJ1dGVzLCB3YXJuaW5nIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuXG5leHBvcnQgdHlwZSBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzID0ge1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB0aGUgY29sb3IvdHlwZSBvZiBub3RpZmljYXRpb24uXG4gICAqL1xuICB0eXBlOiAnZXJyb3InIHwgJ2luZm8nIHwgJ3dhcm5pbmcnIHwgJ3N1Y2Nlc3MnO1xuXG4gIC8qKlxuICAgKiBBbiBgaW50bGAgbWVzc2FnZSBvYmplY3QgdGhhdCB3aWxsIGJlIHJlbmRlcmVkIHdpdGggYEZvcm1hdHRlZE1lc3NhZ2VgLlxuICAgKiA8YnIgLz5cbiAgICogUmVxdWlyZWQgaWYgYGNoaWxkcmVuYCBpcyBub3QgcHJvdmlkZWQuXG4gICAqL1xuICBpbnRsTWVzc2FnZT86IE1lc3NhZ2VEZXNjcmlwdG9yICYge1xuICAgIHZhbHVlcz86IFJlY29yZDxzdHJpbmcsIFJlYWN0Tm9kZT47XG4gIH07XG5cbiAgLyoqXG4gICAqIFdoZW4gcHJvdmlkZWQsIGEgY2xvc2UgYnV0dG9uIHdpbGwgYmUgcmVuZGVyZWQgYW5kIHRoaXMgY2FsbGJhY2sgd2lsbCBiZVxuICAgKiBjYWxsZWQgd2hlbiBpdCBpcyBjbGlja2VkLlxuICAgKi9cbiAgb25SZW1vdmU/OiAoXG4gICAgZXZlbnQ6IE1vdXNlRXZlbnQ8SFRNTEVsZW1lbnQ+IHwgS2V5Ym9hcmRFdmVudDxIVE1MRWxlbWVudD5cbiAgKSA9PiB2b2lkO1xuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgbm90aWZpY2F0aW9uLlxuICAgKiA8YnIgLz5cbiAgICogUmVxdWlyZWQgaWYgYGludGxNZXNzYWdlYCBpcyBub3QgcHJvdmlkZWQuXG4gICAqL1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbn07XG5cbmNvbnN0IHdhcm5JZk1pc3NpbmdDb250ZW50ID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIGNvbnN0IGhhc0NvbnRlbnQgPVxuICAgIEJvb2xlYW4ocHJvcHMuaW50bE1lc3NhZ2UpIHx8IEJvb2xlYW4oQ2hpbGRyZW4uY291bnQocHJvcHMuY2hpbGRyZW4pKTtcblxuICB3YXJuaW5nKFxuICAgIGhhc0NvbnRlbnQsXG4gICAgW1xuICAgICAgJ1dhcm5pbmc6IEZhaWxlZCBwcm9wIHR5cGU6JyxcbiAgICAgIGBUaGUgcHJvcCBcXGBpbnRsTWVzc2FnZVxcYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gXFxgTGlua1xcYGAsXG4gICAgICAnYnV0IGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYCcsXG4gICAgXS5qb2luKCcgJylcbiAgKTtcbiAgd2FybmluZyhcbiAgICBoYXNDb250ZW50LFxuICAgIFtcbiAgICAgICdXYXJuaW5nOiBGYWlsZWQgcHJvcCB0eXBlOicsXG4gICAgICBgVGhlIHByb3AgXFxgY2hpbGRyZW5cXGAgaXMgbWFya2VkIGFzIHJlcXVpcmVkIGluIFxcYExpbmtcXGBgLFxuICAgICAgJ2J1dCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAnLFxuICAgIF0uam9pbignICcpXG4gICk7XG59O1xuXG5jb25zdCBnZXRJY29uQnlUeXBlID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIHN3aXRjaCAocHJvcHMudHlwZSkge1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIHJldHVybiBFcnJvckljb247XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICByZXR1cm4gSW5mb3JtYXRpb25JY29uO1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIFdhcm5pbmdJY29uO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gQ2hlY2tCb2xkSWNvbjtcbiAgfVxufTtcblxuY29uc3QgZ2V0SWNvbkNvbG9yID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIHN3aXRjaCAocHJvcHMudHlwZSkge1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvO1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvckNvbnRlbnROb3RpZmljYXRpb25XaGVuU3VjY2VzcztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5jb25zdCBOb3RpZmljYXRpb25UeXBlSWNvbiA9IChwcm9wczogVENvbnRlbnROb3RpZmljYXRpb25Qcm9wcykgPT4ge1xuICBjb25zdCBJY29uID0gZ2V0SWNvbkJ5VHlwZShwcm9wcyk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGZpbGw6ICR7Z2V0SWNvbkNvbG9yKHByb3BzKX07XG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgbWFyZ2luOiAwIC0zcHg7XG4gICAgICAgIH1cbiAgICAgIGB9XG4gICAgPlxuICAgICAgPEljb24gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Ob3RpZmljYXRpb25UeXBlSWNvbi5kaXNwbGF5TmFtZSA9ICdOb3RpZmljYXRpb25UeXBlSWNvbic7XG5cbmNvbnN0IE5vdGlmaWNhdGlvbkNsb3NlSWNvbiA9IChcbiAgcHJvcHM6IFBpY2s8VENvbnRlbnROb3RpZmljYXRpb25Qcm9wcywgJ29uUmVtb3ZlJz5cbikgPT4gKFxuICA8QWNjZXNzaWJsZUJ1dHRvblxuICAgIGxhYmVsPVwiUmVtb3ZlXCJcbiAgICBvbkNsaWNrPXtwcm9wcy5vblJlbW92ZX1cbiAgICBjc3M9e2Nzc2BcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZH07XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNDB9O1xuICAgICAgfVxuICAgIGB9XG4gID5cbiAgICA8Q2xvc2VCb2xkSWNvbiBzaXplPVwibWVkaXVtXCIgLz5cbiAgPC9BY2Nlc3NpYmxlQnV0dG9uPlxuKTtcbk5vdGlmaWNhdGlvbkNsb3NlSWNvbi5kaXNwbGF5TmFtZSA9ICdOb3RpZmljYXRpb25DbG9zZUljb24nO1xuXG5jb25zdCBnZXRDb250ZW50Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRDb250ZW50Tm90aWZpY2F0aW9uUHJvcHMpID0+IHtcbiAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yODU7XG4gICAgY2FzZSAnaW5mbyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc4NTtcbiAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JDb250ZW50Tm90aWZpY2F0aW9uV2hlblN1Y2Nlc3M7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIHN3aXRjaCAocHJvcHMudHlwZSkge1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjk1O1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckluZm85NTtcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nOTU7XG4gICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvckNvbnRlbnROb3RpZmljYXRpb25XaGVuU3VjY2VzcztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5jb25zdCBDb250ZW50Tm90aWZpY2F0aW9uID0gKHByb3BzOiBUQ29udGVudE5vdGlmaWNhdGlvblByb3BzKSA9PiB7XG4gIHdhcm5JZk1pc3NpbmdDb250ZW50KHByb3BzKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgICAgIGh5cGhlbnM6IGF1dG87XG4gICAgICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemUzMH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgICAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAke2dldENvbnRlbnRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxOb3RpZmljYXRpb25UeXBlSWNvbiB0eXBlPXtwcm9wcy50eXBlfSAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfSAwICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH07XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIHtwcm9wcy5pbnRsTWVzc2FnZSA/IChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2Ugey4uLnByb3BzLmludGxNZXNzYWdlfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogKFxuICAgICAgICAgIHByb3BzLmNoaWxkcmVuXG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICAgIHtwcm9wcy5vblJlbW92ZSAmJiA8Tm90aWZpY2F0aW9uQ2xvc2VJY29uIG9uUmVtb3ZlPXtwcm9wcy5vblJlbW92ZX0gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuQ29udGVudE5vdGlmaWNhdGlvbi5kaXNwbGF5TmFtZSA9ICdDb250ZW50Tm90aWZpY2F0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgQ29udGVudE5vdGlmaWNhdGlvbjtcbiJdfQ== */"),
      children: props.intlMessage ? jsxRuntime.jsx("div", {
        children: jsxRuntime.jsx(reactIntl.FormattedMessage, _objectSpread({}, props.intlMessage))
      }) : props.children
    }), props.onRemove && jsxRuntime.jsx(NotificationCloseIcon, {
      onRemove: props.onRemove
    })]
  }));
};
ContentNotification.propTypes = process.env.NODE_ENV !== "production" ? {
  type: _pt__default["default"].oneOf(['error', 'info', 'warning', 'success']).isRequired,
  intlMessage: _pt__default["default"].oneOfType([_pt__default["default"].any, _pt__default["default"].shape({
    values: _pt__default["default"].objectOf(_pt__default["default"].node)
  })]),
  onRemove: _pt__default["default"].func,
  children: _pt__default["default"].node
} : {};
ContentNotification.displayName = 'ContentNotification';
var ContentNotification$1 = ContentNotification;

// NOTE: This string will be replaced on build time with the package version.
var version = "18.3.0";

exports.ContentNotification = ContentNotification$1;
exports.version = version;
