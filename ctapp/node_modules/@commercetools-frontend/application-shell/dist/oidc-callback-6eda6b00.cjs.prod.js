'use strict';

var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
require('prop-types');
var _URL = require('@babel/runtime-corejs3/core-js-stable/url');
var react = require('react');
var jwtDecode = require('jwt-decode');
var qss = require('qss');
var reactRouterDom = require('react-router-dom');
var applicationShellConnectors = require('@commercetools-frontend/application-shell-connectors');
var redirector = require('./redirector-15844d9b.cjs.prod.js');
var _styled = require('@emotion/styled/base');
var applicationComponents = require('@commercetools-frontend/application-components');
var FailedAuthenticationSVGRebranding = require('@commercetools-frontend/assets/images/doors-closed-rebranding.svg');
var FailedAuthenticationSVG = require('@commercetools-frontend/assets/images/doors-closed.svg');
var i18n = require('@commercetools-frontend/i18n');
var Card = require('@commercetools-uikit/card');
var Constraints = require('@commercetools-uikit/constraints');
var designSystem = require('@commercetools-uikit/design-system');
var FlatButton = require('@commercetools-uikit/flat-button');
var icons = require('@commercetools-uikit/icons');
var notifications = require('@commercetools-uikit/notifications');
var Spacings = require('@commercetools-uikit/spacings');
var Text = require('@commercetools-uikit/text');
var dist_commercetoolsFrontendApplicationShell = require('./index-e452a65f.cjs.prod.js');
var jsxRuntime = require('@emotion/react/jsx-runtime');
require('@babel/runtime-corejs3/core-js-stable/object/keys');
require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
require('@babel/runtime-corejs3/core-js-stable/instance/filter');
require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
require('@babel/runtime-corejs3/core-js-stable/object/define-property');
require('@babel/runtime-corejs3/helpers/defineProperty');
require('./use-is-served-by-proxy-845cace5.cjs.prod.js');
require('./index-6cd618cc.cjs.prod.js');
require('@babel/runtime-corejs3/core-js-stable/instance/reduce');
require('@babel/runtime-corejs3/core-js-stable/object/entries');
require('@babel/runtime-corejs3/core-js-stable/reflect/has');
require('@reduxjs/toolkit');
require('lodash/mapValues');
require('omit-empty-es');
require('redux-thunk');
require('@commercetools-frontend/constants');
require('@commercetools-frontend/notifications');
require('@commercetools-frontend/sdk');
require('@babel/runtime-corejs3/core-js-stable/instance/index-of');
require('@babel/runtime-corejs3/core-js-stable/instance/slice');
require('@babel/runtime-corejs3/core-js-stable/instance/includes');
require('@commercetools-frontend/sentry');
require('@commercetools-frontend/react-notifications');
require('@babel/runtime-corejs3/core-js-stable/instance/starts-with');
require('redux-logger');
require('@babel/runtime-corejs3/core-js-stable/instance/find');
require('@babel/runtime-corejs3/core-js-stable/array/is-array');
require('@emotion/react');
require('./oidc-cfa56c46.cjs.prod.js');
require('@babel/runtime-corejs3/core-js-stable/instance/concat');
require('@babel/runtime-corejs3/core-js-stable/instance/map');
require('react-intl');
require('@babel/runtime-corejs3/helpers/taggedTemplateLiteral');
require('@babel/runtime-corejs3/helpers/objectWithoutProperties');
require('memoize-one');
require('react-select');
require('@commercetools-uikit/accessible-hidden');
require('@commercetools-uikit/select-input');
require('@commercetools-frontend/assets/images/ct-logo.svg');
require('@commercetools-uikit/loading-spinner');
require('@commercetools-frontend/browser-history');
require('@commercetools-frontend/l10n');
require('@babel/runtime-corejs3/core-js-stable/reflect/construct');
require('@babel/runtime-corejs3/helpers/classCallCheck');
require('@babel/runtime-corejs3/helpers/createClass');
require('@babel/runtime-corejs3/helpers/inherits');
require('@babel/runtime-corejs3/helpers/possibleConstructorReturn');
require('@babel/runtime-corejs3/helpers/getPrototypeOf');
require('@babel/runtime-corejs3/core-js-stable/object/from-entries');
require('@babel/runtime-corejs3/core-js-stable/instance/flags');
require('@apollo/client/react');
require('@flopflip/combine-adapters');
require('@flopflip/http-adapter');
require('@flopflip/launchdarkly-adapter');
require('@flopflip/react-broadcast');
require('react-redux');
require('lodash/upperFirst');
require('@commercetools-uikit/design-system/materials/resets.css');
require('@commercetools-frontend/application-config/ssr');
require('@commercetools-frontend/permissions');
require('@flopflip/memory-adapter');
require('@babel/runtime-corejs3/core-js-stable/json/stringify');
require('@babel/runtime-corejs3/core-js-stable/instance/some');
require('@commercetools-frontend/actions-global');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _URL__default = /*#__PURE__*/_interopDefault(_URL);
var jwtDecode__default = /*#__PURE__*/_interopDefault(jwtDecode);
var _styled__default = /*#__PURE__*/_interopDefault(_styled);
var FailedAuthenticationSVGRebranding__default = /*#__PURE__*/_interopDefault(FailedAuthenticationSVGRebranding);
var FailedAuthenticationSVG__default = /*#__PURE__*/_interopDefault(FailedAuthenticationSVG);
var Card__default = /*#__PURE__*/_interopDefault(Card);
var Constraints__default = /*#__PURE__*/_interopDefault(Constraints);
var FlatButton__default = /*#__PURE__*/_interopDefault(FlatButton);
var Spacings__default = /*#__PURE__*/_interopDefault(Spacings);
var Text__default = /*#__PURE__*/_interopDefault(Text);

const Divider = /*#__PURE__*/_styled__default["default"]("div", {
  target: "e57nw7s0"
} )("box-sizing:border-box;width:100%;margin:0;border:0;border-style:solid;border-top-width:1px;border-top-color:", designSystem.customProperties.colorNeutral, ";" + ("" ));
const AuthCallbackErrorPage = props => {
  const history = reactRouterDom.useHistory();
  const _useTheme = designSystem.useTheme(),
    themedValue = _useTheme.themedValue;
  return jsxRuntime.jsx(i18n.AsyncLocaleData, {
    locale: props.locale,
    applicationMessages: props.applicationMessages,
    children: _ref => {
      let locale = _ref.locale,
        messages = _ref.messages;
      return jsxRuntime.jsxs(dist_commercetoolsFrontendApplicationShell.ConfigureIntlProvider, {
        locale: locale,
        messages: messages,
        children: [jsxRuntime.jsx(designSystem.ThemeProvider, {
          theme: "default",
          themeOverrides: applicationComponents.themesOverrides.default
        }), jsxRuntime.jsx(applicationComponents.PublicPageLayout, {
          contentScale: "wide",
          children: jsxRuntime.jsx(Spacings__default["default"].Inline, {
            justifyContent: "center",
            children: jsxRuntime.jsx(Constraints__default["default"].Horizontal, {
              max: 11,
              children: jsxRuntime.jsx(Card__default["default"], {
                insetScale: "xl",
                children: jsxRuntime.jsxs(Spacings__default["default"].Stack, {
                  scale: "l",
                  children: [jsxRuntime.jsx(Spacings__default["default"].Inline, {
                    justifyContent: "center",
                    children: jsxRuntime.jsx("img", {
                      width: "100%",
                      src: themedValue(FailedAuthenticationSVG__default["default"], FailedAuthenticationSVGRebranding__default["default"]),
                      alt: "Failed authentication"
                    })
                  }), jsxRuntime.jsx(Text__default["default"].Headline, {
                    as: "h2",
                    children: 'Authentication error'
                  }), jsxRuntime.jsx(notifications.ContentNotification, {
                    type: "error",
                    children: jsxRuntime.jsx(Spacings__default["default"].Stack, {
                      scale: "m",
                      children: jsxRuntime.jsx(Text__default["default"].Body, {
                        children: props.message
                      })
                    })
                  }), jsxRuntime.jsxs(Spacings__default["default"].Stack, {
                    scale: "m",
                    children: [jsxRuntime.jsx(Divider, {}), jsxRuntime.jsx(FlatButton__default["default"], {
                      label: "Try log in again",
                      icon: jsxRuntime.jsx(icons.AngleLeftIcon, {}),
                      onClick: () => {
                        history.push('/');
                      }
                    })]
                  })]
                })
              })
            })
          })
        })]
      });
    }
  });
};
AuthCallbackErrorPage.displayName = 'AuthCallbackErrorPage';

const OidcCallback = props => {
  const location = reactRouterDom.useLocation();
  const redirector$1 = redirector.useRedirector();
  const _useState = react.useState(),
    _useState2 = _slicedToArray(_useState, 2),
    message = _useState2[0],
    setMessage = _useState2[1];
  const fragments = qss.decode(location.hash.substring(1));
  const sessionToken = fragments.sessionToken;
  react.useEffect(() => {
    // Validate the nonce (coming as a `state` parameter)
    // By trying to load the related session state, we can implicitly check if the nonce is correct or not.
    const sessionState = applicationShellConnectors.oidcStorage.getSessionState(fragments.state);
    let errorMessage;
    let decodedSessionToken;
    try {
      if (sessionToken) {
        decodedSessionToken = jwtDecode__default["default"](sessionToken);
      } else {
        errorMessage = 'Invalid client session (missing sessionToken)';
      }
    } catch (err) {
      if (err instanceof Error) {
        errorMessage = err.message;
      } else {
        errorMessage = 'Unknown error';
      }
    }
    if (!errorMessage) {
      var _decodedSessionToken;
      const hasValidSessionId = ((_decodedSessionToken = decodedSessionToken) === null || _decodedSessionToken === void 0 ? void 0 : _decodedSessionToken.nonce) === fragments.state;
      const hasValidApplicationId = window.app.applicationId === (sessionState === null || sessionState === void 0 ? void 0 : sessionState.applicationId);
      if (!sessionState || !hasValidSessionId || !hasValidApplicationId) {
        errorMessage = 'Invalid client session';
      }
    }
    if (errorMessage) {
      setMessage(errorMessage);
    } else {
      applicationShellConnectors.oidcStorage.setActiveSession(sessionToken);
      applicationShellConnectors.oidcStorage.removeSessionState(fragments.state);
      if (sessionState !== null && sessionState !== void 0 && sessionState.query.redirectTo) {
        try {
          const redirectToUrl = new _URL__default["default"](sessionState.query.redirectTo);
          redirector$1({
            to: redirectToUrl.pathname
          });
          return;
        } catch (error) {
          console.warn("Invalid \"redirectTo\" URL", sessionState.query.redirectTo);
          // ignore
        }
      }

      redirector$1({
        to: location.pathname.replace('/oidc/callback', '')
      });
      return;
    }

    // Only execute once!
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  if (message) {
    return jsxRuntime.jsx(AuthCallbackErrorPage, {
      message: message,
      locale: props.locale,
      applicationMessages: props.applicationMessages
    });
  }
  return null;
};
OidcCallback.propTypes = {};
OidcCallback.displayName = 'OidcCallback';

exports["default"] = OidcCallback;
