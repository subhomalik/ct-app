/// <reference types="react" />
import { type TApplicationContext } from '@commercetools-frontend/application-shell-connectors';
import type { TNavbarMenuGroup } from '../../types/generated/proxy';
type HookProps = {
    environment: TApplicationContext<{}>['environment'];
};
declare const useNavbarStateManager: (props: HookProps) => {
    navBarNode: import("react").RefObject<HTMLElement>;
    handleToggleItem: (nextActiveItemIndex: string) => void;
    handleToggleMenu: () => void;
    shouldCloseMenuFly: (e: React.MouseEvent<HTMLElement> | MouseEvent | FocusEvent) => void;
    allApplicationsNavbarMenuGroups: TNavbarMenuGroup[];
    activeItemIndex?: string | undefined;
    isExpanderVisible: boolean;
    isMenuOpen: boolean;
};
export default useNavbarStateManager;
